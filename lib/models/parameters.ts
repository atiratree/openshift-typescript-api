/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const asFile: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "asFile"
  ],
  mapper: {
    serializedName: "asFile",
    type: {
      name: "String"
    }
  }
};
export const command: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "command"
  ],
  mapper: {
    serializedName: "command",
    type: {
      name: "String"
    }
  }
};
export const container: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "container"
  ],
  mapper: {
    serializedName: "container",
    type: {
      name: "String"
    }
  }
};
export const continueParameter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "continueParameter"
  ],
  mapper: {
    serializedName: "continue",
    type: {
      name: "String"
    }
  }
};
export const exact: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "exact"
  ],
  mapper: {
    serializedName: "exact",
    type: {
      name: "Boolean"
    }
  }
};
export const exportParameter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "exportParameter"
  ],
  mapper: {
    serializedName: "export",
    type: {
      name: "Boolean"
    }
  }
};
export const fieldSelector: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fieldSelector"
  ],
  mapper: {
    serializedName: "fieldSelector",
    type: {
      name: "String"
    }
  }
};
export const follow: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "follow"
  ],
  mapper: {
    serializedName: "follow",
    type: {
      name: "Boolean"
    }
  }
};
export const gracePeriodSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "gracePeriodSeconds"
  ],
  mapper: {
    serializedName: "gracePeriodSeconds",
    type: {
      name: "Number"
    }
  }
};
export const includeUninitialized: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeUninitialized"
  ],
  mapper: {
    serializedName: "includeUninitialized",
    type: {
      name: "Boolean"
    }
  }
};
export const labelSelector: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "labelSelector"
  ],
  mapper: {
    serializedName: "labelSelector",
    type: {
      name: "String"
    }
  }
};
export const limit: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "limit"
  ],
  mapper: {
    serializedName: "limit",
    type: {
      name: "Number"
    }
  }
};
export const limitBytes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "limitBytes"
  ],
  mapper: {
    serializedName: "limitBytes",
    type: {
      name: "Number"
    }
  }
};
export const name: msRest.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const namespace: msRest.OperationURLParameter = {
  parameterPath: "namespace",
  mapper: {
    required: true,
    serializedName: "namespace",
    type: {
      name: "String"
    }
  }
};
export const nowait: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "nowait"
  ],
  mapper: {
    serializedName: "nowait",
    type: {
      name: "Boolean"
    }
  }
};
export const orphanDependents: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "orphanDependents"
  ],
  mapper: {
    serializedName: "orphanDependents",
    type: {
      name: "Boolean"
    }
  }
};
export const path0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "path"
  ],
  mapper: {
    serializedName: "path",
    type: {
      name: "String"
    }
  }
};
export const path1: msRest.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    required: true,
    serializedName: "path",
    type: {
      name: "String"
    }
  }
};
export const ports: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "ports"
  ],
  mapper: {
    serializedName: "ports",
    type: {
      name: "Number"
    }
  }
};
export const pretty: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "pretty"
  ],
  mapper: {
    serializedName: "pretty",
    type: {
      name: "String"
    }
  }
};
export const previous: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "previous"
  ],
  mapper: {
    serializedName: "previous",
    type: {
      name: "Boolean"
    }
  }
};
export const propagationPolicy: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "propagationPolicy"
  ],
  mapper: {
    serializedName: "propagationPolicy",
    type: {
      name: "String"
    }
  }
};
export const resourceVersion: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "resourceVersion"
  ],
  mapper: {
    serializedName: "resourceVersion",
    type: {
      name: "String"
    }
  }
};
export const revisionauthorEmail: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisionauthorEmail"
  ],
  mapper: {
    serializedName: "revision.authorEmail",
    type: {
      name: "String"
    }
  }
};
export const revisionauthorName: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisionauthorName"
  ],
  mapper: {
    serializedName: "revision.authorName",
    type: {
      name: "String"
    }
  }
};
export const revisioncommit: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisioncommit"
  ],
  mapper: {
    serializedName: "revision.commit",
    type: {
      name: "String"
    }
  }
};
export const revisioncommitterEmail: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisioncommitterEmail"
  ],
  mapper: {
    serializedName: "revision.committerEmail",
    type: {
      name: "String"
    }
  }
};
export const revisioncommitterName: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisioncommitterName"
  ],
  mapper: {
    serializedName: "revision.committerName",
    type: {
      name: "String"
    }
  }
};
export const revisionmessage: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "revisionmessage"
  ],
  mapper: {
    serializedName: "revision.message",
    type: {
      name: "String"
    }
  }
};
export const sinceSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "sinceSeconds"
  ],
  mapper: {
    serializedName: "sinceSeconds",
    type: {
      name: "Number"
    }
  }
};
export const stderr: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "stderr"
  ],
  mapper: {
    serializedName: "stderr",
    type: {
      name: "Boolean"
    }
  }
};
export const stdin: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "stdin"
  ],
  mapper: {
    serializedName: "stdin",
    type: {
      name: "Boolean"
    }
  }
};
export const stdout: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "stdout"
  ],
  mapper: {
    serializedName: "stdout",
    type: {
      name: "Boolean"
    }
  }
};
export const tailLines: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "tailLines"
  ],
  mapper: {
    serializedName: "tailLines",
    type: {
      name: "Number"
    }
  }
};
export const timeoutSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "timeoutSeconds"
  ],
  mapper: {
    serializedName: "timeoutSeconds",
    type: {
      name: "Number"
    }
  }
};
export const timestamps: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "timestamps"
  ],
  mapper: {
    serializedName: "timestamps",
    type: {
      name: "Boolean"
    }
  }
};
export const tty: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "tty"
  ],
  mapper: {
    serializedName: "tty",
    type: {
      name: "Boolean"
    }
  }
};
export const version: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "version"
  ],
  mapper: {
    serializedName: "version",
    type: {
      name: "Number"
    }
  }
};
export const watch: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "watch"
  ],
  mapper: {
    serializedName: "watch",
    type: {
      name: "Boolean"
    }
  }
};
