/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const V1ConfigMapKeySelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapKeySelector",
  type: {
    name: "Composite",
    className: "V1ConfigMapKeySelector",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1ObjectFieldSelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ObjectFieldSelector",
  type: {
    name: "Composite",
    className: "V1ObjectFieldSelector",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      fieldPath: {
        required: true,
        serializedName: "fieldPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ResourceFieldSelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceFieldSelector",
  type: {
    name: "Composite",
    className: "V1ResourceFieldSelector",
    modelProperties: {
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      divisor: {
        serializedName: "divisor",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1SecretKeySelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretKeySelector",
  type: {
    name: "Composite",
    className: "V1SecretKeySelector",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1EnvVarSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EnvVarSource",
  type: {
    name: "Composite",
    className: "V1EnvVarSource",
    modelProperties: {
      configMapKeyRef: {
        serializedName: "configMapKeyRef",
        type: {
          name: "Composite",
          className: "V1ConfigMapKeySelector"
        }
      },
      fieldRef: {
        serializedName: "fieldRef",
        type: {
          name: "Composite",
          className: "V1ObjectFieldSelector"
        }
      },
      resourceFieldRef: {
        serializedName: "resourceFieldRef",
        type: {
          name: "Composite",
          className: "V1ResourceFieldSelector"
        }
      },
      secretKeyRef: {
        serializedName: "secretKeyRef",
        type: {
          name: "Composite",
          className: "V1SecretKeySelector"
        }
      }
    }
  }
};

export const V1EnvVar: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EnvVar",
  type: {
    name: "Composite",
    className: "V1EnvVar",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      valueFrom: {
        serializedName: "valueFrom",
        type: {
          name: "Composite",
          className: "V1EnvVarSource"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.CustomDeploymentStrategyParams",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams",
    modelProperties: {
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      environment: {
        serializedName: "environment",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ObjectReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ObjectReference",
  type: {
    name: "Composite",
    className: "V1ObjectReference",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      fieldPath: {
        serializedName: "fieldPath",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentCauseImageTrigger",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentCause",
    modelProperties: {
      imageTrigger: {
        serializedName: "imageTrigger",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentCondition: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentCondition",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1Initializer: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1Initializer",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1StatusCause: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1StatusCause",
    modelProperties: {
      field: {
        serializedName: "field",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1StatusDetails: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1StatusDetails",
    modelProperties: {
      causes: {
        serializedName: "causes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1StatusCause"
            }
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      retryAfterSeconds: {
        serializedName: "retryAfterSeconds",
        type: {
          name: "Number"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1ListMeta: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1ListMeta",
    modelProperties: {
      continueProperty: {
        serializedName: "continue",
        type: {
          name: "String"
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      selfLink: {
        serializedName: "selfLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1Status: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.Status",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1Status",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1StatusDetails"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1Initializers: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1Initializers",
    modelProperties: {
      pending: {
        required: true,
        serializedName: "pending",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1Initializer"
            }
          }
        }
      },
      result: {
        serializedName: "result",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1Status"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1OwnerReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1OwnerReference",
    modelProperties: {
      apiVersion: {
        required: true,
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      blockOwnerDeletion: {
        serializedName: "blockOwnerDeletion",
        type: {
          name: "Boolean"
        }
      },
      controller: {
        serializedName: "controller",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      uid: {
        required: true,
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1ObjectMeta: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1ObjectMeta",
    modelProperties: {
      annotations: {
        serializedName: "annotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      clusterName: {
        serializedName: "clusterName",
        type: {
          name: "String"
        }
      },
      creationTimestamp: {
        serializedName: "creationTimestamp",
        type: {
          name: "DateTime"
        }
      },
      deletionGracePeriodSeconds: {
        serializedName: "deletionGracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      deletionTimestamp: {
        serializedName: "deletionTimestamp",
        type: {
          name: "DateTime"
        }
      },
      finalizers: {
        serializedName: "finalizers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      generateName: {
        serializedName: "generateName",
        type: {
          name: "String"
        }
      },
      generation: {
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      initializers: {
        serializedName: "initializers",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1Initializers"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      ownerReferences: {
        serializedName: "ownerReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1OwnerReference"
            }
          }
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      selfLink: {
        serializedName: "selfLink",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1ExecNewPodHook: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.ExecNewPodHook",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1ExecNewPodHook",
    modelProperties: {
      command: {
        required: true,
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      containerName: {
        required: true,
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1TagImageHook: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.TagImageHook",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1TagImageHook",
    modelProperties: {
      containerName: {
        required: true,
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1LifecycleHook: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.LifecycleHook",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1LifecycleHook",
    modelProperties: {
      execNewPod: {
        serializedName: "execNewPod",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1ExecNewPodHook"
        }
      },
      failurePolicy: {
        required: true,
        serializedName: "failurePolicy",
        type: {
          name: "String"
        }
      },
      tagImages: {
        serializedName: "tagImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiappsv1TagImageHook"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.RecreateDeploymentStrategyParams",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams",
    modelProperties: {
      mid: {
        serializedName: "mid",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1LifecycleHook"
        }
      },
      post: {
        serializedName: "post",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1LifecycleHook"
        }
      },
      pre: {
        serializedName: "pre",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1LifecycleHook"
        }
      },
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1ResourceRequirements: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceRequirements",
  type: {
    name: "Composite",
    className: "V1ResourceRequirements",
    modelProperties: {
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.RollingDeploymentStrategyParams",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams",
    modelProperties: {
      intervalSeconds: {
        serializedName: "intervalSeconds",
        type: {
          name: "Number"
        }
      },
      maxSurge: {
        serializedName: "maxSurge",
        type: {
          name: "String"
        }
      },
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      },
      post: {
        serializedName: "post",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1LifecycleHook"
        }
      },
      pre: {
        serializedName: "pre",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1LifecycleHook"
        }
      },
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      },
      updatePeriodSeconds: {
        serializedName: "updatePeriodSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentStrategy",
    modelProperties: {
      activeDeadlineSeconds: {
        serializedName: "activeDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      annotations: {
        serializedName: "annotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      customParams: {
        serializedName: "customParams",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      recreateParams: {
        serializedName: "recreateParams",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      rollingParams: {
        serializedName: "rollingParams",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NodeSelectorRequirement: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeSelectorRequirement",
  type: {
    name: "Composite",
    className: "V1NodeSelectorRequirement",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1NodeSelectorTerm: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeSelectorTerm",
  type: {
    name: "Composite",
    className: "V1NodeSelectorTerm",
    modelProperties: {
      matchExpressions: {
        serializedName: "matchExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorRequirement"
            }
          }
        }
      },
      matchFields: {
        serializedName: "matchFields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorRequirement"
            }
          }
        }
      }
    }
  }
};

export const V1PreferredSchedulingTerm: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PreferredSchedulingTerm",
  type: {
    name: "Composite",
    className: "V1PreferredSchedulingTerm",
    modelProperties: {
      preference: {
        required: true,
        serializedName: "preference",
        type: {
          name: "Composite",
          className: "V1NodeSelectorTerm"
        }
      },
      weight: {
        required: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1NodeSelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeSelector",
  type: {
    name: "Composite",
    className: "V1NodeSelector",
    modelProperties: {
      nodeSelectorTerms: {
        required: true,
        serializedName: "nodeSelectorTerms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorTerm"
            }
          }
        }
      }
    }
  }
};

export const V1NodeAffinity: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeAffinity",
  type: {
    name: "Composite",
    className: "V1NodeAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PreferredSchedulingTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Composite",
          className: "V1NodeSelector"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1LabelSelectorRequirement: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1LabelSelectorRequirement",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1LabelSelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1LabelSelector",
    modelProperties: {
      matchExpressions: {
        serializedName: "matchExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1LabelSelectorRequirement"
            }
          }
        }
      },
      matchLabels: {
        serializedName: "matchLabels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1PodAffinityTerm: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodAffinityTerm",
  type: {
    name: "Composite",
    className: "V1PodAffinityTerm",
    modelProperties: {
      labelSelector: {
        serializedName: "labelSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      namespaces: {
        serializedName: "namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      topologyKey: {
        required: true,
        serializedName: "topologyKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1WeightedPodAffinityTerm: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.WeightedPodAffinityTerm",
  type: {
    name: "Composite",
    className: "V1WeightedPodAffinityTerm",
    modelProperties: {
      podAffinityTerm: {
        required: true,
        serializedName: "podAffinityTerm",
        type: {
          name: "Composite",
          className: "V1PodAffinityTerm"
        }
      },
      weight: {
        required: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1PodAffinity: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodAffinity",
  type: {
    name: "Composite",
    className: "V1PodAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1WeightedPodAffinityTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodAffinityTerm"
            }
          }
        }
      }
    }
  }
};

export const V1PodAntiAffinity: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodAntiAffinity",
  type: {
    name: "Composite",
    className: "V1PodAntiAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1WeightedPodAffinityTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodAffinityTerm"
            }
          }
        }
      }
    }
  }
};

export const V1Affinity: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Affinity",
  type: {
    name: "Composite",
    className: "V1Affinity",
    modelProperties: {
      nodeAffinity: {
        serializedName: "nodeAffinity",
        type: {
          name: "Composite",
          className: "V1NodeAffinity"
        }
      },
      podAffinity: {
        serializedName: "podAffinity",
        type: {
          name: "Composite",
          className: "V1PodAffinity"
        }
      },
      podAntiAffinity: {
        serializedName: "podAntiAffinity",
        type: {
          name: "Composite",
          className: "V1PodAntiAffinity"
        }
      }
    }
  }
};

export const V1ConfigMapEnvSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapEnvSource",
  type: {
    name: "Composite",
    className: "V1ConfigMapEnvSource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1SecretEnvSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretEnvSource",
  type: {
    name: "Composite",
    className: "V1SecretEnvSource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1EnvFromSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EnvFromSource",
  type: {
    name: "Composite",
    className: "V1EnvFromSource",
    modelProperties: {
      configMapRef: {
        serializedName: "configMapRef",
        type: {
          name: "Composite",
          className: "V1ConfigMapEnvSource"
        }
      },
      prefix: {
        serializedName: "prefix",
        type: {
          name: "String"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretEnvSource"
        }
      }
    }
  }
};

export const V1ExecAction: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ExecAction",
  type: {
    name: "Composite",
    className: "V1ExecAction",
    modelProperties: {
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1HTTPHeader: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.HTTPHeader",
  type: {
    name: "Composite",
    className: "V1HTTPHeader",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1HTTPGetAction: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.HTTPGetAction",
  type: {
    name: "Composite",
    className: "V1HTTPGetAction",
    modelProperties: {
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      httpHeaders: {
        serializedName: "httpHeaders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1HTTPHeader"
            }
          }
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1TCPSocketAction: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.TCPSocketAction",
  type: {
    name: "Composite",
    className: "V1TCPSocketAction",
    modelProperties: {
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Handler: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Handler",
  type: {
    name: "Composite",
    className: "V1Handler",
    modelProperties: {
      exec: {
        serializedName: "exec",
        type: {
          name: "Composite",
          className: "V1ExecAction"
        }
      },
      httpGet: {
        serializedName: "httpGet",
        type: {
          name: "Composite",
          className: "V1HTTPGetAction"
        }
      },
      tcpSocket: {
        serializedName: "tcpSocket",
        type: {
          name: "Composite",
          className: "V1TCPSocketAction"
        }
      }
    }
  }
};

export const V1Lifecycle: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Lifecycle",
  type: {
    name: "Composite",
    className: "V1Lifecycle",
    modelProperties: {
      postStart: {
        serializedName: "postStart",
        type: {
          name: "Composite",
          className: "V1Handler"
        }
      },
      preStop: {
        serializedName: "preStop",
        type: {
          name: "Composite",
          className: "V1Handler"
        }
      }
    }
  }
};

export const V1Probe: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Probe",
  type: {
    name: "Composite",
    className: "V1Probe",
    modelProperties: {
      exec: {
        serializedName: "exec",
        type: {
          name: "Composite",
          className: "V1ExecAction"
        }
      },
      failureThreshold: {
        serializedName: "failureThreshold",
        type: {
          name: "Number"
        }
      },
      httpGet: {
        serializedName: "httpGet",
        type: {
          name: "Composite",
          className: "V1HTTPGetAction"
        }
      },
      initialDelaySeconds: {
        serializedName: "initialDelaySeconds",
        type: {
          name: "Number"
        }
      },
      periodSeconds: {
        serializedName: "periodSeconds",
        type: {
          name: "Number"
        }
      },
      successThreshold: {
        serializedName: "successThreshold",
        type: {
          name: "Number"
        }
      },
      tcpSocket: {
        serializedName: "tcpSocket",
        type: {
          name: "Composite",
          className: "V1TCPSocketAction"
        }
      },
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1ContainerPort: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerPort",
  type: {
    name: "Composite",
    className: "V1ContainerPort",
    modelProperties: {
      containerPort: {
        required: true,
        serializedName: "containerPort",
        type: {
          name: "Number"
        }
      },
      hostIP: {
        serializedName: "hostIP",
        type: {
          name: "String"
        }
      },
      hostPort: {
        serializedName: "hostPort",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Capabilities: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Capabilities",
  type: {
    name: "Composite",
    className: "V1Capabilities",
    modelProperties: {
      add: {
        serializedName: "add",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      drop: {
        serializedName: "drop",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1SELinuxOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SELinuxOptions",
  type: {
    name: "Composite",
    className: "V1SELinuxOptions",
    modelProperties: {
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1SecurityContext: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecurityContext",
  type: {
    name: "Composite",
    className: "V1SecurityContext",
    modelProperties: {
      allowPrivilegeEscalation: {
        serializedName: "allowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "V1Capabilities"
        }
      },
      privileged: {
        serializedName: "privileged",
        type: {
          name: "Boolean"
        }
      },
      readOnlyRootFilesystem: {
        serializedName: "readOnlyRootFilesystem",
        type: {
          name: "Boolean"
        }
      },
      runAsGroup: {
        serializedName: "runAsGroup",
        type: {
          name: "Number"
        }
      },
      runAsNonRoot: {
        serializedName: "runAsNonRoot",
        type: {
          name: "Boolean"
        }
      },
      runAsUser: {
        serializedName: "runAsUser",
        type: {
          name: "Number"
        }
      },
      seLinuxOptions: {
        serializedName: "seLinuxOptions",
        type: {
          name: "Composite",
          className: "V1SELinuxOptions"
        }
      }
    }
  }
};

export const V1VolumeDevice: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.VolumeDevice",
  type: {
    name: "Composite",
    className: "V1VolumeDevice",
    modelProperties: {
      devicePath: {
        required: true,
        serializedName: "devicePath",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VolumeMount: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.VolumeMount",
  type: {
    name: "Composite",
    className: "V1VolumeMount",
    modelProperties: {
      mountPath: {
        required: true,
        serializedName: "mountPath",
        type: {
          name: "String"
        }
      },
      mountPropagation: {
        serializedName: "mountPropagation",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      subPath: {
        serializedName: "subPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Container: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Container",
  type: {
    name: "Composite",
    className: "V1Container",
    modelProperties: {
      args: {
        serializedName: "args",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      envFrom: {
        serializedName: "envFrom",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvFromSource"
            }
          }
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      imagePullPolicy: {
        serializedName: "imagePullPolicy",
        type: {
          name: "String"
        }
      },
      lifecycle: {
        serializedName: "lifecycle",
        type: {
          name: "Composite",
          className: "V1Lifecycle"
        }
      },
      livenessProbe: {
        serializedName: "livenessProbe",
        type: {
          name: "Composite",
          className: "V1Probe"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ContainerPort"
            }
          }
        }
      },
      readinessProbe: {
        serializedName: "readinessProbe",
        type: {
          name: "Composite",
          className: "V1Probe"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      securityContext: {
        serializedName: "securityContext",
        type: {
          name: "Composite",
          className: "V1SecurityContext"
        }
      },
      stdin: {
        serializedName: "stdin",
        type: {
          name: "Boolean"
        }
      },
      stdinOnce: {
        serializedName: "stdinOnce",
        type: {
          name: "Boolean"
        }
      },
      terminationMessagePath: {
        serializedName: "terminationMessagePath",
        type: {
          name: "String"
        }
      },
      terminationMessagePolicy: {
        serializedName: "terminationMessagePolicy",
        type: {
          name: "String"
        }
      },
      tty: {
        serializedName: "tty",
        type: {
          name: "Boolean"
        }
      },
      volumeDevices: {
        serializedName: "volumeDevices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VolumeDevice"
            }
          }
        }
      },
      volumeMounts: {
        serializedName: "volumeMounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VolumeMount"
            }
          }
        }
      },
      workingDir: {
        serializedName: "workingDir",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodDNSConfigOption: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodDNSConfigOption",
  type: {
    name: "Composite",
    className: "V1PodDNSConfigOption",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodDNSConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodDNSConfig",
  type: {
    name: "Composite",
    className: "V1PodDNSConfig",
    modelProperties: {
      nameservers: {
        serializedName: "nameservers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      options: {
        serializedName: "options",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodDNSConfigOption"
            }
          }
        }
      },
      searches: {
        serializedName: "searches",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1HostAlias: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.HostAlias",
  type: {
    name: "Composite",
    className: "V1HostAlias",
    modelProperties: {
      hostnames: {
        serializedName: "hostnames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ip: {
        serializedName: "ip",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1LocalObjectReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LocalObjectReference",
  type: {
    name: "Composite",
    className: "V1LocalObjectReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodReadinessGate: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodReadinessGate",
  type: {
    name: "Composite",
    className: "V1PodReadinessGate",
    modelProperties: {
      conditionType: {
        required: true,
        serializedName: "conditionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Sysctl: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Sysctl",
  type: {
    name: "Composite",
    className: "V1Sysctl",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodSecurityContext: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodSecurityContext",
  type: {
    name: "Composite",
    className: "V1PodSecurityContext",
    modelProperties: {
      fsGroup: {
        serializedName: "fsGroup",
        type: {
          name: "Number"
        }
      },
      runAsGroup: {
        serializedName: "runAsGroup",
        type: {
          name: "Number"
        }
      },
      runAsNonRoot: {
        serializedName: "runAsNonRoot",
        type: {
          name: "Boolean"
        }
      },
      runAsUser: {
        serializedName: "runAsUser",
        type: {
          name: "Number"
        }
      },
      seLinuxOptions: {
        serializedName: "seLinuxOptions",
        type: {
          name: "Composite",
          className: "V1SELinuxOptions"
        }
      },
      supplementalGroups: {
        serializedName: "supplementalGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      sysctls: {
        serializedName: "sysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Sysctl"
            }
          }
        }
      }
    }
  }
};

export const V1Toleration: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Toleration",
  type: {
    name: "Composite",
    className: "V1Toleration",
    modelProperties: {
      effect: {
        serializedName: "effect",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      tolerationSeconds: {
        serializedName: "tolerationSeconds",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1AWSElasticBlockStoreVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
  type: {
    name: "Composite",
    className: "V1AWSElasticBlockStoreVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      partition: {
        serializedName: "partition",
        type: {
          name: "Number"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      volumeID: {
        required: true,
        serializedName: "volumeID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1AzureDiskVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.AzureDiskVolumeSource",
  type: {
    name: "Composite",
    className: "V1AzureDiskVolumeSource",
    modelProperties: {
      cachingMode: {
        serializedName: "cachingMode",
        type: {
          name: "String"
        }
      },
      diskName: {
        required: true,
        serializedName: "diskName",
        type: {
          name: "String"
        }
      },
      diskURI: {
        required: true,
        serializedName: "diskURI",
        type: {
          name: "String"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1AzureFileVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.AzureFileVolumeSource",
  type: {
    name: "Composite",
    className: "V1AzureFileVolumeSource",
    modelProperties: {
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretName: {
        required: true,
        serializedName: "secretName",
        type: {
          name: "String"
        }
      },
      shareName: {
        required: true,
        serializedName: "shareName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CephFSVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.CephFSVolumeSource",
  type: {
    name: "Composite",
    className: "V1CephFSVolumeSource",
    modelProperties: {
      monitors: {
        required: true,
        serializedName: "monitors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretFile: {
        serializedName: "secretFile",
        type: {
          name: "String"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CinderVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.CinderVolumeSource",
  type: {
    name: "Composite",
    className: "V1CinderVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      volumeID: {
        required: true,
        serializedName: "volumeID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1KeyToPath: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.KeyToPath",
  type: {
    name: "Composite",
    className: "V1KeyToPath",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      mode: {
        serializedName: "mode",
        type: {
          name: "Number"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ConfigMapVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapVolumeSource",
  type: {
    name: "Composite",
    className: "V1ConfigMapVolumeSource",
    modelProperties: {
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "Number"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1KeyToPath"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1DownwardAPIVolumeFile: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.DownwardAPIVolumeFile",
  type: {
    name: "Composite",
    className: "V1DownwardAPIVolumeFile",
    modelProperties: {
      fieldRef: {
        serializedName: "fieldRef",
        type: {
          name: "Composite",
          className: "V1ObjectFieldSelector"
        }
      },
      mode: {
        serializedName: "mode",
        type: {
          name: "Number"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      resourceFieldRef: {
        serializedName: "resourceFieldRef",
        type: {
          name: "Composite",
          className: "V1ResourceFieldSelector"
        }
      }
    }
  }
};

export const V1DownwardAPIVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.DownwardAPIVolumeSource",
  type: {
    name: "Composite",
    className: "V1DownwardAPIVolumeSource",
    modelProperties: {
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "Number"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1DownwardAPIVolumeFile"
            }
          }
        }
      }
    }
  }
};

export const V1EmptyDirVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EmptyDirVolumeSource",
  type: {
    name: "Composite",
    className: "V1EmptyDirVolumeSource",
    modelProperties: {
      medium: {
        serializedName: "medium",
        type: {
          name: "String"
        }
      },
      sizeLimit: {
        serializedName: "sizeLimit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1FCVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.FCVolumeSource",
  type: {
    name: "Composite",
    className: "V1FCVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      lun: {
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      targetWWNs: {
        serializedName: "targetWWNs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      wwids: {
        serializedName: "wwids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1FlexVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.FlexVolumeSource",
  type: {
    name: "Composite",
    className: "V1FlexVolumeSource",
    modelProperties: {
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      options: {
        serializedName: "options",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const V1FlockerVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.FlockerVolumeSource",
  type: {
    name: "Composite",
    className: "V1FlockerVolumeSource",
    modelProperties: {
      datasetName: {
        serializedName: "datasetName",
        type: {
          name: "String"
        }
      },
      datasetUUID: {
        serializedName: "datasetUUID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1GCEPersistentDiskVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
  type: {
    name: "Composite",
    className: "V1GCEPersistentDiskVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      partition: {
        serializedName: "partition",
        type: {
          name: "Number"
        }
      },
      pdName: {
        required: true,
        serializedName: "pdName",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1GitRepoVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.GitRepoVolumeSource",
  type: {
    name: "Composite",
    className: "V1GitRepoVolumeSource",
    modelProperties: {
      directory: {
        serializedName: "directory",
        type: {
          name: "String"
        }
      },
      repository: {
        required: true,
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1GlusterfsVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.GlusterfsVolumeSource",
  type: {
    name: "Composite",
    className: "V1GlusterfsVolumeSource",
    modelProperties: {
      endpoints: {
        required: true,
        serializedName: "endpoints",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1HostPathVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.HostPathVolumeSource",
  type: {
    name: "Composite",
    className: "V1HostPathVolumeSource",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ISCSIVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ISCSIVolumeSource",
  type: {
    name: "Composite",
    className: "V1ISCSIVolumeSource",
    modelProperties: {
      chapAuthDiscovery: {
        serializedName: "chapAuthDiscovery",
        type: {
          name: "Boolean"
        }
      },
      chapAuthSession: {
        serializedName: "chapAuthSession",
        type: {
          name: "Boolean"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      initiatorName: {
        serializedName: "initiatorName",
        type: {
          name: "String"
        }
      },
      iqn: {
        required: true,
        serializedName: "iqn",
        type: {
          name: "String"
        }
      },
      iscsiInterface: {
        serializedName: "iscsiInterface",
        type: {
          name: "String"
        }
      },
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      portals: {
        serializedName: "portals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      targetPortal: {
        required: true,
        serializedName: "targetPortal",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NFSVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NFSVolumeSource",
  type: {
    name: "Composite",
    className: "V1NFSVolumeSource",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      server: {
        required: true,
        serializedName: "server",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimVolumeSource",
    modelProperties: {
      claimName: {
        required: true,
        serializedName: "claimName",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1PhotonPersistentDiskVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
  type: {
    name: "Composite",
    className: "V1PhotonPersistentDiskVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      pdID: {
        required: true,
        serializedName: "pdID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PortworxVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PortworxVolumeSource",
  type: {
    name: "Composite",
    className: "V1PortworxVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      volumeID: {
        required: true,
        serializedName: "volumeID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ConfigMapProjection: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapProjection",
  type: {
    name: "Composite",
    className: "V1ConfigMapProjection",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1KeyToPath"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1DownwardAPIProjection: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.DownwardAPIProjection",
  type: {
    name: "Composite",
    className: "V1DownwardAPIProjection",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1DownwardAPIVolumeFile"
            }
          }
        }
      }
    }
  }
};

export const V1SecretProjection: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretProjection",
  type: {
    name: "Composite",
    className: "V1SecretProjection",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1KeyToPath"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1ServiceAccountTokenProjection: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceAccountTokenProjection",
  type: {
    name: "Composite",
    className: "V1ServiceAccountTokenProjection",
    modelProperties: {
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      },
      expirationSeconds: {
        serializedName: "expirationSeconds",
        type: {
          name: "Number"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VolumeProjection: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.VolumeProjection",
  type: {
    name: "Composite",
    className: "V1VolumeProjection",
    modelProperties: {
      configMap: {
        serializedName: "configMap",
        type: {
          name: "Composite",
          className: "V1ConfigMapProjection"
        }
      },
      downwardAPI: {
        serializedName: "downwardAPI",
        type: {
          name: "Composite",
          className: "V1DownwardAPIProjection"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1SecretProjection"
        }
      },
      serviceAccountToken: {
        serializedName: "serviceAccountToken",
        type: {
          name: "Composite",
          className: "V1ServiceAccountTokenProjection"
        }
      }
    }
  }
};

export const V1ProjectedVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ProjectedVolumeSource",
  type: {
    name: "Composite",
    className: "V1ProjectedVolumeSource",
    modelProperties: {
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "Number"
        }
      },
      sources: {
        required: true,
        serializedName: "sources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VolumeProjection"
            }
          }
        }
      }
    }
  }
};

export const V1QuobyteVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.QuobyteVolumeSource",
  type: {
    name: "Composite",
    className: "V1QuobyteVolumeSource",
    modelProperties: {
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      registry: {
        required: true,
        serializedName: "registry",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      volume: {
        required: true,
        serializedName: "volume",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1RBDVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.RBDVolumeSource",
  type: {
    name: "Composite",
    className: "V1RBDVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      keyring: {
        serializedName: "keyring",
        type: {
          name: "String"
        }
      },
      monitors: {
        required: true,
        serializedName: "monitors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pool: {
        serializedName: "pool",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ScaleIOVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ScaleIOVolumeSource",
  type: {
    name: "Composite",
    className: "V1ScaleIOVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      gateway: {
        required: true,
        serializedName: "gateway",
        type: {
          name: "String"
        }
      },
      protectionDomain: {
        serializedName: "protectionDomain",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        required: true,
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      sslEnabled: {
        serializedName: "sslEnabled",
        type: {
          name: "Boolean"
        }
      },
      storageMode: {
        serializedName: "storageMode",
        type: {
          name: "String"
        }
      },
      storagePool: {
        serializedName: "storagePool",
        type: {
          name: "String"
        }
      },
      system: {
        required: true,
        serializedName: "system",
        type: {
          name: "String"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1SecretVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretVolumeSource",
  type: {
    name: "Composite",
    className: "V1SecretVolumeSource",
    modelProperties: {
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "Number"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1KeyToPath"
            }
          }
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      },
      secretName: {
        serializedName: "secretName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1StorageOSVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.StorageOSVolumeSource",
  type: {
    name: "Composite",
    className: "V1StorageOSVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      },
      volumeNamespace: {
        serializedName: "volumeNamespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VsphereVirtualDiskVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
  type: {
    name: "Composite",
    className: "V1VsphereVirtualDiskVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      storagePolicyID: {
        serializedName: "storagePolicyID",
        type: {
          name: "String"
        }
      },
      storagePolicyName: {
        serializedName: "storagePolicyName",
        type: {
          name: "String"
        }
      },
      volumePath: {
        required: true,
        serializedName: "volumePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Volume: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Volume",
  type: {
    name: "Composite",
    className: "V1Volume",
    modelProperties: {
      awsElasticBlockStore: {
        serializedName: "awsElasticBlockStore",
        type: {
          name: "Composite",
          className: "V1AWSElasticBlockStoreVolumeSource"
        }
      },
      azureDisk: {
        serializedName: "azureDisk",
        type: {
          name: "Composite",
          className: "V1AzureDiskVolumeSource"
        }
      },
      azureFile: {
        serializedName: "azureFile",
        type: {
          name: "Composite",
          className: "V1AzureFileVolumeSource"
        }
      },
      cephfs: {
        serializedName: "cephfs",
        type: {
          name: "Composite",
          className: "V1CephFSVolumeSource"
        }
      },
      cinder: {
        serializedName: "cinder",
        type: {
          name: "Composite",
          className: "V1CinderVolumeSource"
        }
      },
      configMap: {
        serializedName: "configMap",
        type: {
          name: "Composite",
          className: "V1ConfigMapVolumeSource"
        }
      },
      downwardAPI: {
        serializedName: "downwardAPI",
        type: {
          name: "Composite",
          className: "V1DownwardAPIVolumeSource"
        }
      },
      emptyDir: {
        serializedName: "emptyDir",
        type: {
          name: "Composite",
          className: "V1EmptyDirVolumeSource"
        }
      },
      fc: {
        serializedName: "fc",
        type: {
          name: "Composite",
          className: "V1FCVolumeSource"
        }
      },
      flexVolume: {
        serializedName: "flexVolume",
        type: {
          name: "Composite",
          className: "V1FlexVolumeSource"
        }
      },
      flocker: {
        serializedName: "flocker",
        type: {
          name: "Composite",
          className: "V1FlockerVolumeSource"
        }
      },
      gcePersistentDisk: {
        serializedName: "gcePersistentDisk",
        type: {
          name: "Composite",
          className: "V1GCEPersistentDiskVolumeSource"
        }
      },
      gitRepo: {
        serializedName: "gitRepo",
        type: {
          name: "Composite",
          className: "V1GitRepoVolumeSource"
        }
      },
      glusterfs: {
        serializedName: "glusterfs",
        type: {
          name: "Composite",
          className: "V1GlusterfsVolumeSource"
        }
      },
      hostPath: {
        serializedName: "hostPath",
        type: {
          name: "Composite",
          className: "V1HostPathVolumeSource"
        }
      },
      iscsi: {
        serializedName: "iscsi",
        type: {
          name: "Composite",
          className: "V1ISCSIVolumeSource"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      nfs: {
        serializedName: "nfs",
        type: {
          name: "Composite",
          className: "V1NFSVolumeSource"
        }
      },
      persistentVolumeClaim: {
        serializedName: "persistentVolumeClaim",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimVolumeSource"
        }
      },
      photonPersistentDisk: {
        serializedName: "photonPersistentDisk",
        type: {
          name: "Composite",
          className: "V1PhotonPersistentDiskVolumeSource"
        }
      },
      portworxVolume: {
        serializedName: "portworxVolume",
        type: {
          name: "Composite",
          className: "V1PortworxVolumeSource"
        }
      },
      projected: {
        serializedName: "projected",
        type: {
          name: "Composite",
          className: "V1ProjectedVolumeSource"
        }
      },
      quobyte: {
        serializedName: "quobyte",
        type: {
          name: "Composite",
          className: "V1QuobyteVolumeSource"
        }
      },
      rbd: {
        serializedName: "rbd",
        type: {
          name: "Composite",
          className: "V1RBDVolumeSource"
        }
      },
      scaleIO: {
        serializedName: "scaleIO",
        type: {
          name: "Composite",
          className: "V1ScaleIOVolumeSource"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1SecretVolumeSource"
        }
      },
      storageos: {
        serializedName: "storageos",
        type: {
          name: "Composite",
          className: "V1StorageOSVolumeSource"
        }
      },
      vsphereVolume: {
        serializedName: "vsphereVolume",
        type: {
          name: "Composite",
          className: "V1VsphereVirtualDiskVolumeSource"
        }
      }
    }
  }
};

export const V1PodSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodSpec",
  type: {
    name: "Composite",
    className: "V1PodSpec",
    modelProperties: {
      activeDeadlineSeconds: {
        serializedName: "activeDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      affinity: {
        serializedName: "affinity",
        type: {
          name: "Composite",
          className: "V1Affinity"
        }
      },
      automountServiceAccountToken: {
        serializedName: "automountServiceAccountToken",
        type: {
          name: "Boolean"
        }
      },
      containers: {
        required: true,
        serializedName: "containers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Container"
            }
          }
        }
      },
      dnsConfig: {
        serializedName: "dnsConfig",
        type: {
          name: "Composite",
          className: "V1PodDNSConfig"
        }
      },
      dnsPolicy: {
        serializedName: "dnsPolicy",
        type: {
          name: "String"
        }
      },
      hostAliases: {
        serializedName: "hostAliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1HostAlias"
            }
          }
        }
      },
      hostIPC: {
        serializedName: "hostIPC",
        type: {
          name: "Boolean"
        }
      },
      hostNetwork: {
        serializedName: "hostNetwork",
        type: {
          name: "Boolean"
        }
      },
      hostPID: {
        serializedName: "hostPID",
        type: {
          name: "Boolean"
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      imagePullSecrets: {
        serializedName: "imagePullSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LocalObjectReference"
            }
          }
        }
      },
      initContainers: {
        serializedName: "initContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Container"
            }
          }
        }
      },
      nodeName: {
        serializedName: "nodeName",
        type: {
          name: "String"
        }
      },
      nodeSelector: {
        serializedName: "nodeSelector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "Number"
        }
      },
      priorityClassName: {
        serializedName: "priorityClassName",
        type: {
          name: "String"
        }
      },
      readinessGates: {
        serializedName: "readinessGates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodReadinessGate"
            }
          }
        }
      },
      restartPolicy: {
        serializedName: "restartPolicy",
        type: {
          name: "String"
        }
      },
      schedulerName: {
        serializedName: "schedulerName",
        type: {
          name: "String"
        }
      },
      securityContext: {
        serializedName: "securityContext",
        type: {
          name: "Composite",
          className: "V1PodSecurityContext"
        }
      },
      serviceAccount: {
        serializedName: "serviceAccount",
        type: {
          name: "String"
        }
      },
      serviceAccountName: {
        serializedName: "serviceAccountName",
        type: {
          name: "String"
        }
      },
      shareProcessNamespace: {
        serializedName: "shareProcessNamespace",
        type: {
          name: "Boolean"
        }
      },
      subdomain: {
        serializedName: "subdomain",
        type: {
          name: "String"
        }
      },
      terminationGracePeriodSeconds: {
        serializedName: "terminationGracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      tolerations: {
        serializedName: "tolerations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Toleration"
            }
          }
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Volume"
            }
          }
        }
      }
    }
  }
};

export const V1PodTemplateSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodTemplateSpec",
  type: {
    name: "Composite",
    className: "V1PodTemplateSpec",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1PodSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentTriggerImageChangeParams",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams",
    modelProperties: {
      automatic: {
        serializedName: "automatic",
        type: {
          name: "Boolean"
        }
      },
      containerNames: {
        serializedName: "containerNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      lastTriggeredImage: {
        serializedName: "lastTriggeredImage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentTriggerPolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentTriggerPolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentTriggerPolicy",
    modelProperties: {
      imageChangeParams: {
        serializedName: "imageChangeParams",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfigSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfigSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfigSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      strategy: {
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentStrategy"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      test: {
        serializedName: "test",
        type: {
          name: "Boolean"
        }
      },
      triggers: {
        serializedName: "triggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiappsv1DeploymentTriggerPolicy"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentDetails: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentDetails",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentDetails",
    modelProperties: {
      causes: {
        required: true,
        serializedName: "causes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiappsv1DeploymentCause"
            }
          }
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfigStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfigStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfigStatus",
    modelProperties: {
      availableReplicas: {
        required: true,
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiappsv1DeploymentCondition"
            }
          }
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentDetails"
        }
      },
      latestVersion: {
        required: true,
        serializedName: "latestVersion",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        required: true,
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      unavailableReplicas: {
        required: true,
        serializedName: "unavailableReplicas",
        type: {
          name: "Number"
        }
      },
      updatedReplicas: {
        required: true,
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfig: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfig",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfig",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentConfigSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentConfigStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfigList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfigList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfigList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiappsv1DeploymentConfig"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfigRollbackSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      includeReplicationMeta: {
        required: true,
        serializedName: "includeReplicationMeta",
        type: {
          name: "Boolean"
        }
      },
      includeStrategy: {
        required: true,
        serializedName: "includeStrategy",
        type: {
          name: "Boolean"
        }
      },
      includeTemplate: {
        required: true,
        serializedName: "includeTemplate",
        type: {
          name: "Boolean"
        }
      },
      includeTriggers: {
        required: true,
        serializedName: "includeTriggers",
        type: {
          name: "Boolean"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentConfigRollback: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentConfigRollback",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentConfigRollback",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec"
        }
      },
      updatedAnnotations: {
        serializedName: "updatedAnnotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentLog: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentLog",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentLog",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiappsv1DeploymentRequest: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.apps.v1.DeploymentRequest",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiappsv1DeploymentRequest",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      excludeTriggers: {
        serializedName: "excludeTriggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      force: {
        required: true,
        serializedName: "force",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      latest: {
        required: true,
        serializedName: "latest",
        type: {
          name: "Boolean"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapirbacv1AggregationRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.AggregationRule",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1AggregationRule",
    modelProperties: {
      clusterRoleSelectors: {
        serializedName: "clusterRoleSelectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1LabelSelector"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgruntimeRawExtension: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.runtime.RawExtension",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgruntimeRawExtension",
    modelProperties: {
      raw: {
        required: true,
        serializedName: "Raw",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1PolicyRule: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.PolicyRule",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1PolicyRule",
    modelProperties: {
      apiGroups: {
        required: true,
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      attributeRestrictions: {
        serializedName: "attributeRestrictions",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      nonResourceURLs: {
        serializedName: "nonResourceURLs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceNames: {
        serializedName: "resourceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        required: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ClusterRole: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ClusterRole",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ClusterRole",
    modelProperties: {
      aggregationRule: {
        serializedName: "aggregationRule",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1AggregationRule"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ClusterRoleBinding: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ClusterRoleBinding",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ClusterRoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groupNames: {
        required: true,
        serializedName: "groupNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      subjects: {
        required: true,
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ObjectReference"
            }
          }
        }
      },
      userNames: {
        required: true,
        serializedName: "userNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ClusterRoleBindingList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1ClusterRoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ClusterRoleList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ClusterRoleList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ClusterRoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1ClusterRole"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1GroupRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.GroupRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1GroupRestriction",
    modelProperties: {
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      labels: {
        required: true,
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1LabelSelector"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.LocalResourceAccessReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      isNonResourceURL: {
        required: true,
        serializedName: "isNonResourceURL",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      resourceAPIGroup: {
        required: true,
        serializedName: "resourceAPIGroup",
        type: {
          name: "String"
        }
      },
      resourceAPIVersion: {
        required: true,
        serializedName: "resourceAPIVersion",
        type: {
          name: "String"
        }
      },
      resourceName: {
        required: true,
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      verb: {
        required: true,
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.LocalSubjectAccessReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isNonResourceURL: {
        required: true,
        serializedName: "isNonResourceURL",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      resourceAPIGroup: {
        required: true,
        serializedName: "resourceAPIGroup",
        type: {
          name: "String"
        }
      },
      resourceAPIVersion: {
        required: true,
        serializedName: "resourceAPIVersion",
        type: {
          name: "String"
        }
      },
      resourceName: {
        required: true,
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      scopes: {
        required: true,
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      user: {
        required: true,
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      verb: {
        required: true,
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ResourceAccessReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ResourceAccessReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ResourceAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      isNonResourceURL: {
        required: true,
        serializedName: "isNonResourceURL",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      resourceAPIGroup: {
        required: true,
        serializedName: "resourceAPIGroup",
        type: {
          name: "String"
        }
      },
      resourceAPIVersion: {
        required: true,
        serializedName: "resourceAPIVersion",
        type: {
          name: "String"
        }
      },
      resourceName: {
        required: true,
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      verb: {
        required: true,
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1Role: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.Role",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1Role",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleBinding: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleBinding",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groupNames: {
        required: true,
        serializedName: "groupNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      subjects: {
        required: true,
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ObjectReference"
            }
          }
        }
      },
      userNames: {
        required: true,
        serializedName: "userNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleBindingList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleBindingList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1RoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ServiceAccountReference: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ServiceAccountReference",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ServiceAccountReference",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.ServiceAccountRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction",
    modelProperties: {
      namespaces: {
        required: true,
        serializedName: "namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      serviceaccounts: {
        required: true,
        serializedName: "serviceaccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1ServiceAccountReference"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1UserRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.UserRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1UserRestriction",
    modelProperties: {
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      labels: {
        required: true,
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1LabelSelector"
            }
          }
        }
      },
      users: {
        required: true,
        serializedName: "users",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleBindingRestrictionSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec",
    modelProperties: {
      grouprestriction: {
        required: true,
        serializedName: "grouprestriction",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1GroupRestriction"
        }
      },
      serviceaccountrestriction: {
        required: true,
        serializedName: "serviceaccountrestriction",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction"
        }
      },
      userrestriction: {
        required: true,
        serializedName: "userrestriction",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1UserRestriction"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleBindingRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleBindingRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleBindingRestriction",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        required: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleBindingRestrictionList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1RoleBindingRestriction"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1RoleList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.RoleList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1RoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1Role"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SelfSubjectRulesReviewSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec",
    modelProperties: {
      scopes: {
        required: true,
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SubjectRulesReviewStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus",
    modelProperties: {
      evaluationError: {
        serializedName: "evaluationError",
        type: {
          name: "String"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiauthorizationv1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SelfSubjectRulesReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SubjectAccessReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isNonResourceURL: {
        required: true,
        serializedName: "isNonResourceURL",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      resourceAPIGroup: {
        required: true,
        serializedName: "resourceAPIGroup",
        type: {
          name: "String"
        }
      },
      resourceAPIVersion: {
        required: true,
        serializedName: "resourceAPIVersion",
        type: {
          name: "String"
        }
      },
      resourceName: {
        required: true,
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      scopes: {
        required: true,
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      user: {
        required: true,
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      verb: {
        required: true,
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SubjectRulesReviewSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec",
    modelProperties: {
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      scopes: {
        required: true,
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      user: {
        required: true,
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiauthorizationv1SubjectRulesReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.authorization.v1.SubjectRulesReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BinaryBuildSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BinaryBuildSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BinaryBuildSource",
    modelProperties: {
      asFile: {
        serializedName: "asFile",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SourceControlUser: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SourceControlUser",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SourceControlUser",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1GitSourceRevision: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.GitSourceRevision",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1GitSourceRevision",
    modelProperties: {
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceControlUser"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "String"
        }
      },
      committer: {
        serializedName: "committer",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceControlUser"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SourceRevision: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SourceRevision",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SourceRevision",
    modelProperties: {
      git: {
        serializedName: "git",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1GitSourceRevision"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BitbucketWebHookCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BitbucketWebHookCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BitbucketWebHookCause",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ImageLabel: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ImageLabel",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ImageLabel",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildOutput: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildOutput",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildOutput",
    modelProperties: {
      imageLabels: {
        serializedName: "imageLabels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1ImageLabel"
            }
          }
        }
      },
      pushSecret: {
        serializedName: "pushSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildPostCommitSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildPostCommitSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildPostCommitSpec",
    modelProperties: {
      args: {
        serializedName: "args",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      script: {
        serializedName: "script",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ConfigMapBuildSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ConfigMapBuildSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ConfigMapBuildSource",
    modelProperties: {
      configMap: {
        required: true,
        serializedName: "configMap",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      destinationDir: {
        serializedName: "destinationDir",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1GitBuildSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.GitBuildSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1GitBuildSource",
    modelProperties: {
      httpProxy: {
        serializedName: "httpProxy",
        type: {
          name: "String"
        }
      },
      httpsProxy: {
        serializedName: "httpsProxy",
        type: {
          name: "String"
        }
      },
      noProxy: {
        serializedName: "noProxy",
        type: {
          name: "String"
        }
      },
      ref: {
        serializedName: "ref",
        type: {
          name: "String"
        }
      },
      uri: {
        required: true,
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ImageSourcePath: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ImageSourcePath",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ImageSourcePath",
    modelProperties: {
      destinationDir: {
        required: true,
        serializedName: "destinationDir",
        type: {
          name: "String"
        }
      },
      sourcePath: {
        required: true,
        serializedName: "sourcePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ImageSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ImageSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ImageSource",
    modelProperties: {
      as: {
        serializedName: "as",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      paths: {
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1ImageSourcePath"
            }
          }
        }
      },
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SecretBuildSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SecretBuildSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SecretBuildSource",
    modelProperties: {
      destinationDir: {
        serializedName: "destinationDir",
        type: {
          name: "String"
        }
      },
      secret: {
        required: true,
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildSource: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildSource",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildSource",
    modelProperties: {
      binary: {
        serializedName: "binary",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BinaryBuildSource"
        }
      },
      configMaps: {
        serializedName: "configMaps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1ConfigMapBuildSource"
            }
          }
        }
      },
      contextDir: {
        serializedName: "contextDir",
        type: {
          name: "String"
        }
      },
      dockerfile: {
        serializedName: "dockerfile",
        type: {
          name: "String"
        }
      },
      git: {
        serializedName: "git",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1GitBuildSource"
        }
      },
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1ImageSource"
            }
          }
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1SecretBuildSource"
            }
          }
        }
      },
      sourceSecret: {
        serializedName: "sourceSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SecretSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SecretSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SecretSpec",
    modelProperties: {
      mountPath: {
        required: true,
        serializedName: "mountPath",
        type: {
          name: "String"
        }
      },
      secretSource: {
        required: true,
        serializedName: "secretSource",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1CustomBuildStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.CustomBuildStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1CustomBuildStrategy",
    modelProperties: {
      buildAPIVersion: {
        serializedName: "buildAPIVersion",
        type: {
          name: "String"
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      exposeDockerSocket: {
        serializedName: "exposeDockerSocket",
        type: {
          name: "Boolean"
        }
      },
      forcePull: {
        serializedName: "forcePull",
        type: {
          name: "Boolean"
        }
      },
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1SecretSpec"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1DockerBuildStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.DockerBuildStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1DockerBuildStrategy",
    modelProperties: {
      buildArgs: {
        serializedName: "buildArgs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      dockerfilePath: {
        serializedName: "dockerfilePath",
        type: {
          name: "String"
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      forcePull: {
        serializedName: "forcePull",
        type: {
          name: "Boolean"
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      imageOptimizationPolicy: {
        serializedName: "imageOptimizationPolicy",
        type: {
          name: "String"
        }
      },
      noCache: {
        serializedName: "noCache",
        type: {
          name: "Boolean"
        }
      },
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.JenkinsPipelineBuildStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy",
    modelProperties: {
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      jenkinsfile: {
        serializedName: "jenkinsfile",
        type: {
          name: "String"
        }
      },
      jenkinsfilePath: {
        serializedName: "jenkinsfilePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SourceBuildStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SourceBuildStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SourceBuildStrategy",
    modelProperties: {
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      forcePull: {
        serializedName: "forcePull",
        type: {
          name: "Boolean"
        }
      },
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      incremental: {
        serializedName: "incremental",
        type: {
          name: "Boolean"
        }
      },
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      scripts: {
        serializedName: "scripts",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildStrategy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildStrategy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildStrategy",
    modelProperties: {
      customStrategy: {
        serializedName: "customStrategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1CustomBuildStrategy"
        }
      },
      dockerStrategy: {
        serializedName: "dockerStrategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1DockerBuildStrategy"
        }
      },
      jenkinsPipelineStrategy: {
        serializedName: "jenkinsPipelineStrategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy"
        }
      },
      sourceStrategy: {
        serializedName: "sourceStrategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceBuildStrategy"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1GenericWebHookCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.GenericWebHookCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1GenericWebHookCause",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1GitHubWebHookCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.GitHubWebHookCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1GitHubWebHookCause",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1GitLabWebHookCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.GitLabWebHookCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1GitLabWebHookCause",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ImageChangeCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ImageChangeCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ImageChangeCause",
    modelProperties: {
      fromRef: {
        serializedName: "fromRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      imageID: {
        serializedName: "imageID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildTriggerCause: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildTriggerCause",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildTriggerCause",
    modelProperties: {
      bitbucketWebHook: {
        serializedName: "bitbucketWebHook",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BitbucketWebHookCause"
        }
      },
      genericWebHook: {
        serializedName: "genericWebHook",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1GenericWebHookCause"
        }
      },
      githubWebHook: {
        serializedName: "githubWebHook",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1GitHubWebHookCause"
        }
      },
      gitlabWebHook: {
        serializedName: "gitlabWebHook",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1GitLabWebHookCause"
        }
      },
      imageChangeBuild: {
        serializedName: "imageChangeBuild",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1ImageChangeCause"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildSpec",
    modelProperties: {
      completionDeadlineSeconds: {
        serializedName: "completionDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      nodeSelector: {
        required: true,
        serializedName: "nodeSelector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildOutput"
        }
      },
      postCommit: {
        serializedName: "postCommit",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildPostCommitSpec"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      serviceAccount: {
        serializedName: "serviceAccount",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildSource"
        }
      },
      strategy: {
        required: true,
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildStrategy"
        }
      },
      triggeredBy: {
        required: true,
        serializedName: "triggeredBy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1BuildTriggerCause"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildStatusOutputTo: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildStatusOutputTo",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildStatusOutputTo",
    modelProperties: {
      imageDigest: {
        serializedName: "imageDigest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildStatusOutput: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildStatusOutput",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildStatusOutput",
    modelProperties: {
      to: {
        serializedName: "to",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildStatusOutputTo"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1StepInfo: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.StepInfo",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1StepInfo",
    modelProperties: {
      durationMilliseconds: {
        serializedName: "durationMilliseconds",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1StageInfo: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.StageInfo",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1StageInfo",
    modelProperties: {
      durationMilliseconds: {
        serializedName: "durationMilliseconds",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      steps: {
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1StepInfo"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildStatus",
    modelProperties: {
      cancelled: {
        serializedName: "cancelled",
        type: {
          name: "Boolean"
        }
      },
      completionTimestamp: {
        serializedName: "completionTimestamp",
        type: {
          name: "DateTime"
        }
      },
      config: {
        serializedName: "config",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "Number"
        }
      },
      logSnippet: {
        serializedName: "logSnippet",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildStatusOutput"
        }
      },
      outputDockerImageReference: {
        serializedName: "outputDockerImageReference",
        type: {
          name: "String"
        }
      },
      phase: {
        required: true,
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      stages: {
        serializedName: "stages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1StageInfo"
            }
          }
        }
      },
      startTimestamp: {
        serializedName: "startTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1Build: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.Build",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1Build",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SecretLocalReference: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SecretLocalReference",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SecretLocalReference",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1WebHookTrigger: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.WebHookTrigger",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1WebHookTrigger",
    modelProperties: {
      allowEnv: {
        serializedName: "allowEnv",
        type: {
          name: "Boolean"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      },
      secretReference: {
        serializedName: "secretReference",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SecretLocalReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1ImageChangeTrigger: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.ImageChangeTrigger",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1ImageChangeTrigger",
    modelProperties: {
      from: {
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      lastTriggeredImageID: {
        serializedName: "lastTriggeredImageID",
        type: {
          name: "String"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildTriggerPolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildTriggerPolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildTriggerPolicy",
    modelProperties: {
      bitbucket: {
        serializedName: "bitbucket",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1WebHookTrigger"
        }
      },
      generic: {
        serializedName: "generic",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1WebHookTrigger"
        }
      },
      github: {
        serializedName: "github",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1WebHookTrigger"
        }
      },
      gitlab: {
        serializedName: "gitlab",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1WebHookTrigger"
        }
      },
      imageChange: {
        serializedName: "imageChange",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1ImageChangeTrigger"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildConfigSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildConfigSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildConfigSpec",
    modelProperties: {
      completionDeadlineSeconds: {
        serializedName: "completionDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      failedBuildsHistoryLimit: {
        serializedName: "failedBuildsHistoryLimit",
        type: {
          name: "Number"
        }
      },
      nodeSelector: {
        required: true,
        serializedName: "nodeSelector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildOutput"
        }
      },
      postCommit: {
        serializedName: "postCommit",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildPostCommitSpec"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      runPolicy: {
        serializedName: "runPolicy",
        type: {
          name: "String"
        }
      },
      serviceAccount: {
        serializedName: "serviceAccount",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildSource"
        }
      },
      strategy: {
        required: true,
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildStrategy"
        }
      },
      successfulBuildsHistoryLimit: {
        serializedName: "successfulBuildsHistoryLimit",
        type: {
          name: "Number"
        }
      },
      triggers: {
        required: true,
        serializedName: "triggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1BuildTriggerPolicy"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildConfigStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildConfigStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildConfigStatus",
    modelProperties: {
      lastVersion: {
        required: true,
        serializedName: "lastVersion",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildConfig: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildConfig",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildConfig",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildConfigSpec"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BuildConfigStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildConfigList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildConfigList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildConfigList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1BuildConfig"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1Build"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildLog: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildLog",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildLog",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1DockerStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.DockerStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1DockerStrategyOptions",
    modelProperties: {
      buildArgs: {
        serializedName: "buildArgs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      noCache: {
        serializedName: "noCache",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1SourceStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.SourceStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1SourceStrategyOptions",
    modelProperties: {
      incremental: {
        serializedName: "incremental",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Comgithubopenshiftapibuildv1BuildRequest: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.build.v1.BuildRequest",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapibuildv1BuildRequest",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      binary: {
        serializedName: "binary",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1BinaryBuildSource"
        }
      },
      dockerStrategyOptions: {
        serializedName: "dockerStrategyOptions",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1DockerStrategyOptions"
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EnvVar"
            }
          }
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      lastVersion: {
        serializedName: "lastVersion",
        type: {
          name: "Number"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      revision: {
        serializedName: "revision",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceRevision"
        }
      },
      sourceStrategyOptions: {
        serializedName: "sourceStrategyOptions",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapibuildv1SourceStrategyOptions"
        }
      },
      triggeredBy: {
        required: true,
        serializedName: "triggeredBy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapibuildv1BuildTriggerCause"
            }
          }
        }
      },
      triggeredByImage: {
        serializedName: "triggeredByImage",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageLayer: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageLayer",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageLayer",
    modelProperties: {
      mediaType: {
        required: true,
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      size: {
        required: true,
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1SignatureCondition: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.SignatureCondition",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1SignatureCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "DateTime"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1SignatureIssuer: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.SignatureIssuer",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1SignatureIssuer",
    modelProperties: {
      commonName: {
        serializedName: "commonName",
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1SignatureSubject: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.SignatureSubject",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1SignatureSubject",
    modelProperties: {
      commonName: {
        serializedName: "commonName",
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "String"
        }
      },
      publicKeyID: {
        required: true,
        serializedName: "publicKeyID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageSignature: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageSignature",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageSignature",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1SignatureCondition"
            }
          }
        }
      },
      content: {
        required: true,
        serializedName: "content",
        type: {
          name: "ByteArray"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      imageIdentity: {
        serializedName: "imageIdentity",
        type: {
          name: "String"
        }
      },
      issuedBy: {
        serializedName: "issuedBy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1SignatureIssuer"
        }
      },
      issuedTo: {
        serializedName: "issuedTo",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1SignatureSubject"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      signedClaims: {
        serializedName: "signedClaims",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1Image: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.Image",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1Image",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      dockerImageConfig: {
        serializedName: "dockerImageConfig",
        type: {
          name: "String"
        }
      },
      dockerImageLayers: {
        required: true,
        serializedName: "dockerImageLayers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageLayer"
            }
          }
        }
      },
      dockerImageManifest: {
        serializedName: "dockerImageManifest",
        type: {
          name: "String"
        }
      },
      dockerImageManifestMediaType: {
        serializedName: "dockerImageManifestMediaType",
        type: {
          name: "String"
        }
      },
      dockerImageMetadata: {
        serializedName: "dockerImageMetadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      dockerImageMetadataVersion: {
        serializedName: "dockerImageMetadataVersion",
        type: {
          name: "String"
        }
      },
      dockerImageReference: {
        serializedName: "dockerImageReference",
        type: {
          name: "String"
        }
      },
      dockerImageSignatures: {
        serializedName: "dockerImageSignatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "ByteArray"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      signatures: {
        serializedName: "signatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageSignature"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageBlobReferences: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageBlobReferences",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageBlobReferences",
    modelProperties: {
      config: {
        serializedName: "config",
        type: {
          name: "String"
        }
      },
      imageMissing: {
        serializedName: "imageMissing",
        type: {
          name: "Boolean"
        }
      },
      layers: {
        serializedName: "layers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1TagImportPolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.TagImportPolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1TagImportPolicy",
    modelProperties: {
      insecure: {
        serializedName: "insecure",
        type: {
          name: "Boolean"
        }
      },
      scheduled: {
        serializedName: "scheduled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1TagReferencePolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.TagReferencePolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1TagReferencePolicy",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageImportSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageImportSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageImportSpec",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      importPolicy: {
        serializedName: "importPolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagImportPolicy"
        }
      },
      includeManifest: {
        serializedName: "includeManifest",
        type: {
          name: "Boolean"
        }
      },
      referencePolicy: {
        serializedName: "referencePolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagReferencePolicy"
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageImportStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageImportStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageImportStatus",
    modelProperties: {
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1Image"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1Status"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageLayerData: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageLayerData",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageLayerData",
    modelProperties: {
      mediaType: {
        required: true,
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        required: true,
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1Image"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageLookupPolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageLookupPolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageLookupPolicy",
    modelProperties: {
      local: {
        required: true,
        serializedName: "local",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1TagReference: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.TagReference",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1TagReference",
    modelProperties: {
      annotations: {
        serializedName: "annotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      generation: {
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      importPolicy: {
        serializedName: "importPolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagImportPolicy"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reference: {
        serializedName: "reference",
        type: {
          name: "Boolean"
        }
      },
      referencePolicy: {
        serializedName: "referencePolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagReferencePolicy"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamSpec",
    modelProperties: {
      dockerImageRepository: {
        serializedName: "dockerImageRepository",
        type: {
          name: "String"
        }
      },
      lookupPolicy: {
        serializedName: "lookupPolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageLookupPolicy"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1TagReference"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1TagEventCondition: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.TagEventCondition",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1TagEventCondition",
    modelProperties: {
      generation: {
        required: true,
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1TagEvent: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.TagEvent",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1TagEvent",
    modelProperties: {
      created: {
        required: true,
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      dockerImageReference: {
        required: true,
        serializedName: "dockerImageReference",
        type: {
          name: "String"
        }
      },
      generation: {
        required: true,
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1NamedTagEventList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.NamedTagEventList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1NamedTagEventList",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1TagEventCondition"
            }
          }
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1TagEvent"
            }
          }
        }
      },
      tag: {
        required: true,
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamStatus",
    modelProperties: {
      dockerImageRepository: {
        required: true,
        serializedName: "dockerImageRepository",
        type: {
          name: "String"
        }
      },
      publicDockerImageRepository: {
        serializedName: "publicDockerImageRepository",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1NamedTagEventList"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStream: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStream",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStream",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageStreamSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageStreamStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamImage: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamImage",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamImage",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1Image"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1RepositoryImportSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.RepositoryImportSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1RepositoryImportSpec",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      importPolicy: {
        serializedName: "importPolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagImportPolicy"
        }
      },
      includeManifest: {
        serializedName: "includeManifest",
        type: {
          name: "Boolean"
        }
      },
      referencePolicy: {
        serializedName: "referencePolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagReferencePolicy"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamImportSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamImportSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamImportSpec",
    modelProperties: {
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageImportSpec"
            }
          }
        }
      },
      importProperty: {
        required: true,
        serializedName: "import",
        type: {
          name: "Boolean"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1RepositoryImportSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1RepositoryImportStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.RepositoryImportStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1RepositoryImportStatus",
    modelProperties: {
      additionalTags: {
        serializedName: "additionalTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageImportStatus"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1Status"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamImportStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamImportStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamImportStatus",
    modelProperties: {
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageImportStatus"
            }
          }
        }
      },
      importProperty: {
        serializedName: "import",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageStream"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1RepositoryImportStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamImport: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamImport",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamImport",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageStreamImportSpec"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageStreamImportStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamLayers: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamLayers",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamLayers",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      blobs: {
        required: true,
        serializedName: "blobs",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageLayerData"
            }
          }
        }
      },
      images: {
        required: true,
        serializedName: "images",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageBlobReferences"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageStream"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamMapping: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamMapping",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamMapping",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1Image"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      tag: {
        required: true,
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamTag: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamTag",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamTag",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1TagEventCondition"
            }
          }
        }
      },
      generation: {
        required: true,
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1Image"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      lookupPolicy: {
        required: true,
        serializedName: "lookupPolicy",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1ImageLookupPolicy"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      tag: {
        required: true,
        serializedName: "tag",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiimagev1TagReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiimagev1ImageStreamTagList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.image.v1.ImageStreamTagList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiimagev1ImageStreamTagList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiimagev1ImageStreamTag"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1ClusterNetworkEntry: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.ClusterNetworkEntry",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1ClusterNetworkEntry",
    modelProperties: {
      cIDR: {
        required: true,
        serializedName: "CIDR",
        type: {
          name: "String"
        }
      },
      hostSubnetLength: {
        required: true,
        serializedName: "hostSubnetLength",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1ClusterNetwork: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.ClusterNetwork",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1ClusterNetwork",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      clusterNetworks: {
        required: true,
        serializedName: "clusterNetworks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1ClusterNetworkEntry"
            }
          }
        }
      },
      hostsubnetlength: {
        serializedName: "hostsubnetlength",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      network: {
        serializedName: "network",
        type: {
          name: "String"
        }
      },
      pluginName: {
        serializedName: "pluginName",
        type: {
          name: "String"
        }
      },
      serviceNetwork: {
        required: true,
        serializedName: "serviceNetwork",
        type: {
          name: "String"
        }
      },
      vxlanPort: {
        serializedName: "vxlanPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1ClusterNetworkList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.ClusterNetworkList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1ClusterNetworkList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1ClusterNetwork"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.EgressNetworkPolicyPeer",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer",
    modelProperties: {
      cidrSelector: {
        serializedName: "cidrSelector",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "dnsName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.EgressNetworkPolicyRule",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule",
    modelProperties: {
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.EgressNetworkPolicySpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec",
    modelProperties: {
      egress: {
        required: true,
        serializedName: "egress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1EgressNetworkPolicy: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.EgressNetworkPolicy",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicy",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1EgressNetworkPolicyList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.EgressNetworkPolicyList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicyList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1EgressNetworkPolicy"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1HostSubnet: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.HostSubnet",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1HostSubnet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      egressCIDRs: {
        serializedName: "egressCIDRs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      egressIPs: {
        serializedName: "egressIPs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      host: {
        required: true,
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      hostIP: {
        required: true,
        serializedName: "hostIP",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      subnet: {
        required: true,
        serializedName: "subnet",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1HostSubnetList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.HostSubnetList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1HostSubnetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1HostSubnet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1NetNamespace: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.NetNamespace",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1NetNamespace",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      egressIPs: {
        serializedName: "egressIPs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      netid: {
        required: true,
        serializedName: "netid",
        type: {
          name: "Number"
        }
      },
      netname: {
        required: true,
        serializedName: "netname",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapinetworkv1NetNamespaceList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.network.v1.NetNamespaceList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapinetworkv1NetNamespaceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapinetworkv1NetNamespace"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.ClusterRoleScopeRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction",
    modelProperties: {
      allowEscalation: {
        required: true,
        serializedName: "allowEscalation",
        type: {
          name: "Boolean"
        }
      },
      namespaces: {
        required: true,
        serializedName: "namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      roleNames: {
        required: true,
        serializedName: "roleNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthAccessToken: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthAccessToken",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthAccessToken",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      authorizeToken: {
        serializedName: "authorizeToken",
        type: {
          name: "String"
        }
      },
      clientName: {
        serializedName: "clientName",
        type: {
          name: "String"
        }
      },
      expiresIn: {
        serializedName: "expiresIn",
        type: {
          name: "Number"
        }
      },
      inactivityTimeoutSeconds: {
        serializedName: "inactivityTimeoutSeconds",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      redirectURI: {
        serializedName: "redirectURI",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refreshToken",
        type: {
          name: "String"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String"
        }
      },
      userUID: {
        serializedName: "userUID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthAccessTokenList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthAccessTokenList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthAccessTokenList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapioauthv1OAuthAccessToken"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthAuthorizeToken: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthAuthorizeToken",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthAuthorizeToken",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      clientName: {
        serializedName: "clientName",
        type: {
          name: "String"
        }
      },
      codeChallenge: {
        serializedName: "codeChallenge",
        type: {
          name: "String"
        }
      },
      codeChallengeMethod: {
        serializedName: "codeChallengeMethod",
        type: {
          name: "String"
        }
      },
      expiresIn: {
        serializedName: "expiresIn",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      redirectURI: {
        serializedName: "redirectURI",
        type: {
          name: "String"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String"
        }
      },
      userUID: {
        serializedName: "userUID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthAuthorizeTokenList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapioauthv1OAuthAuthorizeToken"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1ScopeRestriction: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.ScopeRestriction",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1ScopeRestriction",
    modelProperties: {
      clusterRole: {
        serializedName: "clusterRole",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction"
        }
      },
      literals: {
        serializedName: "literals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthClient: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthClient",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthClient",
    modelProperties: {
      accessTokenInactivityTimeoutSeconds: {
        serializedName: "accessTokenInactivityTimeoutSeconds",
        type: {
          name: "Number"
        }
      },
      accessTokenMaxAgeSeconds: {
        serializedName: "accessTokenMaxAgeSeconds",
        type: {
          name: "Number"
        }
      },
      additionalSecrets: {
        serializedName: "additionalSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      grantMethod: {
        serializedName: "grantMethod",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      redirectURIs: {
        serializedName: "redirectURIs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      respondWithChallenges: {
        serializedName: "respondWithChallenges",
        type: {
          name: "Boolean"
        }
      },
      scopeRestrictions: {
        serializedName: "scopeRestrictions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapioauthv1ScopeRestriction"
            }
          }
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthClientAuthorization: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthClientAuthorization",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthClientAuthorization",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      clientName: {
        serializedName: "clientName",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String"
        }
      },
      userUID: {
        serializedName: "userUID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthClientAuthorizationList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthClientAuthorizationList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthClientAuthorizationList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapioauthv1OAuthClientAuthorization"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapioauthv1OAuthClientList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.oauth.v1.OAuthClientList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapioauthv1OAuthClientList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapioauthv1OAuthClient"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiprojectv1ProjectSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.project.v1.ProjectSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiprojectv1ProjectSpec",
    modelProperties: {
      finalizers: {
        serializedName: "finalizers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiprojectv1ProjectStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.project.v1.ProjectStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiprojectv1ProjectStatus",
    modelProperties: {
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiprojectv1Project: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.project.v1.Project",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiprojectv1Project",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiprojectv1ProjectSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiprojectv1ProjectStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiprojectv1ProjectList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.project.v1.ProjectList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiprojectv1ProjectList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiprojectv1Project"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiprojectv1ProjectRequest: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.project.v1.ProjectRequest",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiprojectv1ProjectRequest",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const V1ScopedResourceSelectorRequirement: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ScopedResourceSelectorRequirement",
  type: {
    name: "Composite",
    className: "V1ScopedResourceSelectorRequirement",
    modelProperties: {
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      scopeName: {
        required: true,
        serializedName: "scopeName",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1ScopeSelector: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ScopeSelector",
  type: {
    name: "Composite",
    className: "V1ScopeSelector",
    modelProperties: {
      matchExpressions: {
        serializedName: "matchExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ScopedResourceSelectorRequirement"
            }
          }
        }
      }
    }
  }
};

export const V1ResourceQuotaSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceQuotaSpec",
  type: {
    name: "Composite",
    className: "V1ResourceQuotaSpec",
    modelProperties: {
      hard: {
        serializedName: "hard",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      scopeSelector: {
        serializedName: "scopeSelector",
        type: {
          name: "Composite",
          className: "V1ScopeSelector"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ClusterResourceQuotaSelector",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector",
    modelProperties: {
      annotations: {
        required: true,
        serializedName: "annotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      labels: {
        required: true,
        serializedName: "labels",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ClusterResourceQuotaSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec",
    modelProperties: {
      quota: {
        required: true,
        serializedName: "quota",
        type: {
          name: "Composite",
          className: "V1ResourceQuotaSpec"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector"
        }
      }
    }
  }
};

export const V1ResourceQuotaStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceQuotaStatus",
  type: {
    name: "Composite",
    className: "V1ResourceQuotaStatus",
    modelProperties: {
      hard: {
        serializedName: "hard",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      used: {
        serializedName: "used",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ResourceQuotaStatusByNamespace",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace",
    modelProperties: {
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1ResourceQuotaStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ClusterResourceQuotaStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus",
    modelProperties: {
      namespaces: {
        required: true,
        serializedName: "namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace"
            }
          }
        }
      },
      total: {
        required: true,
        serializedName: "total",
        type: {
          name: "Composite",
          className: "V1ResourceQuotaStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1AppliedClusterResourceQuota: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.AppliedClusterResourceQuota",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1AppliedClusterResourceQuota",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        required: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.AppliedClusterResourceQuotaList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiquotav1AppliedClusterResourceQuota"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ClusterResourceQuota: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ClusterResourceQuota",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ClusterResourceQuota",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        required: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiquotav1ClusterResourceQuotaList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.quota.v1.ClusterResourceQuotaList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiquotav1ClusterResourceQuotaList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiquotav1ClusterResourceQuota"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteTargetReference: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteTargetReference",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteTargetReference",
    modelProperties: {
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      weight: {
        required: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RoutePort: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RoutePort",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RoutePort",
    modelProperties: {
      targetPort: {
        required: true,
        serializedName: "targetPort",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1TLSConfig: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.TLSConfig",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1TLSConfig",
    modelProperties: {
      caCertificate: {
        serializedName: "caCertificate",
        type: {
          name: "String"
        }
      },
      certificate: {
        serializedName: "certificate",
        type: {
          name: "String"
        }
      },
      destinationCACertificate: {
        serializedName: "destinationCACertificate",
        type: {
          name: "String"
        }
      },
      insecureEdgeTerminationPolicy: {
        serializedName: "insecureEdgeTerminationPolicy",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      termination: {
        required: true,
        serializedName: "termination",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteSpec",
    modelProperties: {
      alternateBackends: {
        serializedName: "alternateBackends",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiroutev1RouteTargetReference"
            }
          }
        }
      },
      host: {
        required: true,
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiroutev1RoutePort"
        }
      },
      tls: {
        serializedName: "tls",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiroutev1TLSConfig"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiroutev1RouteTargetReference"
        }
      },
      wildcardPolicy: {
        serializedName: "wildcardPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteIngressCondition: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteIngressCondition",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteIngressCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteIngress: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteIngress",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteIngress",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiroutev1RouteIngressCondition"
            }
          }
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      routerCanonicalHostname: {
        serializedName: "routerCanonicalHostname",
        type: {
          name: "String"
        }
      },
      routerName: {
        serializedName: "routerName",
        type: {
          name: "String"
        }
      },
      wildcardPolicy: {
        serializedName: "wildcardPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteStatus",
    modelProperties: {
      ingress: {
        required: true,
        serializedName: "ingress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiroutev1RouteIngress"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1Route: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.Route",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1Route",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiroutev1RouteSpec"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapiroutev1RouteStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiroutev1RouteList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.route.v1.RouteList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiroutev1RouteList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiroutev1Route"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1AllowedFlexVolume: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.AllowedFlexVolume",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1AllowedFlexVolume",
    modelProperties: {
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1IDRange: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.IDRange",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1IDRange",
    modelProperties: {
      max: {
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      min: {
        serializedName: "min",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1FSGroupStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.FSGroupStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1FSGroupStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1IDRange"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicyReviewSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec",
    modelProperties: {
      serviceAccountNames: {
        serializedName: "serviceAccountNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.ServiceAccountPodSecurityPolicyReviewStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus",
    modelProperties: {
      allowedBy: {
        serializedName: "allowedBy",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicyReviewStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus",
    modelProperties: {
      allowedServiceAccounts: {
        required: true,
        serializedName: "allowedServiceAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicyReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicyReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicyReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicySelfSubjectReviewSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec",
    modelProperties: {
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus",
    modelProperties: {
      allowedBy: {
        serializedName: "allowedBy",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicySelfSubjectReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec",
    modelProperties: {
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReview",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1RangeAllocation: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.RangeAllocation",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1RangeAllocation",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      data: {
        required: true,
        serializedName: "data",
        type: {
          name: "ByteArray"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      range: {
        required: true,
        serializedName: "range",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1RangeAllocationList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.RangeAllocationList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1RangeAllocationList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1RangeAllocation"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.RunAsUserStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "Number"
        }
      },
      uidRangeMax: {
        serializedName: "uidRangeMax",
        type: {
          name: "Number"
        }
      },
      uidRangeMin: {
        serializedName: "uidRangeMin",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.SELinuxContextStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions",
    modelProperties: {
      seLinuxOptions: {
        serializedName: "seLinuxOptions",
        type: {
          name: "Composite",
          className: "V1SELinuxOptions"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.SupplementalGroupsStrategyOptions",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1IDRange"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1SecurityContextConstraints: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.SecurityContextConstraints",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1SecurityContextConstraints",
    modelProperties: {
      allowHostDirVolumePlugin: {
        required: true,
        serializedName: "allowHostDirVolumePlugin",
        type: {
          name: "Boolean"
        }
      },
      allowHostIPC: {
        required: true,
        serializedName: "allowHostIPC",
        type: {
          name: "Boolean"
        }
      },
      allowHostNetwork: {
        required: true,
        serializedName: "allowHostNetwork",
        type: {
          name: "Boolean"
        }
      },
      allowHostPID: {
        required: true,
        serializedName: "allowHostPID",
        type: {
          name: "Boolean"
        }
      },
      allowHostPorts: {
        required: true,
        serializedName: "allowHostPorts",
        type: {
          name: "Boolean"
        }
      },
      allowPrivilegeEscalation: {
        serializedName: "allowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      allowPrivilegedContainer: {
        required: true,
        serializedName: "allowPrivilegedContainer",
        type: {
          name: "Boolean"
        }
      },
      allowedCapabilities: {
        required: true,
        serializedName: "allowedCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowedFlexVolumes: {
        serializedName: "allowedFlexVolumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1AllowedFlexVolume"
            }
          }
        }
      },
      allowedUnsafeSysctls: {
        serializedName: "allowedUnsafeSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      defaultAddCapabilities: {
        required: true,
        serializedName: "defaultAddCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultAllowPrivilegeEscalation: {
        serializedName: "defaultAllowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      forbiddenSysctls: {
        serializedName: "forbiddenSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fsGroup: {
        serializedName: "fsGroup",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1FSGroupStrategyOptions"
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      priority: {
        required: true,
        serializedName: "priority",
        type: {
          name: "Number"
        }
      },
      readOnlyRootFilesystem: {
        required: true,
        serializedName: "readOnlyRootFilesystem",
        type: {
          name: "Boolean"
        }
      },
      requiredDropCapabilities: {
        required: true,
        serializedName: "requiredDropCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      runAsUser: {
        serializedName: "runAsUser",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions"
        }
      },
      seLinuxContext: {
        serializedName: "seLinuxContext",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions"
        }
      },
      seccompProfiles: {
        serializedName: "seccompProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supplementalGroups: {
        serializedName: "supplementalGroups",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions"
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      volumes: {
        required: true,
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapisecurityv1SecurityContextConstraintsList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.security.v1.SecurityContextConstraintsList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapisecurityv1SecurityContextConstraintsList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapisecurityv1SecurityContextConstraints"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.BrokerTemplateInstanceSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec",
    modelProperties: {
      bindingIDs: {
        serializedName: "bindingIDs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secret: {
        required: true,
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      templateInstance: {
        required: true,
        serializedName: "templateInstance",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1BrokerTemplateInstance: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.BrokerTemplateInstance",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1BrokerTemplateInstance",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.BrokerTemplateInstanceList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1BrokerTemplateInstance"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1Parameter: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.Parameter",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1Parameter",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "String"
        }
      },
      generate: {
        serializedName: "generate",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      required: {
        serializedName: "required",
        type: {
          name: "Boolean"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1Template: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.Template",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1Template",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      objects: {
        required: true,
        serializedName: "objects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgruntimeRawExtension"
            }
          }
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1Parameter"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceRequester: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceRequester",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceRequester",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceSpec: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceSpec",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceSpec",
    modelProperties: {
      requester: {
        required: true,
        serializedName: "requester",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapitemplatev1TemplateInstanceRequester"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapitemplatev1Template"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceCondition: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceCondition",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceCondition",
    modelProperties: {
      lastTransitionTime: {
        required: true,
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        required: true,
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceObject: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceObject",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceObject",
    modelProperties: {
      ref: {
        serializedName: "ref",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceStatus: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceStatus",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1TemplateInstanceCondition"
            }
          }
        }
      },
      objects: {
        serializedName: "objects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1TemplateInstanceObject"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstance: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstance",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstance",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapitemplatev1TemplateInstanceSpec"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Comgithubopenshiftapitemplatev1TemplateInstanceStatus"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateInstanceList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateInstanceList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateInstanceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1TemplateInstance"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapitemplatev1TemplateList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.template.v1.TemplateList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapitemplatev1TemplateList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapitemplatev1Template"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1Group: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.Group",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1Group",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      users: {
        required: true,
        serializedName: "users",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1GroupList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.GroupList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1GroupList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiuserv1Group"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1Identity: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.Identity",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1Identity",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      providerName: {
        required: true,
        serializedName: "providerName",
        type: {
          name: "String"
        }
      },
      providerUserName: {
        required: true,
        serializedName: "providerUserName",
        type: {
          name: "String"
        }
      },
      user: {
        required: true,
        serializedName: "user",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1IdentityList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.IdentityList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1IdentityList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiuserv1Identity"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1User: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.User",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1User",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      fullName: {
        serializedName: "fullName",
        type: {
          name: "String"
        }
      },
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      identities: {
        required: true,
        serializedName: "identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1UserIdentityMapping: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.UserIdentityMapping",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1UserIdentityMapping",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const Comgithubopenshiftapiuserv1UserList: msRest.CompositeMapper = {
  serializedName: "com.github.openshift.api.user.v1.UserList",
  type: {
    name: "Composite",
    className: "Comgithubopenshiftapiuserv1UserList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Comgithubopenshiftapiuserv1User"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1ServiceReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.ServiceReference",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1ServiceReference",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1WebhookClientConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1WebhookClientConfig",
    modelProperties: {
      caBundle: {
        required: true,
        serializedName: "caBundle",
        type: {
          name: "ByteArray"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "Composite",
          className: "Iok8sapiadmissionregistrationv1beta1ServiceReference"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1RuleWithOperations: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1RuleWithOperations",
    modelProperties: {
      apiGroups: {
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      apiVersions: {
        serializedName: "apiVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1Webhook: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.Webhook",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1Webhook",
    modelProperties: {
      clientConfig: {
        required: true,
        serializedName: "clientConfig",
        type: {
          name: "Composite",
          className: "Iok8sapiadmissionregistrationv1beta1WebhookClientConfig"
        }
      },
      failurePolicy: {
        serializedName: "failurePolicy",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespaceSelector: {
        serializedName: "namespaceSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiadmissionregistrationv1beta1RuleWithOperations"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      webhooks: {
        serializedName: "webhooks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiadmissionregistrationv1beta1Webhook"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      webhooks: {
        serializedName: "webhooks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiadmissionregistrationv1beta1Webhook"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList",
  type: {
    name: "Composite",
    className: "Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ControllerRevision: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ControllerRevision",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ControllerRevision",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      revision: {
        required: true,
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ControllerRevisionList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ControllerRevisionList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ControllerRevisionList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1ControllerRevision"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1RollingUpdateDaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.RollingUpdateDaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1RollingUpdateDaemonSet",
    modelProperties: {
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1RollingUpdateDaemonSet"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DaemonSetUpdateStrategy"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1DaemonSetCondition"
            }
          }
        }
      },
      currentNumberScheduled: {
        required: true,
        serializedName: "currentNumberScheduled",
        type: {
          name: "Number"
        }
      },
      desiredNumberScheduled: {
        required: true,
        serializedName: "desiredNumberScheduled",
        type: {
          name: "Number"
        }
      },
      numberAvailable: {
        serializedName: "numberAvailable",
        type: {
          name: "Number"
        }
      },
      numberMisscheduled: {
        required: true,
        serializedName: "numberMisscheduled",
        type: {
          name: "Number"
        }
      },
      numberReady: {
        required: true,
        serializedName: "numberReady",
        type: {
          name: "Number"
        }
      },
      numberUnavailable: {
        serializedName: "numberUnavailable",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      updatedNumberScheduled: {
        serializedName: "updatedNumberScheduled",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DaemonSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DaemonSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DaemonSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DaemonSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DaemonSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1DaemonSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1RollingUpdateDeployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.RollingUpdateDeployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1RollingUpdateDeployment",
    modelProperties: {
      maxSurge: {
        serializedName: "maxSurge",
        type: {
          name: "String"
        }
      },
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DeploymentStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DeploymentStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DeploymentStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1RollingUpdateDeployment"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DeploymentSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DeploymentSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DeploymentSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      progressDeadlineSeconds: {
        serializedName: "progressDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      strategy: {
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DeploymentStrategy"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DeploymentCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DeploymentCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DeploymentCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DeploymentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DeploymentStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DeploymentStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1DeploymentCondition"
            }
          }
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      unavailableReplicas: {
        serializedName: "unavailableReplicas",
        type: {
          name: "Number"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1Deployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.Deployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1Deployment",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DeploymentSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1DeploymentStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1DeploymentList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.DeploymentList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1DeploymentList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1Deployment"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ReplicaSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ReplicaSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ReplicaSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ReplicaSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ReplicaSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ReplicaSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ReplicaSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ReplicaSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ReplicaSetStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1ReplicaSetCondition"
            }
          }
        }
      },
      fullyLabeledReplicas: {
        serializedName: "fullyLabeledReplicas",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ReplicaSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ReplicaSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ReplicaSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1ReplicaSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1ReplicaSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1ReplicaSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.ReplicaSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1ReplicaSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1ReplicaSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1RollingUpdateStatefulSetStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1RollingUpdateStatefulSetStrategy",
    modelProperties: {
      partition: {
        serializedName: "partition",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1RollingUpdateStatefulSetStrategy"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaimSpec",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimSpec",
    modelProperties: {
      accessModes: {
        serializedName: "accessModes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      storageClassName: {
        serializedName: "storageClassName",
        type: {
          name: "String"
        }
      },
      volumeMode: {
        serializedName: "volumeMode",
        type: {
          name: "String"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaimCondition",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "DateTime"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaimStatus",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimStatus",
    modelProperties: {
      accessModes: {
        serializedName: "accessModes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolumeClaimCondition"
            }
          }
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaim: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaim",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaim",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSetSpec",
    modelProperties: {
      podManagementPolicy: {
        serializedName: "podManagementPolicy",
        type: {
          name: "String"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1StatefulSetUpdateStrategy"
        }
      },
      volumeClaimTemplates: {
        serializedName: "volumeClaimTemplates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolumeClaim"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1StatefulSetCondition"
            }
          }
        }
      },
      currentReplicas: {
        serializedName: "currentReplicas",
        type: {
          name: "Number"
        }
      },
      currentRevision: {
        serializedName: "currentRevision",
        type: {
          name: "String"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      updateRevision: {
        serializedName: "updateRevision",
        type: {
          name: "String"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1StatefulSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1StatefulSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1StatefulSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1.StatefulSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1StatefulSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1StatefulSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1ControllerRevision: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.ControllerRevision",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1ControllerRevision",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      revision: {
        required: true,
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1ControllerRevisionList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.ControllerRevisionList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1ControllerRevisionList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta1ControllerRevision"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1RollbackConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.RollbackConfig",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1RollbackConfig",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1RollingUpdateDeployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.RollingUpdateDeployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1RollingUpdateDeployment",
    modelProperties: {
      maxSurge: {
        serializedName: "maxSurge",
        type: {
          name: "String"
        }
      },
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1RollingUpdateDeployment"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      progressDeadlineSeconds: {
        serializedName: "progressDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      rollbackTo: {
        serializedName: "rollbackTo",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1RollbackConfig"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      strategy: {
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1DeploymentStrategy"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta1DeploymentCondition"
            }
          }
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      unavailableReplicas: {
        serializedName: "unavailableReplicas",
        type: {
          name: "Number"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1Deployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.Deployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1Deployment",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1DeploymentSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1DeploymentStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta1Deployment"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1DeploymentRollback: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.DeploymentRollback",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1DeploymentRollback",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      rollbackTo: {
        required: true,
        serializedName: "rollbackTo",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1RollbackConfig"
        }
      },
      updatedAnnotations: {
        serializedName: "updatedAnnotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.RollingUpdateStatefulSetStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy",
    modelProperties: {
      partition: {
        serializedName: "partition",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1ScaleSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.ScaleSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1ScaleSpec",
    modelProperties: {
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1ScaleStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.ScaleStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1ScaleStatus",
    modelProperties: {
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetSelector: {
        serializedName: "targetSelector",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1Scale: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.Scale",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1Scale",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1ScaleSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1ScaleStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSetSpec",
    modelProperties: {
      podManagementPolicy: {
        serializedName: "podManagementPolicy",
        type: {
          name: "String"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1StatefulSetUpdateStrategy"
        }
      },
      volumeClaimTemplates: {
        serializedName: "volumeClaimTemplates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolumeClaim"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta1StatefulSetCondition"
            }
          }
        }
      },
      currentReplicas: {
        serializedName: "currentReplicas",
        type: {
          name: "Number"
        }
      },
      currentRevision: {
        serializedName: "currentRevision",
        type: {
          name: "String"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      updateRevision: {
        serializedName: "updateRevision",
        type: {
          name: "String"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1StatefulSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta1StatefulSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta1StatefulSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta1.StatefulSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta1StatefulSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta1StatefulSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ControllerRevision: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ControllerRevision",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ControllerRevision",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      revision: {
        required: true,
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ControllerRevisionList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ControllerRevisionList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ControllerRevisionList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2ControllerRevision"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2RollingUpdateDaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.RollingUpdateDaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2RollingUpdateDaemonSet",
    modelProperties: {
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2RollingUpdateDaemonSet"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DaemonSetUpdateStrategy"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2DaemonSetCondition"
            }
          }
        }
      },
      currentNumberScheduled: {
        required: true,
        serializedName: "currentNumberScheduled",
        type: {
          name: "Number"
        }
      },
      desiredNumberScheduled: {
        required: true,
        serializedName: "desiredNumberScheduled",
        type: {
          name: "Number"
        }
      },
      numberAvailable: {
        serializedName: "numberAvailable",
        type: {
          name: "Number"
        }
      },
      numberMisscheduled: {
        required: true,
        serializedName: "numberMisscheduled",
        type: {
          name: "Number"
        }
      },
      numberReady: {
        required: true,
        serializedName: "numberReady",
        type: {
          name: "Number"
        }
      },
      numberUnavailable: {
        serializedName: "numberUnavailable",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      updatedNumberScheduled: {
        serializedName: "updatedNumberScheduled",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DaemonSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DaemonSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DaemonSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DaemonSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DaemonSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2DaemonSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2RollingUpdateDeployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.RollingUpdateDeployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2RollingUpdateDeployment",
    modelProperties: {
      maxSurge: {
        serializedName: "maxSurge",
        type: {
          name: "String"
        }
      },
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DeploymentStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DeploymentStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DeploymentStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2RollingUpdateDeployment"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DeploymentSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DeploymentSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DeploymentSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      progressDeadlineSeconds: {
        serializedName: "progressDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      strategy: {
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DeploymentStrategy"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DeploymentCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DeploymentCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DeploymentCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DeploymentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DeploymentStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DeploymentStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2DeploymentCondition"
            }
          }
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      unavailableReplicas: {
        serializedName: "unavailableReplicas",
        type: {
          name: "Number"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2Deployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.Deployment",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2Deployment",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DeploymentSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2DeploymentStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2DeploymentList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.DeploymentList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2DeploymentList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2Deployment"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ReplicaSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ReplicaSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ReplicaSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ReplicaSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ReplicaSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ReplicaSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ReplicaSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ReplicaSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ReplicaSetStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2ReplicaSetCondition"
            }
          }
        }
      },
      fullyLabeledReplicas: {
        serializedName: "fullyLabeledReplicas",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ReplicaSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ReplicaSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ReplicaSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2ReplicaSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2ReplicaSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ReplicaSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ReplicaSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ReplicaSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2ReplicaSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.RollingUpdateStatefulSetStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy",
    modelProperties: {
      partition: {
        serializedName: "partition",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ScaleSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ScaleSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ScaleSpec",
    modelProperties: {
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2ScaleStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.ScaleStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2ScaleStatus",
    modelProperties: {
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetSelector: {
        serializedName: "targetSelector",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2Scale: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.Scale",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2Scale",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2ScaleSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2ScaleStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSetSpec",
    modelProperties: {
      podManagementPolicy: {
        serializedName: "podManagementPolicy",
        type: {
          name: "String"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2StatefulSetUpdateStrategy"
        }
      },
      volumeClaimTemplates: {
        serializedName: "volumeClaimTemplates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolumeClaim"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2StatefulSetCondition"
            }
          }
        }
      },
      currentReplicas: {
        serializedName: "currentReplicas",
        type: {
          name: "Number"
        }
      },
      currentRevision: {
        serializedName: "currentRevision",
        type: {
          name: "String"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      updateRevision: {
        serializedName: "updateRevision",
        type: {
          name: "String"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSet",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2StatefulSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiappsv1beta2StatefulSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiappsv1beta2StatefulSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.apps.v1beta2.StatefulSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiappsv1beta2StatefulSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiappsv1beta2StatefulSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1TokenReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1.TokenReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1TokenReviewSpec",
    modelProperties: {
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1UserInfo: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1.UserInfo",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1UserInfo",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1TokenReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1.TokenReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1TokenReviewStatus",
    modelProperties: {
      authenticated: {
        serializedName: "authenticated",
        type: {
          name: "Boolean"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1UserInfo"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1TokenReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1.TokenReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1TokenReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1TokenReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1TokenReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1beta1TokenReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1beta1.TokenReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1beta1TokenReviewSpec",
    modelProperties: {
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1beta1UserInfo: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1beta1.UserInfo",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1beta1UserInfo",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1beta1TokenReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1beta1.TokenReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1beta1TokenReviewStatus",
    modelProperties: {
      authenticated: {
        serializedName: "authenticated",
        type: {
          name: "Boolean"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1beta1UserInfo"
        }
      }
    }
  }
};

export const Iok8sapiauthenticationv1beta1TokenReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authentication.v1beta1.TokenReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthenticationv1beta1TokenReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1beta1TokenReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthenticationv1beta1TokenReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1NonResourceAttributes: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.NonResourceAttributes",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1NonResourceAttributes",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1ResourceAttributes: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.ResourceAttributes",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1ResourceAttributes",
    modelProperties: {
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      subresource: {
        serializedName: "subresource",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SubjectAccessReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SubjectAccessReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SubjectAccessReviewSpec",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nonResourceAttributes: {
        serializedName: "nonResourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1NonResourceAttributes"
        }
      },
      resourceAttributes: {
        serializedName: "resourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1ResourceAttributes"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SubjectAccessReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SubjectAccessReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SubjectAccessReviewStatus",
    modelProperties: {
      allowed: {
        required: true,
        serializedName: "allowed",
        type: {
          name: "Boolean"
        }
      },
      denied: {
        serializedName: "denied",
        type: {
          name: "Boolean"
        }
      },
      evaluationError: {
        serializedName: "evaluationError",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1LocalSubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.LocalSubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1LocalSubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1NonResourceRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.NonResourceRule",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1NonResourceRule",
    modelProperties: {
      nonResourceURLs: {
        serializedName: "nonResourceURLs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1ResourceRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.ResourceRule",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1ResourceRule",
    modelProperties: {
      apiGroups: {
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceNames: {
        serializedName: "resourceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec",
    modelProperties: {
      nonResourceAttributes: {
        serializedName: "nonResourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1NonResourceAttributes"
        }
      },
      resourceAttributes: {
        serializedName: "resourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1ResourceAttributes"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SelfSubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SelfSubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SelfSubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec",
    modelProperties: {
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SubjectRulesReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SubjectRulesReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SubjectRulesReviewStatus",
    modelProperties: {
      evaluationError: {
        serializedName: "evaluationError",
        type: {
          name: "String"
        }
      },
      incomplete: {
        required: true,
        serializedName: "incomplete",
        type: {
          name: "Boolean"
        }
      },
      nonResourceRules: {
        required: true,
        serializedName: "nonResourceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiauthorizationv1NonResourceRule"
            }
          }
        }
      },
      resourceRules: {
        required: true,
        serializedName: "resourceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiauthorizationv1ResourceRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SelfSubjectRulesReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SelfSubjectRulesReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SelfSubjectRulesReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectRulesReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1SubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1.SubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1SubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1NonResourceAttributes: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.NonResourceAttributes",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1NonResourceAttributes",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1ResourceAttributes: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.ResourceAttributes",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1ResourceAttributes",
    modelProperties: {
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      subresource: {
        serializedName: "subresource",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nonResourceAttributes: {
        serializedName: "nonResourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1NonResourceAttributes"
        }
      },
      resourceAttributes: {
        serializedName: "resourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1ResourceAttributes"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus",
    modelProperties: {
      allowed: {
        required: true,
        serializedName: "allowed",
        type: {
          name: "Boolean"
        }
      },
      denied: {
        serializedName: "denied",
        type: {
          name: "Boolean"
        }
      },
      evaluationError: {
        serializedName: "evaluationError",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1LocalSubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.LocalSubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1LocalSubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1NonResourceRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.NonResourceRule",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1NonResourceRule",
    modelProperties: {
      nonResourceURLs: {
        serializedName: "nonResourceURLs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1ResourceRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.ResourceRule",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1ResourceRule",
    modelProperties: {
      apiGroups: {
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceNames: {
        serializedName: "resourceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SelfSubjectAccessReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec",
    modelProperties: {
      nonResourceAttributes: {
        serializedName: "nonResourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1NonResourceAttributes"
        }
      },
      resourceAttributes: {
        serializedName: "resourceAttributes",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1ResourceAttributes"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SelfSubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SelfSubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SelfSubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SelfSubjectRulesReviewSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec",
    modelProperties: {
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SubjectRulesReviewStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus",
    modelProperties: {
      evaluationError: {
        serializedName: "evaluationError",
        type: {
          name: "String"
        }
      },
      incomplete: {
        required: true,
        serializedName: "incomplete",
        type: {
          name: "Boolean"
        }
      },
      nonResourceRules: {
        required: true,
        serializedName: "nonResourceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiauthorizationv1beta1NonResourceRule"
            }
          }
        }
      },
      resourceRules: {
        required: true,
        serializedName: "resourceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiauthorizationv1beta1ResourceRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SelfSubjectRulesReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SelfSubjectRulesReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SelfSubjectRulesReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiauthorizationv1beta1SubjectAccessReview: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.authorization.v1beta1.SubjectAccessReview",
  type: {
    name: "Composite",
    className: "Iok8sapiauthorizationv1beta1SubjectAccessReview",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1CrossVersionObjectReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.CrossVersionObjectReference",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1CrossVersionObjectReference",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec",
    modelProperties: {
      maxReplicas: {
        required: true,
        serializedName: "maxReplicas",
        type: {
          name: "Number"
        }
      },
      minReplicas: {
        serializedName: "minReplicas",
        type: {
          name: "Number"
        }
      },
      scaleTargetRef: {
        required: true,
        serializedName: "scaleTargetRef",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv1CrossVersionObjectReference"
        }
      },
      targetCPUUtilizationPercentage: {
        serializedName: "targetCPUUtilizationPercentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus",
    modelProperties: {
      currentCPUUtilizationPercentage: {
        serializedName: "currentCPUUtilizationPercentage",
        type: {
          name: "Number"
        }
      },
      currentReplicas: {
        required: true,
        serializedName: "currentReplicas",
        type: {
          name: "Number"
        }
      },
      desiredReplicas: {
        required: true,
        serializedName: "desiredReplicas",
        type: {
          name: "Number"
        }
      },
      lastScaleTime: {
        serializedName: "lastScaleTime",
        type: {
          name: "DateTime"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1HorizontalPodAutoscaler: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1HorizontalPodAutoscaler",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1HorizontalPodAutoscalerList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1HorizontalPodAutoscalerList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiautoscalingv1HorizontalPodAutoscaler"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1ScaleSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.ScaleSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1ScaleSpec",
    modelProperties: {
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1ScaleStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.ScaleStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1ScaleStatus",
    modelProperties: {
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv1Scale: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v1.Scale",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv1Scale",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv1ScaleSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv1ScaleStatus"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1CrossVersionObjectReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1CrossVersionObjectReference",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ExternalMetricSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ExternalMetricSource",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ExternalMetricSource",
    modelProperties: {
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      metricSelector: {
        serializedName: "metricSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      targetAverageValue: {
        serializedName: "targetAverageValue",
        type: {
          name: "String"
        }
      },
      targetValue: {
        serializedName: "targetValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ExternalMetricStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ExternalMetricStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ExternalMetricStatus",
    modelProperties: {
      currentAverageValue: {
        serializedName: "currentAverageValue",
        type: {
          name: "String"
        }
      },
      currentValue: {
        required: true,
        serializedName: "currentValue",
        type: {
          name: "String"
        }
      },
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      metricSelector: {
        serializedName: "metricSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ObjectMetricSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ObjectMetricSource",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ObjectMetricSource",
    modelProperties: {
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      target: {
        required: true,
        serializedName: "target",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1CrossVersionObjectReference"
        }
      },
      targetValue: {
        required: true,
        serializedName: "targetValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1PodsMetricSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.PodsMetricSource",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1PodsMetricSource",
    modelProperties: {
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      targetAverageValue: {
        required: true,
        serializedName: "targetAverageValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ResourceMetricSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ResourceMetricSource",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ResourceMetricSource",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      targetAverageUtilization: {
        serializedName: "targetAverageUtilization",
        type: {
          name: "Number"
        }
      },
      targetAverageValue: {
        serializedName: "targetAverageValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1MetricSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.MetricSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1MetricSpec",
    modelProperties: {
      external: {
        serializedName: "external",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ExternalMetricSource"
        }
      },
      object: {
        serializedName: "object",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ObjectMetricSource"
        }
      },
      pods: {
        serializedName: "pods",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1PodsMetricSource"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ResourceMetricSource"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec",
    modelProperties: {
      maxReplicas: {
        required: true,
        serializedName: "maxReplicas",
        type: {
          name: "Number"
        }
      },
      metrics: {
        serializedName: "metrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiautoscalingv2beta1MetricSpec"
            }
          }
        }
      },
      minReplicas: {
        serializedName: "minReplicas",
        type: {
          name: "Number"
        }
      },
      scaleTargetRef: {
        required: true,
        serializedName: "scaleTargetRef",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1CrossVersionObjectReference"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ObjectMetricStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ObjectMetricStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ObjectMetricStatus",
    modelProperties: {
      currentValue: {
        required: true,
        serializedName: "currentValue",
        type: {
          name: "String"
        }
      },
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      target: {
        required: true,
        serializedName: "target",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1CrossVersionObjectReference"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1PodsMetricStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.PodsMetricStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1PodsMetricStatus",
    modelProperties: {
      currentAverageValue: {
        required: true,
        serializedName: "currentAverageValue",
        type: {
          name: "String"
        }
      },
      metricName: {
        required: true,
        serializedName: "metricName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1ResourceMetricStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1ResourceMetricStatus",
    modelProperties: {
      currentAverageUtilization: {
        serializedName: "currentAverageUtilization",
        type: {
          name: "Number"
        }
      },
      currentAverageValue: {
        required: true,
        serializedName: "currentAverageValue",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1MetricStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.MetricStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1MetricStatus",
    modelProperties: {
      external: {
        serializedName: "external",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ExternalMetricStatus"
        }
      },
      object: {
        serializedName: "object",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ObjectMetricStatus"
        }
      },
      pods: {
        serializedName: "pods",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1PodsMetricStatus"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1ResourceMetricStatus"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus",
    modelProperties: {
      conditions: {
        required: true,
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition"
            }
          }
        }
      },
      currentMetrics: {
        required: true,
        serializedName: "currentMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiautoscalingv2beta1MetricStatus"
            }
          }
        }
      },
      currentReplicas: {
        required: true,
        serializedName: "currentReplicas",
        type: {
          name: "Number"
        }
      },
      desiredReplicas: {
        required: true,
        serializedName: "desiredReplicas",
        type: {
          name: "Number"
        }
      },
      lastScaleTime: {
        serializedName: "lastScaleTime",
        type: {
          name: "DateTime"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus"
        }
      }
    }
  }
};

export const Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerList",
  type: {
    name: "Composite",
    className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapibatchv1JobSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1.JobSpec",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1JobSpec",
    modelProperties: {
      activeDeadlineSeconds: {
        serializedName: "activeDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      backoffLimit: {
        serializedName: "backoffLimit",
        type: {
          name: "Number"
        }
      },
      completions: {
        serializedName: "completions",
        type: {
          name: "Number"
        }
      },
      manualSelector: {
        serializedName: "manualSelector",
        type: {
          name: "Boolean"
        }
      },
      parallelism: {
        serializedName: "parallelism",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapibatchv1JobCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1.JobCondition",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1JobCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "DateTime"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapibatchv1JobStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1.JobStatus",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1JobStatus",
    modelProperties: {
      active: {
        serializedName: "active",
        type: {
          name: "Number"
        }
      },
      completionTime: {
        serializedName: "completionTime",
        type: {
          name: "DateTime"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapibatchv1JobCondition"
            }
          }
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      succeeded: {
        serializedName: "succeeded",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapibatchv1Job: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1.Job",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1Job",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1JobSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1JobStatus"
        }
      }
    }
  }
};

export const Iok8sapibatchv1JobList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1.JobList",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1JobList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapibatchv1Job"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapibatchv1beta1JobTemplateSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1beta1.JobTemplateSpec",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1beta1JobTemplateSpec",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1JobSpec"
        }
      }
    }
  }
};

export const Iok8sapibatchv1beta1CronJobSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1beta1.CronJobSpec",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1beta1CronJobSpec",
    modelProperties: {
      concurrencyPolicy: {
        serializedName: "concurrencyPolicy",
        type: {
          name: "String"
        }
      },
      failedJobsHistoryLimit: {
        serializedName: "failedJobsHistoryLimit",
        type: {
          name: "Number"
        }
      },
      jobTemplate: {
        required: true,
        serializedName: "jobTemplate",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1beta1JobTemplateSpec"
        }
      },
      schedule: {
        required: true,
        serializedName: "schedule",
        type: {
          name: "String"
        }
      },
      startingDeadlineSeconds: {
        serializedName: "startingDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      successfulJobsHistoryLimit: {
        serializedName: "successfulJobsHistoryLimit",
        type: {
          name: "Number"
        }
      },
      suspend: {
        serializedName: "suspend",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Iok8sapibatchv1beta1CronJobStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1beta1.CronJobStatus",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1beta1CronJobStatus",
    modelProperties: {
      active: {
        serializedName: "active",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ObjectReference"
            }
          }
        }
      },
      lastScheduleTime: {
        serializedName: "lastScheduleTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Iok8sapibatchv1beta1CronJob: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1beta1.CronJob",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1beta1CronJob",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1beta1CronJobSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapibatchv1beta1CronJobStatus"
        }
      }
    }
  }
};

export const Iok8sapibatchv1beta1CronJobList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.batch.v1beta1.CronJobList",
  type: {
    name: "Composite",
    className: "Iok8sapibatchv1beta1CronJobList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapibatchv1beta1CronJob"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapicertificatesv1beta1CertificateSigningRequestSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec",
  type: {
    name: "Composite",
    className: "Iok8sapicertificatesv1beta1CertificateSigningRequestSpec",
    modelProperties: {
      extra: {
        serializedName: "extra",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      request: {
        required: true,
        serializedName: "request",
        type: {
          name: "ByteArray"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      },
      usages: {
        serializedName: "usages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapicertificatesv1beta1CertificateSigningRequestCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.certificates.v1beta1.CertificateSigningRequestCondition",
  type: {
    name: "Composite",
    className: "Iok8sapicertificatesv1beta1CertificateSigningRequestCondition",
    modelProperties: {
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapicertificatesv1beta1CertificateSigningRequestStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.certificates.v1beta1.CertificateSigningRequestStatus",
  type: {
    name: "Composite",
    className: "Iok8sapicertificatesv1beta1CertificateSigningRequestStatus",
    modelProperties: {
      certificate: {
        serializedName: "certificate",
        type: {
          name: "ByteArray"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapicertificatesv1beta1CertificateSigningRequestCondition"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapicertificatesv1beta1CertificateSigningRequest: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.certificates.v1beta1.CertificateSigningRequest",
  type: {
    name: "Composite",
    className: "Iok8sapicertificatesv1beta1CertificateSigningRequest",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapicertificatesv1beta1CertificateSigningRequestSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapicertificatesv1beta1CertificateSigningRequestStatus"
        }
      }
    }
  }
};

export const Iok8sapicertificatesv1beta1CertificateSigningRequestList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList",
  type: {
    name: "Composite",
    className: "Iok8sapicertificatesv1beta1CertificateSigningRequestList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapicertificatesv1beta1CertificateSigningRequest"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1AttachedVolume: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.AttachedVolume",
  type: {
    name: "Composite",
    className: "V1AttachedVolume",
    modelProperties: {
      devicePath: {
        required: true,
        serializedName: "devicePath",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1AzureFilePersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.AzureFilePersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1AzureFilePersistentVolumeSource",
    modelProperties: {
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretName: {
        required: true,
        serializedName: "secretName",
        type: {
          name: "String"
        }
      },
      secretNamespace: {
        serializedName: "secretNamespace",
        type: {
          name: "String"
        }
      },
      shareName: {
        required: true,
        serializedName: "shareName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Binding: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Binding",
  type: {
    name: "Composite",
    className: "V1Binding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      target: {
        required: true,
        serializedName: "target",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const V1SecretReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretReference",
  type: {
    name: "Composite",
    className: "V1SecretReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CSIPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.CSIPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1CSIPersistentVolumeSource",
    modelProperties: {
      controllerPublishSecretRef: {
        serializedName: "controllerPublishSecretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      nodePublishSecretRef: {
        serializedName: "nodePublishSecretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      nodeStageSecretRef: {
        serializedName: "nodeStageSecretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      volumeAttributes: {
        serializedName: "volumeAttributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      volumeHandle: {
        required: true,
        serializedName: "volumeHandle",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CephFSPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.CephFSPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1CephFSPersistentVolumeSource",
    modelProperties: {
      monitors: {
        required: true,
        serializedName: "monitors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretFile: {
        serializedName: "secretFile",
        type: {
          name: "String"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CinderPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.CinderPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1CinderPersistentVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      volumeID: {
        required: true,
        serializedName: "volumeID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ClientIPConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ClientIPConfig",
  type: {
    name: "Composite",
    className: "V1ClientIPConfig",
    modelProperties: {
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1ComponentCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ComponentCondition",
  type: {
    name: "Composite",
    className: "V1ComponentCondition",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ComponentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ComponentStatus",
  type: {
    name: "Composite",
    className: "V1ComponentStatus",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ComponentCondition"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const V1ComponentStatusList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ComponentStatusList",
  type: {
    name: "Composite",
    className: "V1ComponentStatusList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ComponentStatus"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ConfigMap: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMap",
  type: {
    name: "Composite",
    className: "V1ConfigMap",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      binaryData: {
        serializedName: "binaryData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "ByteArray"
            }
          }
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const V1ConfigMapList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapList",
  type: {
    name: "Composite",
    className: "V1ConfigMapList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ConfigMap"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ConfigMapNodeConfigSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ConfigMapNodeConfigSource",
  type: {
    name: "Composite",
    className: "V1ConfigMapNodeConfigSource",
    modelProperties: {
      kubeletConfigKey: {
        required: true,
        serializedName: "kubeletConfigKey",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ContainerImage: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerImage",
  type: {
    name: "Composite",
    className: "V1ContainerImage",
    modelProperties: {
      names: {
        required: true,
        serializedName: "names",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sizeBytes: {
        serializedName: "sizeBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1ContainerStateRunning: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerStateRunning",
  type: {
    name: "Composite",
    className: "V1ContainerStateRunning",
    modelProperties: {
      startedAt: {
        serializedName: "startedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const V1ContainerStateTerminated: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerStateTerminated",
  type: {
    name: "Composite",
    className: "V1ContainerStateTerminated",
    modelProperties: {
      containerID: {
        serializedName: "containerID",
        type: {
          name: "String"
        }
      },
      exitCode: {
        required: true,
        serializedName: "exitCode",
        type: {
          name: "Number"
        }
      },
      finishedAt: {
        serializedName: "finishedAt",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      signal: {
        serializedName: "signal",
        type: {
          name: "Number"
        }
      },
      startedAt: {
        serializedName: "startedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const V1ContainerStateWaiting: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerStateWaiting",
  type: {
    name: "Composite",
    className: "V1ContainerStateWaiting",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ContainerState: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerState",
  type: {
    name: "Composite",
    className: "V1ContainerState",
    modelProperties: {
      running: {
        serializedName: "running",
        type: {
          name: "Composite",
          className: "V1ContainerStateRunning"
        }
      },
      terminated: {
        serializedName: "terminated",
        type: {
          name: "Composite",
          className: "V1ContainerStateTerminated"
        }
      },
      waiting: {
        serializedName: "waiting",
        type: {
          name: "Composite",
          className: "V1ContainerStateWaiting"
        }
      }
    }
  }
};

export const V1ContainerStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ContainerStatus",
  type: {
    name: "Composite",
    className: "V1ContainerStatus",
    modelProperties: {
      containerID: {
        serializedName: "containerID",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      imageID: {
        required: true,
        serializedName: "imageID",
        type: {
          name: "String"
        }
      },
      lastState: {
        serializedName: "lastState",
        type: {
          name: "Composite",
          className: "V1ContainerState"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      ready: {
        required: true,
        serializedName: "ready",
        type: {
          name: "Boolean"
        }
      },
      restartCount: {
        required: true,
        serializedName: "restartCount",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Composite",
          className: "V1ContainerState"
        }
      }
    }
  }
};

export const V1DaemonEndpoint: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.DaemonEndpoint",
  type: {
    name: "Composite",
    className: "V1DaemonEndpoint",
    modelProperties: {
      port: {
        required: true,
        serializedName: "Port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1EndpointAddress: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EndpointAddress",
  type: {
    name: "Composite",
    className: "V1EndpointAddress",
    modelProperties: {
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ip: {
        required: true,
        serializedName: "ip",
        type: {
          name: "String"
        }
      },
      nodeName: {
        serializedName: "nodeName",
        type: {
          name: "String"
        }
      },
      targetRef: {
        serializedName: "targetRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      }
    }
  }
};

export const V1EndpointPort: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EndpointPort",
  type: {
    name: "Composite",
    className: "V1EndpointPort",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "Number"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1EndpointSubset: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EndpointSubset",
  type: {
    name: "Composite",
    className: "V1EndpointSubset",
    modelProperties: {
      addresses: {
        serializedName: "addresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EndpointAddress"
            }
          }
        }
      },
      notReadyAddresses: {
        serializedName: "notReadyAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EndpointAddress"
            }
          }
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EndpointPort"
            }
          }
        }
      }
    }
  }
};

export const V1Endpoints: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Endpoints",
  type: {
    name: "Composite",
    className: "V1Endpoints",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      subsets: {
        serializedName: "subsets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1EndpointSubset"
            }
          }
        }
      }
    }
  }
};

export const V1EndpointsList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EndpointsList",
  type: {
    name: "Composite",
    className: "V1EndpointsList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Endpoints"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1EventSeries: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EventSeries",
  type: {
    name: "Composite",
    className: "V1EventSeries",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      lastObservedTime: {
        serializedName: "lastObservedTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1EventSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EventSource",
  type: {
    name: "Composite",
    className: "V1EventSource",
    modelProperties: {
      component: {
        serializedName: "component",
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Event: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Event",
  type: {
    name: "Composite",
    className: "V1Event",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      eventTime: {
        serializedName: "eventTime",
        type: {
          name: "DateTime"
        }
      },
      firstTimestamp: {
        serializedName: "firstTimestamp",
        type: {
          name: "DateTime"
        }
      },
      involvedObject: {
        required: true,
        serializedName: "involvedObject",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      lastTimestamp: {
        serializedName: "lastTimestamp",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      metadata: {
        required: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      related: {
        serializedName: "related",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      reportingComponent: {
        serializedName: "reportingComponent",
        type: {
          name: "String"
        }
      },
      reportingInstance: {
        serializedName: "reportingInstance",
        type: {
          name: "String"
        }
      },
      series: {
        serializedName: "series",
        type: {
          name: "Composite",
          className: "V1EventSeries"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "V1EventSource"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1EventList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.EventList",
  type: {
    name: "Composite",
    className: "V1EventList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Event"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1FlexPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.FlexPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1FlexPersistentVolumeSource",
    modelProperties: {
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      options: {
        serializedName: "options",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      }
    }
  }
};

export const V1ISCSIPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ISCSIPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1ISCSIPersistentVolumeSource",
    modelProperties: {
      chapAuthDiscovery: {
        serializedName: "chapAuthDiscovery",
        type: {
          name: "Boolean"
        }
      },
      chapAuthSession: {
        serializedName: "chapAuthSession",
        type: {
          name: "Boolean"
        }
      },
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      initiatorName: {
        serializedName: "initiatorName",
        type: {
          name: "String"
        }
      },
      iqn: {
        required: true,
        serializedName: "iqn",
        type: {
          name: "String"
        }
      },
      iscsiInterface: {
        serializedName: "iscsiInterface",
        type: {
          name: "String"
        }
      },
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      portals: {
        serializedName: "portals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      targetPortal: {
        required: true,
        serializedName: "targetPortal",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1LimitRangeItem: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LimitRangeItem",
  type: {
    name: "Composite",
    className: "V1LimitRangeItem",
    modelProperties: {
      default: {
        serializedName: "default",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultRequest: {
        serializedName: "defaultRequest",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      max: {
        serializedName: "max",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      maxLimitRequestRatio: {
        serializedName: "maxLimitRequestRatio",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      min: {
        serializedName: "min",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1LimitRangeSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LimitRangeSpec",
  type: {
    name: "Composite",
    className: "V1LimitRangeSpec",
    modelProperties: {
      limits: {
        required: true,
        serializedName: "limits",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LimitRangeItem"
            }
          }
        }
      }
    }
  }
};

export const V1LimitRange: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LimitRange",
  type: {
    name: "Composite",
    className: "V1LimitRange",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1LimitRangeSpec"
        }
      }
    }
  }
};

export const V1LimitRangeList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LimitRangeList",
  type: {
    name: "Composite",
    className: "V1LimitRangeList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LimitRange"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1LoadBalancerIngress: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LoadBalancerIngress",
  type: {
    name: "Composite",
    className: "V1LoadBalancerIngress",
    modelProperties: {
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ip: {
        serializedName: "ip",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1LoadBalancerStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LoadBalancerStatus",
  type: {
    name: "Composite",
    className: "V1LoadBalancerStatus",
    modelProperties: {
      ingress: {
        serializedName: "ingress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LoadBalancerIngress"
            }
          }
        }
      }
    }
  }
};

export const V1LocalVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.LocalVolumeSource",
  type: {
    name: "Composite",
    className: "V1LocalVolumeSource",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NamespaceSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NamespaceSpec",
  type: {
    name: "Composite",
    className: "V1NamespaceSpec",
    modelProperties: {
      finalizers: {
        serializedName: "finalizers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1NamespaceStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NamespaceStatus",
  type: {
    name: "Composite",
    className: "V1NamespaceStatus",
    modelProperties: {
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Namespace: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Namespace",
  type: {
    name: "Composite",
    className: "V1Namespace",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1NamespaceSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1NamespaceStatus"
        }
      }
    }
  }
};

export const V1NamespaceList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NamespaceList",
  type: {
    name: "Composite",
    className: "V1NamespaceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Namespace"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1NodeConfigSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeConfigSource",
  type: {
    name: "Composite",
    className: "V1NodeConfigSource",
    modelProperties: {
      configMap: {
        serializedName: "configMap",
        type: {
          name: "Composite",
          className: "V1ConfigMapNodeConfigSource"
        }
      }
    }
  }
};

export const V1Taint: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Taint",
  type: {
    name: "Composite",
    className: "V1Taint",
    modelProperties: {
      effect: {
        required: true,
        serializedName: "effect",
        type: {
          name: "String"
        }
      },
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      timeAdded: {
        serializedName: "timeAdded",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NodeSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeSpec",
  type: {
    name: "Composite",
    className: "V1NodeSpec",
    modelProperties: {
      configSource: {
        serializedName: "configSource",
        type: {
          name: "Composite",
          className: "V1NodeConfigSource"
        }
      },
      externalID: {
        serializedName: "externalID",
        type: {
          name: "String"
        }
      },
      podCIDR: {
        serializedName: "podCIDR",
        type: {
          name: "String"
        }
      },
      providerID: {
        serializedName: "providerID",
        type: {
          name: "String"
        }
      },
      taints: {
        serializedName: "taints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Taint"
            }
          }
        }
      },
      unschedulable: {
        serializedName: "unschedulable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1NodeAddress: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeAddress",
  type: {
    name: "Composite",
    className: "V1NodeAddress",
    modelProperties: {
      address: {
        required: true,
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NodeCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeCondition",
  type: {
    name: "Composite",
    className: "V1NodeCondition",
    modelProperties: {
      lastHeartbeatTime: {
        serializedName: "lastHeartbeatTime",
        type: {
          name: "DateTime"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NodeConfigStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeConfigStatus",
  type: {
    name: "Composite",
    className: "V1NodeConfigStatus",
    modelProperties: {
      active: {
        serializedName: "active",
        type: {
          name: "Composite",
          className: "V1NodeConfigSource"
        }
      },
      assigned: {
        serializedName: "assigned",
        type: {
          name: "Composite",
          className: "V1NodeConfigSource"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      lastKnownGood: {
        serializedName: "lastKnownGood",
        type: {
          name: "Composite",
          className: "V1NodeConfigSource"
        }
      }
    }
  }
};

export const V1NodeDaemonEndpoints: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeDaemonEndpoints",
  type: {
    name: "Composite",
    className: "V1NodeDaemonEndpoints",
    modelProperties: {
      kubeletEndpoint: {
        serializedName: "kubeletEndpoint",
        type: {
          name: "Composite",
          className: "V1DaemonEndpoint"
        }
      }
    }
  }
};

export const V1NodeSystemInfo: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeSystemInfo",
  type: {
    name: "Composite",
    className: "V1NodeSystemInfo",
    modelProperties: {
      architecture: {
        required: true,
        serializedName: "architecture",
        type: {
          name: "String"
        }
      },
      bootID: {
        required: true,
        serializedName: "bootID",
        type: {
          name: "String"
        }
      },
      containerRuntimeVersion: {
        required: true,
        serializedName: "containerRuntimeVersion",
        type: {
          name: "String"
        }
      },
      kernelVersion: {
        required: true,
        serializedName: "kernelVersion",
        type: {
          name: "String"
        }
      },
      kubeProxyVersion: {
        required: true,
        serializedName: "kubeProxyVersion",
        type: {
          name: "String"
        }
      },
      kubeletVersion: {
        required: true,
        serializedName: "kubeletVersion",
        type: {
          name: "String"
        }
      },
      machineID: {
        required: true,
        serializedName: "machineID",
        type: {
          name: "String"
        }
      },
      operatingSystem: {
        required: true,
        serializedName: "operatingSystem",
        type: {
          name: "String"
        }
      },
      osImage: {
        required: true,
        serializedName: "osImage",
        type: {
          name: "String"
        }
      },
      systemUUID: {
        required: true,
        serializedName: "systemUUID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1NodeStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeStatus",
  type: {
    name: "Composite",
    className: "V1NodeStatus",
    modelProperties: {
      addresses: {
        serializedName: "addresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeAddress"
            }
          }
        }
      },
      allocatable: {
        serializedName: "allocatable",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeCondition"
            }
          }
        }
      },
      config: {
        serializedName: "config",
        type: {
          name: "Composite",
          className: "V1NodeConfigStatus"
        }
      },
      daemonEndpoints: {
        serializedName: "daemonEndpoints",
        type: {
          name: "Composite",
          className: "V1NodeDaemonEndpoints"
        }
      },
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ContainerImage"
            }
          }
        }
      },
      nodeInfo: {
        serializedName: "nodeInfo",
        type: {
          name: "Composite",
          className: "V1NodeSystemInfo"
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      volumesAttached: {
        serializedName: "volumesAttached",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1AttachedVolume"
            }
          }
        }
      },
      volumesInUse: {
        serializedName: "volumesInUse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1Node: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Node",
  type: {
    name: "Composite",
    className: "V1Node",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1NodeSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1NodeStatus"
        }
      }
    }
  }
};

export const V1NodeList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.NodeList",
  type: {
    name: "Composite",
    className: "V1NodeList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Node"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1VolumeNodeAffinity: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.VolumeNodeAffinity",
  type: {
    name: "Composite",
    className: "V1VolumeNodeAffinity",
    modelProperties: {
      required: {
        serializedName: "required",
        type: {
          name: "Composite",
          className: "V1NodeSelector"
        }
      }
    }
  }
};

export const V1RBDPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.RBDPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1RBDPersistentVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      keyring: {
        serializedName: "keyring",
        type: {
          name: "String"
        }
      },
      monitors: {
        required: true,
        serializedName: "monitors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pool: {
        serializedName: "pool",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ScaleIOPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1ScaleIOPersistentVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      gateway: {
        required: true,
        serializedName: "gateway",
        type: {
          name: "String"
        }
      },
      protectionDomain: {
        serializedName: "protectionDomain",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        required: true,
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1SecretReference"
        }
      },
      sslEnabled: {
        serializedName: "sslEnabled",
        type: {
          name: "Boolean"
        }
      },
      storageMode: {
        serializedName: "storageMode",
        type: {
          name: "String"
        }
      },
      storagePool: {
        serializedName: "storagePool",
        type: {
          name: "String"
        }
      },
      system: {
        required: true,
        serializedName: "system",
        type: {
          name: "String"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1StorageOSPersistentVolumeSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.StorageOSPersistentVolumeSource",
  type: {
    name: "Composite",
    className: "V1StorageOSPersistentVolumeSource",
    modelProperties: {
      fsType: {
        serializedName: "fsType",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      },
      volumeNamespace: {
        serializedName: "volumeNamespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeSpec",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeSpec",
    modelProperties: {
      accessModes: {
        serializedName: "accessModes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      awsElasticBlockStore: {
        serializedName: "awsElasticBlockStore",
        type: {
          name: "Composite",
          className: "V1AWSElasticBlockStoreVolumeSource"
        }
      },
      azureDisk: {
        serializedName: "azureDisk",
        type: {
          name: "Composite",
          className: "V1AzureDiskVolumeSource"
        }
      },
      azureFile: {
        serializedName: "azureFile",
        type: {
          name: "Composite",
          className: "V1AzureFilePersistentVolumeSource"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      cephfs: {
        serializedName: "cephfs",
        type: {
          name: "Composite",
          className: "V1CephFSPersistentVolumeSource"
        }
      },
      cinder: {
        serializedName: "cinder",
        type: {
          name: "Composite",
          className: "V1CinderPersistentVolumeSource"
        }
      },
      claimRef: {
        serializedName: "claimRef",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      csi: {
        serializedName: "csi",
        type: {
          name: "Composite",
          className: "V1CSIPersistentVolumeSource"
        }
      },
      fc: {
        serializedName: "fc",
        type: {
          name: "Composite",
          className: "V1FCVolumeSource"
        }
      },
      flexVolume: {
        serializedName: "flexVolume",
        type: {
          name: "Composite",
          className: "V1FlexPersistentVolumeSource"
        }
      },
      flocker: {
        serializedName: "flocker",
        type: {
          name: "Composite",
          className: "V1FlockerVolumeSource"
        }
      },
      gcePersistentDisk: {
        serializedName: "gcePersistentDisk",
        type: {
          name: "Composite",
          className: "V1GCEPersistentDiskVolumeSource"
        }
      },
      glusterfs: {
        serializedName: "glusterfs",
        type: {
          name: "Composite",
          className: "V1GlusterfsVolumeSource"
        }
      },
      hostPath: {
        serializedName: "hostPath",
        type: {
          name: "Composite",
          className: "V1HostPathVolumeSource"
        }
      },
      iscsi: {
        serializedName: "iscsi",
        type: {
          name: "Composite",
          className: "V1ISCSIPersistentVolumeSource"
        }
      },
      local: {
        serializedName: "local",
        type: {
          name: "Composite",
          className: "V1LocalVolumeSource"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nfs: {
        serializedName: "nfs",
        type: {
          name: "Composite",
          className: "V1NFSVolumeSource"
        }
      },
      nodeAffinity: {
        serializedName: "nodeAffinity",
        type: {
          name: "Composite",
          className: "V1VolumeNodeAffinity"
        }
      },
      persistentVolumeReclaimPolicy: {
        serializedName: "persistentVolumeReclaimPolicy",
        type: {
          name: "String"
        }
      },
      photonPersistentDisk: {
        serializedName: "photonPersistentDisk",
        type: {
          name: "Composite",
          className: "V1PhotonPersistentDiskVolumeSource"
        }
      },
      portworxVolume: {
        serializedName: "portworxVolume",
        type: {
          name: "Composite",
          className: "V1PortworxVolumeSource"
        }
      },
      quobyte: {
        serializedName: "quobyte",
        type: {
          name: "Composite",
          className: "V1QuobyteVolumeSource"
        }
      },
      rbd: {
        serializedName: "rbd",
        type: {
          name: "Composite",
          className: "V1RBDPersistentVolumeSource"
        }
      },
      scaleIO: {
        serializedName: "scaleIO",
        type: {
          name: "Composite",
          className: "V1ScaleIOPersistentVolumeSource"
        }
      },
      storageClassName: {
        serializedName: "storageClassName",
        type: {
          name: "String"
        }
      },
      storageos: {
        serializedName: "storageos",
        type: {
          name: "Composite",
          className: "V1StorageOSPersistentVolumeSource"
        }
      },
      volumeMode: {
        serializedName: "volumeMode",
        type: {
          name: "String"
        }
      },
      vsphereVolume: {
        serializedName: "vsphereVolume",
        type: {
          name: "Composite",
          className: "V1VsphereVirtualDiskVolumeSource"
        }
      }
    }
  }
};

export const V1PersistentVolumeStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeStatus",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeStatus",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolume: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolume",
  type: {
    name: "Composite",
    className: "V1PersistentVolume",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeStatus"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeClaimList",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolumeClaim"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1PersistentVolumeList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PersistentVolumeList",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PersistentVolume"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1PodCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodCondition",
  type: {
    name: "Composite",
    className: "V1PodCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "DateTime"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodStatus",
  type: {
    name: "Composite",
    className: "V1PodStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodCondition"
            }
          }
        }
      },
      containerStatuses: {
        serializedName: "containerStatuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ContainerStatus"
            }
          }
        }
      },
      hostIP: {
        serializedName: "hostIP",
        type: {
          name: "String"
        }
      },
      initContainerStatuses: {
        serializedName: "initContainerStatuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ContainerStatus"
            }
          }
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      nominatedNodeName: {
        serializedName: "nominatedNodeName",
        type: {
          name: "String"
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      podIP: {
        serializedName: "podIP",
        type: {
          name: "String"
        }
      },
      qosClass: {
        serializedName: "qosClass",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const V1Pod: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Pod",
  type: {
    name: "Composite",
    className: "V1Pod",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1PodSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1PodStatus"
        }
      }
    }
  }
};

export const V1PodList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodList",
  type: {
    name: "Composite",
    className: "V1PodList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Pod"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1PodTemplate: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodTemplate",
  type: {
    name: "Composite",
    className: "V1PodTemplate",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const V1PodTemplateList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.PodTemplateList",
  type: {
    name: "Composite",
    className: "V1PodTemplateList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodTemplate"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ReplicationControllerSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ReplicationControllerSpec",
  type: {
    name: "Composite",
    className: "V1ReplicationControllerSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const V1ReplicationControllerCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ReplicationControllerCondition",
  type: {
    name: "Composite",
    className: "V1ReplicationControllerCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ReplicationControllerStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ReplicationControllerStatus",
  type: {
    name: "Composite",
    className: "V1ReplicationControllerStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ReplicationControllerCondition"
            }
          }
        }
      },
      fullyLabeledReplicas: {
        serializedName: "fullyLabeledReplicas",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1ReplicationController: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ReplicationController",
  type: {
    name: "Composite",
    className: "V1ReplicationController",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1ReplicationControllerSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1ReplicationControllerStatus"
        }
      }
    }
  }
};

export const V1ReplicationControllerList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ReplicationControllerList",
  type: {
    name: "Composite",
    className: "V1ReplicationControllerList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ReplicationController"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ResourceQuota: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceQuota",
  type: {
    name: "Composite",
    className: "V1ResourceQuota",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1ResourceQuotaSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1ResourceQuotaStatus"
        }
      }
    }
  }
};

export const V1ResourceQuotaList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ResourceQuotaList",
  type: {
    name: "Composite",
    className: "V1ResourceQuotaList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ResourceQuota"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1Secret: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Secret",
  type: {
    name: "Composite",
    className: "V1Secret",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "ByteArray"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      stringData: {
        serializedName: "stringData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1SecretList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SecretList",
  type: {
    name: "Composite",
    className: "V1SecretList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Secret"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ServicePort: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServicePort",
  type: {
    name: "Composite",
    className: "V1ServicePort",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      nodePort: {
        serializedName: "nodePort",
        type: {
          name: "Number"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "Number"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      targetPort: {
        serializedName: "targetPort",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1SessionAffinityConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.SessionAffinityConfig",
  type: {
    name: "Composite",
    className: "V1SessionAffinityConfig",
    modelProperties: {
      clientIP: {
        serializedName: "clientIP",
        type: {
          name: "Composite",
          className: "V1ClientIPConfig"
        }
      }
    }
  }
};

export const V1ServiceSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceSpec",
  type: {
    name: "Composite",
    className: "V1ServiceSpec",
    modelProperties: {
      clusterIP: {
        serializedName: "clusterIP",
        type: {
          name: "String"
        }
      },
      externalIPs: {
        serializedName: "externalIPs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      externalName: {
        serializedName: "externalName",
        type: {
          name: "String"
        }
      },
      externalTrafficPolicy: {
        serializedName: "externalTrafficPolicy",
        type: {
          name: "String"
        }
      },
      healthCheckNodePort: {
        serializedName: "healthCheckNodePort",
        type: {
          name: "Number"
        }
      },
      loadBalancerIP: {
        serializedName: "loadBalancerIP",
        type: {
          name: "String"
        }
      },
      loadBalancerSourceRanges: {
        serializedName: "loadBalancerSourceRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ServicePort"
            }
          }
        }
      },
      publishNotReadyAddresses: {
        serializedName: "publishNotReadyAddresses",
        type: {
          name: "Boolean"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sessionAffinity: {
        serializedName: "sessionAffinity",
        type: {
          name: "String"
        }
      },
      sessionAffinityConfig: {
        serializedName: "sessionAffinityConfig",
        type: {
          name: "Composite",
          className: "V1SessionAffinityConfig"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ServiceStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceStatus",
  type: {
    name: "Composite",
    className: "V1ServiceStatus",
    modelProperties: {
      loadBalancer: {
        serializedName: "loadBalancer",
        type: {
          name: "Composite",
          className: "V1LoadBalancerStatus"
        }
      }
    }
  }
};

export const V1Service: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.Service",
  type: {
    name: "Composite",
    className: "V1Service",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1ServiceSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1ServiceStatus"
        }
      }
    }
  }
};

export const V1ServiceAccount: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceAccount",
  type: {
    name: "Composite",
    className: "V1ServiceAccount",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      automountServiceAccountToken: {
        serializedName: "automountServiceAccountToken",
        type: {
          name: "Boolean"
        }
      },
      imagePullSecrets: {
        serializedName: "imagePullSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LocalObjectReference"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ObjectReference"
            }
          }
        }
      }
    }
  }
};

export const V1ServiceAccountList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceAccountList",
  type: {
    name: "Composite",
    className: "V1ServiceAccountList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ServiceAccount"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1ServiceList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.ServiceList",
  type: {
    name: "Composite",
    className: "V1ServiceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Service"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const V1TopologySelectorLabelRequirement: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.TopologySelectorLabelRequirement",
  type: {
    name: "Composite",
    className: "V1TopologySelectorLabelRequirement",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      values: {
        required: true,
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1TopologySelectorTerm: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.core.v1.TopologySelectorTerm",
  type: {
    name: "Composite",
    className: "V1TopologySelectorTerm",
    modelProperties: {
      matchLabelExpressions: {
        serializedName: "matchLabelExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1TopologySelectorLabelRequirement"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapieventsv1beta1EventSeries: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.events.v1beta1.EventSeries",
  type: {
    name: "Composite",
    className: "Iok8sapieventsv1beta1EventSeries",
    modelProperties: {
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      lastObservedTime: {
        required: true,
        serializedName: "lastObservedTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        required: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapieventsv1beta1Event: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.events.v1beta1.Event",
  type: {
    name: "Composite",
    className: "Iok8sapieventsv1beta1Event",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      deprecatedCount: {
        serializedName: "deprecatedCount",
        type: {
          name: "Number"
        }
      },
      deprecatedFirstTimestamp: {
        serializedName: "deprecatedFirstTimestamp",
        type: {
          name: "DateTime"
        }
      },
      deprecatedLastTimestamp: {
        serializedName: "deprecatedLastTimestamp",
        type: {
          name: "DateTime"
        }
      },
      deprecatedSource: {
        serializedName: "deprecatedSource",
        type: {
          name: "Composite",
          className: "V1EventSource"
        }
      },
      eventTime: {
        required: true,
        serializedName: "eventTime",
        type: {
          name: "DateTime"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      note: {
        serializedName: "note",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      regarding: {
        serializedName: "regarding",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      related: {
        serializedName: "related",
        type: {
          name: "Composite",
          className: "V1ObjectReference"
        }
      },
      reportingController: {
        serializedName: "reportingController",
        type: {
          name: "String"
        }
      },
      reportingInstance: {
        serializedName: "reportingInstance",
        type: {
          name: "String"
        }
      },
      series: {
        serializedName: "series",
        type: {
          name: "Composite",
          className: "Iok8sapieventsv1beta1EventSeries"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapieventsv1beta1EventList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.events.v1beta1.EventList",
  type: {
    name: "Composite",
    className: "Iok8sapieventsv1beta1EventList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapieventsv1beta1Event"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1AllowedFlexVolume: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.AllowedFlexVolume",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1AllowedFlexVolume",
    modelProperties: {
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1AllowedHostPath: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.AllowedHostPath",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1AllowedHostPath",
    modelProperties: {
      pathPrefix: {
        serializedName: "pathPrefix",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1RollingUpdateDaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.RollingUpdateDaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1RollingUpdateDaemonSet",
    modelProperties: {
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSetUpdateStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1RollingUpdateDaemonSet"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      },
      templateGeneration: {
        serializedName: "templateGeneration",
        type: {
          name: "Number"
        }
      },
      updateStrategy: {
        serializedName: "updateStrategy",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSetStatus",
    modelProperties: {
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1DaemonSetCondition"
            }
          }
        }
      },
      currentNumberScheduled: {
        required: true,
        serializedName: "currentNumberScheduled",
        type: {
          name: "Number"
        }
      },
      desiredNumberScheduled: {
        required: true,
        serializedName: "desiredNumberScheduled",
        type: {
          name: "Number"
        }
      },
      numberAvailable: {
        serializedName: "numberAvailable",
        type: {
          name: "Number"
        }
      },
      numberMisscheduled: {
        required: true,
        serializedName: "numberMisscheduled",
        type: {
          name: "Number"
        }
      },
      numberReady: {
        required: true,
        serializedName: "numberReady",
        type: {
          name: "Number"
        }
      },
      numberUnavailable: {
        serializedName: "numberUnavailable",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      updatedNumberScheduled: {
        serializedName: "updatedNumberScheduled",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSet",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DaemonSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DaemonSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DaemonSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DaemonSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DaemonSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1DaemonSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1RollbackConfig: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.RollbackConfig",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1RollbackConfig",
    modelProperties: {
      revision: {
        serializedName: "revision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1RollingUpdateDeployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.RollingUpdateDeployment",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1RollingUpdateDeployment",
    modelProperties: {
      maxSurge: {
        serializedName: "maxSurge",
        type: {
          name: "String"
        }
      },
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentStrategy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentStrategy",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentStrategy",
    modelProperties: {
      rollingUpdate: {
        serializedName: "rollingUpdate",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1RollingUpdateDeployment"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      progressDeadlineSeconds: {
        serializedName: "progressDeadlineSeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      revisionHistoryLimit: {
        serializedName: "revisionHistoryLimit",
        type: {
          name: "Number"
        }
      },
      rollbackTo: {
        serializedName: "rollbackTo",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1RollbackConfig"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      strategy: {
        serializedName: "strategy",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DeploymentStrategy"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      collisionCount: {
        serializedName: "collisionCount",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1DeploymentCondition"
            }
          }
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      unavailableReplicas: {
        serializedName: "unavailableReplicas",
        type: {
          name: "Number"
        }
      },
      updatedReplicas: {
        serializedName: "updatedReplicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1Deployment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.Deployment",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1Deployment",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DeploymentSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1DeploymentStatus"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1Deployment"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1DeploymentRollback: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.DeploymentRollback",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1DeploymentRollback",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      rollbackTo: {
        required: true,
        serializedName: "rollbackTo",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1RollbackConfig"
        }
      },
      updatedAnnotations: {
        serializedName: "updatedAnnotations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IDRange: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IDRange",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IDRange",
    modelProperties: {
      max: {
        required: true,
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      min: {
        required: true,
        serializedName: "min",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1FSGroupStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.FSGroupStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1FSGroupStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressBackend: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressBackend",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressBackend",
    modelProperties: {
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      servicePort: {
        required: true,
        serializedName: "servicePort",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1HTTPIngressPath: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.HTTPIngressPath",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1HTTPIngressPath",
    modelProperties: {
      backend: {
        required: true,
        serializedName: "backend",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1IngressBackend"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1HTTPIngressRuleValue: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.HTTPIngressRuleValue",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1HTTPIngressRuleValue",
    modelProperties: {
      paths: {
        required: true,
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1HTTPIngressPath"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1HostPortRange: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.HostPortRange",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1HostPortRange",
    modelProperties: {
      max: {
        required: true,
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      min: {
        required: true,
        serializedName: "min",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IPBlock: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IPBlock",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IPBlock",
    modelProperties: {
      cidr: {
        required: true,
        serializedName: "cidr",
        type: {
          name: "String"
        }
      },
      except: {
        serializedName: "except",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressRule",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressRule",
    modelProperties: {
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      http: {
        serializedName: "http",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1HTTPIngressRuleValue"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressTLS: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressTLS",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressTLS",
    modelProperties: {
      hosts: {
        serializedName: "hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secretName: {
        serializedName: "secretName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressSpec",
    modelProperties: {
      backend: {
        serializedName: "backend",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1IngressBackend"
        }
      },
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1IngressRule"
            }
          }
        }
      },
      tls: {
        serializedName: "tls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1IngressTLS"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressStatus",
    modelProperties: {
      loadBalancer: {
        serializedName: "loadBalancer",
        type: {
          name: "Composite",
          className: "V1LoadBalancerStatus"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1Ingress: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.Ingress",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1Ingress",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1IngressSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1IngressStatus"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1IngressList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.IngressList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1IngressList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1Ingress"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicyPort: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicyPort",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicyPort",
    modelProperties: {
      port: {
        serializedName: "port",
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicyPeer: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicyPeer",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicyPeer",
    modelProperties: {
      ipBlock: {
        serializedName: "ipBlock",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1IPBlock"
        }
      },
      namespaceSelector: {
        serializedName: "namespaceSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      podSelector: {
        serializedName: "podSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicyEgressRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicyEgressRule",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicyEgressRule",
    modelProperties: {
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyPort"
            }
          }
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyPeer"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicyIngressRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicyIngressRule",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicyIngressRule",
    modelProperties: {
      from: {
        serializedName: "from",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyPeer"
            }
          }
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyPort"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicySpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicySpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicySpec",
    modelProperties: {
      egress: {
        serializedName: "egress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyEgressRule"
            }
          }
        }
      },
      ingress: {
        serializedName: "ingress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicyIngressRule"
            }
          }
        }
      },
      podSelector: {
        required: true,
        serializedName: "podSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      policyTypes: {
        serializedName: "policyTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicy",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicy",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1NetworkPolicySpec"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1NetworkPolicyList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.NetworkPolicyList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1NetworkPolicyList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1NetworkPolicy"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1RunAsUserStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1RunAsUserStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        required: true,
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1SELinuxStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1SELinuxStrategyOptions",
    modelProperties: {
      rule: {
        required: true,
        serializedName: "rule",
        type: {
          name: "String"
        }
      },
      seLinuxOptions: {
        serializedName: "seLinuxOptions",
        type: {
          name: "Composite",
          className: "V1SELinuxOptions"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1PodSecurityPolicySpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1PodSecurityPolicySpec",
    modelProperties: {
      allowPrivilegeEscalation: {
        serializedName: "allowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      allowedCapabilities: {
        serializedName: "allowedCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowedFlexVolumes: {
        serializedName: "allowedFlexVolumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1AllowedFlexVolume"
            }
          }
        }
      },
      allowedHostPaths: {
        serializedName: "allowedHostPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1AllowedHostPath"
            }
          }
        }
      },
      allowedUnsafeSysctls: {
        serializedName: "allowedUnsafeSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultAddCapabilities: {
        serializedName: "defaultAddCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultAllowPrivilegeEscalation: {
        serializedName: "defaultAllowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      forbiddenSysctls: {
        serializedName: "forbiddenSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fsGroup: {
        required: true,
        serializedName: "fsGroup",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1FSGroupStrategyOptions"
        }
      },
      hostIPC: {
        serializedName: "hostIPC",
        type: {
          name: "Boolean"
        }
      },
      hostNetwork: {
        serializedName: "hostNetwork",
        type: {
          name: "Boolean"
        }
      },
      hostPID: {
        serializedName: "hostPID",
        type: {
          name: "Boolean"
        }
      },
      hostPorts: {
        serializedName: "hostPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1HostPortRange"
            }
          }
        }
      },
      privileged: {
        serializedName: "privileged",
        type: {
          name: "Boolean"
        }
      },
      readOnlyRootFilesystem: {
        serializedName: "readOnlyRootFilesystem",
        type: {
          name: "Boolean"
        }
      },
      requiredDropCapabilities: {
        serializedName: "requiredDropCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      runAsUser: {
        required: true,
        serializedName: "runAsUser",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1RunAsUserStrategyOptions"
        }
      },
      seLinux: {
        required: true,
        serializedName: "seLinux",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1SELinuxStrategyOptions"
        }
      },
      supplementalGroups: {
        required: true,
        serializedName: "supplementalGroups",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions"
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1PodSecurityPolicy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.PodSecurityPolicy",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1PodSecurityPolicy",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1PodSecurityPolicySpec"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1PodSecurityPolicyList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.PodSecurityPolicyList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1PodSecurityPolicyList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1PodSecurityPolicy"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ReplicaSetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ReplicaSetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ReplicaSetSpec",
    modelProperties: {
      minReadySeconds: {
        serializedName: "minReadySeconds",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      template: {
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1PodTemplateSpec"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ReplicaSetCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ReplicaSetCondition",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ReplicaSetCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ReplicaSetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ReplicaSetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ReplicaSetStatus",
    modelProperties: {
      availableReplicas: {
        serializedName: "availableReplicas",
        type: {
          name: "Number"
        }
      },
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1ReplicaSetCondition"
            }
          }
        }
      },
      fullyLabeledReplicas: {
        serializedName: "fullyLabeledReplicas",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ReplicaSet: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ReplicaSet",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ReplicaSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1ReplicaSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1ReplicaSetStatus"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ReplicaSetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ReplicaSetList",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ReplicaSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapiextensionsv1beta1ReplicaSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ScaleSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ScaleSpec",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ScaleSpec",
    modelProperties: {
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1ScaleStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.ScaleStatus",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1ScaleStatus",
    modelProperties: {
      replicas: {
        required: true,
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetSelector: {
        serializedName: "targetSelector",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapiextensionsv1beta1Scale: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.extensions.v1beta1.Scale",
  type: {
    name: "Composite",
    className: "Iok8sapiextensionsv1beta1Scale",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1ScaleSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapiextensionsv1beta1ScaleStatus"
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1IPBlock: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.IPBlock",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1IPBlock",
    modelProperties: {
      cidr: {
        required: true,
        serializedName: "cidr",
        type: {
          name: "String"
        }
      },
      except: {
        serializedName: "except",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicyPort: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicyPort",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicyPort",
    modelProperties: {
      port: {
        serializedName: "port",
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicyPeer: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicyPeer",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicyPeer",
    modelProperties: {
      ipBlock: {
        serializedName: "ipBlock",
        type: {
          name: "Composite",
          className: "Iok8sapinetworkingv1IPBlock"
        }
      },
      namespaceSelector: {
        serializedName: "namespaceSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      podSelector: {
        serializedName: "podSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicyEgressRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicyEgressRule",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicyEgressRule",
    modelProperties: {
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyPort"
            }
          }
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyPeer"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicyIngressRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicyIngressRule",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicyIngressRule",
    modelProperties: {
      from: {
        serializedName: "from",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyPeer"
            }
          }
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyPort"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicySpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicySpec",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicySpec",
    modelProperties: {
      egress: {
        serializedName: "egress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyEgressRule"
            }
          }
        }
      },
      ingress: {
        serializedName: "ingress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicyIngressRule"
            }
          }
        }
      },
      podSelector: {
        required: true,
        serializedName: "podSelector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      },
      policyTypes: {
        serializedName: "policyTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicy",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicy",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapinetworkingv1NetworkPolicySpec"
        }
      }
    }
  }
};

export const Iok8sapinetworkingv1NetworkPolicyList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.networking.v1.NetworkPolicyList",
  type: {
    name: "Composite",
    className: "Iok8sapinetworkingv1NetworkPolicyList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapinetworkingv1NetworkPolicy"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1AllowedFlexVolume: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.AllowedFlexVolume",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1AllowedFlexVolume",
    modelProperties: {
      driver: {
        required: true,
        serializedName: "driver",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1AllowedHostPath: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.AllowedHostPath",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1AllowedHostPath",
    modelProperties: {
      pathPrefix: {
        serializedName: "pathPrefix",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1Preconditions: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1Preconditions",
    modelProperties: {
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1DeleteOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1DeleteOptions",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      gracePeriodSeconds: {
        serializedName: "gracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      orphanDependents: {
        serializedName: "orphanDependents",
        type: {
          name: "Boolean"
        }
      },
      preconditions: {
        serializedName: "preconditions",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1Preconditions"
        }
      },
      propagationPolicy: {
        serializedName: "propagationPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1Eviction: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.Eviction",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1Eviction",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      deleteOptions: {
        serializedName: "deleteOptions",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1DeleteOptions"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1IDRange: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.IDRange",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1IDRange",
    modelProperties: {
      max: {
        required: true,
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      min: {
        required: true,
        serializedName: "min",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1FSGroupStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1FSGroupStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1HostPortRange: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.HostPortRange",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1HostPortRange",
    modelProperties: {
      max: {
        required: true,
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      min: {
        required: true,
        serializedName: "min",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodDisruptionBudgetSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodDisruptionBudgetSpec",
    modelProperties: {
      maxUnavailable: {
        serializedName: "maxUnavailable",
        type: {
          name: "String"
        }
      },
      minAvailable: {
        serializedName: "minAvailable",
        type: {
          name: "String"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1LabelSelector"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodDisruptionBudgetStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodDisruptionBudgetStatus",
    modelProperties: {
      currentHealthy: {
        required: true,
        serializedName: "currentHealthy",
        type: {
          name: "Number"
        }
      },
      desiredHealthy: {
        required: true,
        serializedName: "desiredHealthy",
        type: {
          name: "Number"
        }
      },
      disruptedPods: {
        required: true,
        serializedName: "disruptedPods",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      disruptionsAllowed: {
        required: true,
        serializedName: "disruptionsAllowed",
        type: {
          name: "Number"
        }
      },
      expectedPods: {
        required: true,
        serializedName: "expectedPods",
        type: {
          name: "Number"
        }
      },
      observedGeneration: {
        serializedName: "observedGeneration",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodDisruptionBudget: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodDisruptionBudget",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodDisruptionBudget",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1PodDisruptionBudgetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1PodDisruptionBudgetStatus"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodDisruptionBudgetList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodDisruptionBudgetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1PodDisruptionBudget"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1RunAsUserStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1RunAsUserStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        required: true,
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1SELinuxStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1SELinuxStrategyOptions",
    modelProperties: {
      rule: {
        required: true,
        serializedName: "rule",
        type: {
          name: "String"
        }
      },
      seLinuxOptions: {
        serializedName: "seLinuxOptions",
        type: {
          name: "Composite",
          className: "V1SELinuxOptions"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions",
    modelProperties: {
      ranges: {
        serializedName: "ranges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1IDRange"
            }
          }
        }
      },
      rule: {
        serializedName: "rule",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodSecurityPolicySpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodSecurityPolicySpec",
    modelProperties: {
      allowPrivilegeEscalation: {
        serializedName: "allowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      allowedCapabilities: {
        serializedName: "allowedCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowedFlexVolumes: {
        serializedName: "allowedFlexVolumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1AllowedFlexVolume"
            }
          }
        }
      },
      allowedHostPaths: {
        serializedName: "allowedHostPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1AllowedHostPath"
            }
          }
        }
      },
      allowedUnsafeSysctls: {
        serializedName: "allowedUnsafeSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultAddCapabilities: {
        serializedName: "defaultAddCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultAllowPrivilegeEscalation: {
        serializedName: "defaultAllowPrivilegeEscalation",
        type: {
          name: "Boolean"
        }
      },
      forbiddenSysctls: {
        serializedName: "forbiddenSysctls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fsGroup: {
        required: true,
        serializedName: "fsGroup",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1FSGroupStrategyOptions"
        }
      },
      hostIPC: {
        serializedName: "hostIPC",
        type: {
          name: "Boolean"
        }
      },
      hostNetwork: {
        serializedName: "hostNetwork",
        type: {
          name: "Boolean"
        }
      },
      hostPID: {
        serializedName: "hostPID",
        type: {
          name: "Boolean"
        }
      },
      hostPorts: {
        serializedName: "hostPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1HostPortRange"
            }
          }
        }
      },
      privileged: {
        serializedName: "privileged",
        type: {
          name: "Boolean"
        }
      },
      readOnlyRootFilesystem: {
        serializedName: "readOnlyRootFilesystem",
        type: {
          name: "Boolean"
        }
      },
      requiredDropCapabilities: {
        serializedName: "requiredDropCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      runAsUser: {
        required: true,
        serializedName: "runAsUser",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1RunAsUserStrategyOptions"
        }
      },
      seLinux: {
        required: true,
        serializedName: "seLinux",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1SELinuxStrategyOptions"
        }
      },
      supplementalGroups: {
        required: true,
        serializedName: "supplementalGroups",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions"
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodSecurityPolicy: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodSecurityPolicy",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodSecurityPolicy",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapipolicyv1beta1PodSecurityPolicySpec"
        }
      }
    }
  }
};

export const Iok8sapipolicyv1beta1PodSecurityPolicyList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.policy.v1beta1.PodSecurityPolicyList",
  type: {
    name: "Composite",
    className: "Iok8sapipolicyv1beta1PodSecurityPolicyList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapipolicyv1beta1PodSecurityPolicy"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1PolicyRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.PolicyRule",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1PolicyRule",
    modelProperties: {
      apiGroups: {
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nonResourceURLs: {
        serializedName: "nonResourceURLs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceNames: {
        serializedName: "resourceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1ClusterRole: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.ClusterRole",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1ClusterRole",
    modelProperties: {
      aggregationRule: {
        serializedName: "aggregationRule",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1AggregationRule"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1RoleRef: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.RoleRef",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1RoleRef",
    modelProperties: {
      apiGroup: {
        required: true,
        serializedName: "apiGroup",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapirbacv1Subject: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.Subject",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1Subject",
    modelProperties: {
      apiGroup: {
        serializedName: "apiGroup",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapirbacv1ClusterRoleBinding: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.ClusterRoleBinding",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1ClusterRoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1RoleRef"
        }
      },
      subjects: {
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1Subject"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1ClusterRoleBindingList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.ClusterRoleBindingList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1ClusterRoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1ClusterRoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1ClusterRoleList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.ClusterRoleList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1ClusterRoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1ClusterRole"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1Role: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.Role",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1Role",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1RoleBinding: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.RoleBinding",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1RoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1RoleRef"
        }
      },
      subjects: {
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1Subject"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1RoleBindingList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.RoleBindingList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1RoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1RoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1RoleList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1.RoleList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1RoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1Role"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1AggregationRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.AggregationRule",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1AggregationRule",
    modelProperties: {
      clusterRoleSelectors: {
        serializedName: "clusterRoleSelectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1LabelSelector"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1PolicyRule: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.PolicyRule",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1PolicyRule",
    modelProperties: {
      apiGroups: {
        serializedName: "apiGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nonResourceURLs: {
        serializedName: "nonResourceURLs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceNames: {
        serializedName: "resourceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1ClusterRole: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.ClusterRole",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1ClusterRole",
    modelProperties: {
      aggregationRule: {
        serializedName: "aggregationRule",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1beta1AggregationRule"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1RoleRef: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.RoleRef",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1RoleRef",
    modelProperties: {
      apiGroup: {
        required: true,
        serializedName: "apiGroup",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1Subject: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.Subject",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1Subject",
    modelProperties: {
      apiGroup: {
        serializedName: "apiGroup",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1ClusterRoleBinding: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.ClusterRoleBinding",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1ClusterRoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1beta1RoleRef"
        }
      },
      subjects: {
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1Subject"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1ClusterRoleBindingList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.ClusterRoleBindingList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1ClusterRoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1ClusterRoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1ClusterRoleList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.ClusterRoleList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1ClusterRoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1ClusterRole"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1Role: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.Role",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1Role",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1PolicyRule"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1RoleBinding: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.RoleBinding",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1RoleBinding",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      roleRef: {
        required: true,
        serializedName: "roleRef",
        type: {
          name: "Composite",
          className: "Iok8sapirbacv1beta1RoleRef"
        }
      },
      subjects: {
        serializedName: "subjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1Subject"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1RoleBindingList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.RoleBindingList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1RoleBindingList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1RoleBinding"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapirbacv1beta1RoleList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.rbac.v1beta1.RoleList",
  type: {
    name: "Composite",
    className: "Iok8sapirbacv1beta1RoleList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapirbacv1beta1Role"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapischedulingv1beta1PriorityClass: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.scheduling.v1beta1.PriorityClass",
  type: {
    name: "Composite",
    className: "Iok8sapischedulingv1beta1PriorityClass",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      globalDefault: {
        serializedName: "globalDefault",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8sapischedulingv1beta1PriorityClassList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.scheduling.v1beta1.PriorityClassList",
  type: {
    name: "Composite",
    className: "Iok8sapischedulingv1beta1PriorityClassList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapischedulingv1beta1PriorityClass"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapistoragev1StorageClass: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1.StorageClass",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1StorageClass",
    modelProperties: {
      allowVolumeExpansion: {
        serializedName: "allowVolumeExpansion",
        type: {
          name: "Boolean"
        }
      },
      allowedTopologies: {
        serializedName: "allowedTopologies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1TopologySelectorTerm"
            }
          }
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioner: {
        required: true,
        serializedName: "provisioner",
        type: {
          name: "String"
        }
      },
      reclaimPolicy: {
        serializedName: "reclaimPolicy",
        type: {
          name: "String"
        }
      },
      volumeBindingMode: {
        serializedName: "volumeBindingMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapistoragev1StorageClassList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1.StorageClassList",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1StorageClassList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapistoragev1StorageClass"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1StorageClass: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.StorageClass",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1StorageClass",
    modelProperties: {
      allowVolumeExpansion: {
        serializedName: "allowVolumeExpansion",
        type: {
          name: "Boolean"
        }
      },
      allowedTopologies: {
        serializedName: "allowedTopologies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1TopologySelectorTerm"
            }
          }
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioner: {
        required: true,
        serializedName: "provisioner",
        type: {
          name: "String"
        }
      },
      reclaimPolicy: {
        serializedName: "reclaimPolicy",
        type: {
          name: "String"
        }
      },
      volumeBindingMode: {
        serializedName: "volumeBindingMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1StorageClassList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.StorageClassList",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1StorageClassList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapistoragev1beta1StorageClass"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeAttachmentSource: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeAttachmentSource",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeAttachmentSource",
    modelProperties: {
      persistentVolumeName: {
        serializedName: "persistentVolumeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeAttachmentSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeAttachmentSpec",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeAttachmentSpec",
    modelProperties: {
      attacher: {
        required: true,
        serializedName: "attacher",
        type: {
          name: "String"
        }
      },
      nodeName: {
        required: true,
        serializedName: "nodeName",
        type: {
          name: "String"
        }
      },
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "Iok8sapistoragev1beta1VolumeAttachmentSource"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeError: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeError",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeError",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeAttachmentStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeAttachmentStatus",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeAttachmentStatus",
    modelProperties: {
      attachError: {
        serializedName: "attachError",
        type: {
          name: "Composite",
          className: "Iok8sapistoragev1beta1VolumeError"
        }
      },
      attached: {
        required: true,
        serializedName: "attached",
        type: {
          name: "Boolean"
        }
      },
      attachmentMetadata: {
        serializedName: "attachmentMetadata",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      detachError: {
        serializedName: "detachError",
        type: {
          name: "Composite",
          className: "Iok8sapistoragev1beta1VolumeError"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeAttachment: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeAttachment",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeAttachment",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8sapistoragev1beta1VolumeAttachmentSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8sapistoragev1beta1VolumeAttachmentStatus"
        }
      }
    }
  }
};

export const Iok8sapistoragev1beta1VolumeAttachmentList: msRest.CompositeMapper = {
  serializedName: "io.k8s.api.storage.v1beta1.VolumeAttachmentList",
  type: {
    name: "Composite",
    className: "Iok8sapistoragev1beta1VolumeAttachmentList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapistoragev1beta1VolumeAttachment"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery",
    modelProperties: {
      groupVersion: {
        required: true,
        serializedName: "groupVersion",
        type: {
          name: "String"
        }
      },
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR",
    modelProperties: {
      clientCIDR: {
        required: true,
        serializedName: "clientCIDR",
        type: {
          name: "String"
        }
      },
      serverAddress: {
        required: true,
        serializedName: "serverAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1APIGroup: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1APIGroup",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      preferredVersion: {
        serializedName: "preferredVersion",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery"
        }
      },
      serverAddressByClientCIDRs: {
        serializedName: "serverAddressByClientCIDRs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR"
            }
          }
        }
      },
      versions: {
        required: true,
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1APIGroupList: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1APIGroupList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1APIGroup"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1APIResource: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1APIResource",
    modelProperties: {
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespaced: {
        required: true,
        serializedName: "namespaced",
        type: {
          name: "Boolean"
        }
      },
      shortNames: {
        serializedName: "shortNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      singularName: {
        required: true,
        serializedName: "singularName",
        type: {
          name: "String"
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1APIResourceList: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1APIResourceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groupVersion: {
        required: true,
        serializedName: "groupVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      resources: {
        required: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1APIResource"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1APIVersions: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1APIVersions",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      serverAddressByClientCIDRs: {
        required: true,
        serializedName: "serverAddressByClientCIDRs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR"
            }
          }
        }
      },
      versions: {
        required: true,
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Iok8sapimachinerypkgapismetav1WatchEvent: msRest.CompositeMapper = {
  serializedName: "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
  type: {
    name: "Composite",
    className: "Iok8sapimachinerypkgapismetav1WatchEvent",
    modelProperties: {
      object: {
        required: true,
        serializedName: "object",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgruntimeRawExtension"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec",
    modelProperties: {
      caBundle: {
        serializedName: "caBundle",
        type: {
          name: "ByteArray"
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      groupPriorityMinimum: {
        required: true,
        serializedName: "groupPriorityMinimum",
        type: {
          name: "Number"
        }
      },
      insecureSkipTLSVerify: {
        serializedName: "insecureSkipTLSVerify",
        type: {
          name: "Boolean"
        }
      },
      service: {
        required: true,
        serializedName: "service",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      versionPriority: {
        required: true,
        serializedName: "versionPriority",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition"
            }
          }
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1APIService: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIService",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8skubeAggregatorpkgapisapiregistrationv1APIService"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec",
    modelProperties: {
      caBundle: {
        serializedName: "caBundle",
        type: {
          name: "ByteArray"
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      groupPriorityMinimum: {
        required: true,
        serializedName: "groupPriorityMinimum",
        type: {
          name: "Number"
        }
      },
      insecureSkipTLSVerify: {
        serializedName: "insecureSkipTLSVerify",
        type: {
          name: "Boolean"
        }
      },
      service: {
        required: true,
        serializedName: "service",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      versionPriority: {
        required: true,
        serializedName: "versionPriority",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceCondition",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition",
    modelProperties: {
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition"
            }
          }
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIService",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus"
        }
      }
    }
  }
};

export const Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList: msRest.CompositeMapper = {
  serializedName: "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceList",
  type: {
    name: "Composite",
    className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "Iok8sapimachinerypkgapismetav1ListMeta"
        }
      }
    }
  }
};
