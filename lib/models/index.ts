/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing V1ConfigMapKeySelector.
 * Selects a key from a ConfigMap.
 *
 */
export interface V1ConfigMapKeySelector {
  /**
   * @member {string} key The key to select.
   */
  key: string;
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the ConfigMap or it's key
   * must be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1ObjectFieldSelector.
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 */
export interface V1ObjectFieldSelector {
  /**
   * @member {string} [apiVersion] Version of the schema the FieldPath is
   * written in terms of, defaults to "v1".
   */
  apiVersion?: string;
  /**
   * @member {string} fieldPath Path of the field to select in the specified
   * API version.
   */
  fieldPath: string;
}

/**
 * @interface
 * An interface representing V1ResourceFieldSelector.
 * ResourceFieldSelector represents container resources (cpu, memory) and their
 * output format
 *
 */
export interface V1ResourceFieldSelector {
  /**
   * @member {string} [containerName] Container name: required for volumes,
   * optional for env vars
   */
  containerName?: string;
  /**
   * @member {string} [divisor] Specifies the output format of the exposed
   * resources, defaults to "1"
   */
  divisor?: string;
  /**
   * @member {string} resource Required: resource to select
   */
  resource: string;
}

/**
 * @interface
 * An interface representing V1SecretKeySelector.
 * SecretKeySelector selects a key of a Secret.
 *
 */
export interface V1SecretKeySelector {
  /**
   * @member {string} key The key of the secret to select from.  Must be a
   * valid secret key.
   */
  key: string;
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the Secret or it's key must
   * be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1EnvVarSource.
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 */
export interface V1EnvVarSource {
  /**
   * @member {V1ConfigMapKeySelector} [configMapKeyRef] Selects a
   * key of a ConfigMap.
   */
  configMapKeyRef?: V1ConfigMapKeySelector;
  /**
   * @member {V1ObjectFieldSelector} [fieldRef] Selects a field of
   * the pod: supports metadata.name, metadata.namespace, metadata.labels,
   * metadata.annotations, spec.nodeName, spec.serviceAccountName,
   * status.hostIP, status.podIP.
   */
  fieldRef?: V1ObjectFieldSelector;
  /**
   * @member {V1ResourceFieldSelector} [resourceFieldRef] Selects a
   * resource of the container: only resources limits and requests (limits.cpu,
   * limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and
   * requests.ephemeral-storage) are currently supported.
   */
  resourceFieldRef?: V1ResourceFieldSelector;
  /**
   * @member {V1SecretKeySelector} [secretKeyRef] Selects a key of
   * a secret in the pod's namespace
   */
  secretKeyRef?: V1SecretKeySelector;
}

/**
 * @interface
 * An interface representing V1EnvVar.
 * EnvVar represents an environment variable present in a Container.
 *
 */
export interface V1EnvVar {
  /**
   * @member {string} name Name of the environment variable. Must be a
   * C_IDENTIFIER.
   */
  name: string;
  /**
   * @member {string} [value] Variable references $(VAR_NAME) are expanded
   * using the previous defined environment variables in the container and any
   * service environment variables. If a variable cannot be resolved, the
   * reference in the input string will be unchanged. The $(VAR_NAME) syntax
   * can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will
   * never be expanded, regardless of whether the variable exists or not.
   * Defaults to "".
   */
  value?: string;
  /**
   * @member {V1EnvVarSource} [valueFrom] Source for the
   * environment variable's value. Cannot be used if value is not empty.
   */
  valueFrom?: V1EnvVarSource;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams.
 * CustomDeploymentStrategyParams are the input to the Custom deployment
 * strategy.
 *
 */
export interface Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams {
  /**
   * @member {string[]} [command] Command is optional and overrides CMD in the
   * container Image.
   */
  command?: string[];
  /**
   * @member {V1EnvVar[]} [environment] Environment holds the
   * environment which will be given to the container for Image.
   */
  environment?: V1EnvVar[];
  /**
   * @member {string} [image] Image specifies a container image which can carry
   * out a deployment.
   */
  image?: string;
}

/**
 * @interface
 * An interface representing V1ObjectReference.
 * ObjectReference contains enough information to let you inspect or modify the
 * referred object.
 *
 */
export interface V1ObjectReference {
  /**
   * @member {string} [apiVersion] API version of the referent.
   */
  apiVersion?: string;
  /**
   * @member {string} [fieldPath] If referring to a piece of an object instead
   * of an entire object, this string should contain a valid JSON/Go field
   * access statement, such as desiredState.manifest.containers[2]. For
   * example, if the object reference is to a container within a pod, this
   * would take on a value like: "spec.containers{name}" (where "name" refers
   * to the name of the container that triggered the event) or if no container
   * name is specified "spec.containers[2]" (container with index 2 in this
   * pod). This syntax is chosen only to have some well-defined way of
   * referencing a part of an object.
   */
  fieldPath?: string;
  /**
   * @member {string} [kind] Kind of the referent. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   */
  namespace?: string;
  /**
   * @member {string} [resourceVersion] Specific resourceVersion to which this
   * reference is made, if any. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string;
  /**
   * @member {string} [uid] UID of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
   */
  uid?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger.
 * DeploymentCauseImageTrigger represents details about the cause of a
 * deployment originating from an image change trigger
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger {
  /**
   * @member {V1ObjectReference} from From is a reference to the
   * changed object which triggered a deployment. The field may have the kinds
   * DockerImage, ImageStreamTag, or ImageStreamImage.
   */
  from: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentCause.
 * DeploymentCause captures information about a particular cause of a
 * deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentCause {
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger}
   * [imageTrigger] ImageTrigger contains the image trigger details, if this
   * trigger was fired based on an image change
   */
  imageTrigger?: Comgithubopenshiftapiappsv1DeploymentCauseImageTrigger;
  /**
   * @member {string} type Type of the trigger that resulted in the creation of
   * a new deployment
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentCondition.
 * DeploymentCondition describes the state of a deployment config at a certain
 * point.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentCondition {
  /**
   * @member {Date} [lastTransitionTime] The last time the condition
   * transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {Date} [lastUpdateTime] The last time this condition was updated.
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of deployment condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1Initializer.
 * Initializer is information about an initializer that has not yet completed.
 *
 */
export interface Iok8sapimachinerypkgapismetav1Initializer {
  /**
   * @member {string} name name of the process that is responsible for
   * initializing this object.
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1StatusCause.
 * StatusCause provides more information about an api.Status failure, including
 * cases when multiple errors are encountered.
 *
 */
export interface Iok8sapimachinerypkgapismetav1StatusCause {
  /**
   * @member {string} [field] The field of the resource that has caused this
   * error, as named by its JSON serialization. May include dot and postfix
   * notation for nested attributes. Arrays are zero-indexed.  Fields may
   * appear more than once in an array of causes due to fields having multiple
   * errors. Optional.
   *
   * Examples:
   * "name" - the field "name" on the current resource
   * "items[0].name" - the field "name" on the first array entry in "items"
   */
  field?: string;
  /**
   * @member {string} [message] A human-readable description of the cause of
   * the error.  This field may be presented as-is to a reader.
   */
  message?: string;
  /**
   * @member {string} [reason] A machine-readable description of the cause of
   * the error. If this value is empty there is no information available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1StatusDetails.
 * StatusDetails is a set of additional properties that MAY be set by the
 * server to provide additional information about a response. The Reason field
 * of a Status object defines what attributes will be set. Clients must ignore
 * fields that do not match the defined type of each attribute, and should
 * assume that any attribute may be empty, invalid, or under defined.
 *
 */
export interface Iok8sapimachinerypkgapismetav1StatusDetails {
  /**
   * @member {Iok8sapimachinerypkgapismetav1StatusCause[]} [causes] The Causes
   * array includes more details associated with the StatusReason failure. Not
   * all StatusReasons may provide detailed causes.
   */
  causes?: Iok8sapimachinerypkgapismetav1StatusCause[];
  /**
   * @member {string} [group] The group attribute of the resource associated
   * with the status StatusReason.
   */
  group?: string;
  /**
   * @member {string} [kind] The kind attribute of the resource associated with
   * the status StatusReason. On some operations may differ from the requested
   * resource Kind. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} [name] The name attribute of the resource associated with
   * the status StatusReason (when there is a single name which can be
   * described).
   */
  name?: string;
  /**
   * @member {number} [retryAfterSeconds] If specified, the time in seconds
   * before the operation should be retried. Some errors may indicate the
   * client must take an alternate action - for those errors this field may
   * indicate how long to wait before taking the alternate action.
   */
  retryAfterSeconds?: number;
  /**
   * @member {string} [uid] UID of the resource. (when there is a single
   * resource which can be described). More info:
   * http://kubernetes.io/docs/user-guide/identifiers#uids
   */
  uid?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1ListMeta.
 * ListMeta describes metadata that synthetic resources must have, including
 * lists and various status objects. A resource may have only one of
 * {ObjectMeta, ListMeta}.
 *
 */
export interface Iok8sapimachinerypkgapismetav1ListMeta {
  /**
   * @member {string} [continueProperty] continue may be set if the user set a
   * limit on the number of items returned, and indicates that the server has
   * more data available. The value is opaque and may be used to issue another
   * request to the endpoint that served this list to retrieve the next set of
   * available objects. Continuing a list may not be possible if the server
   * configuration has changed or more than a few minutes have passed. The
   * resourceVersion field returned when using this continue value will be
   * identical to the value in the first response.
   */
  continueProperty?: string;
  /**
   * @member {string} [resourceVersion] String that identifies the server's
   * internal version of this object that can be used by clients to determine
   * when objects have changed. Value must be treated as opaque by clients and
   * passed unmodified back to the server. Populated by the system. Read-only.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string;
  /**
   * @member {string} [selfLink] selfLink is a URL representing this object.
   * Populated by the system. Read-only.
   */
  selfLink?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1Status.
 * Status is a return value for calls that don't return other objects.
 *
 */
export interface Iok8sapimachinerypkgapismetav1Status {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {number} [code] Suggested HTTP return code for this status, 0 if
   * not set.
   */
  code?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1StatusDetails} [details] Extended
   * data associated with the reason.  Each reason may define its own extended
   * details. This field is optional and the data returned is not guaranteed to
   * conform to any schema except that defined by the reason type.
   */
  details?: Iok8sapimachinerypkgapismetav1StatusDetails;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} [message] A human-readable description of the status of
   * this operation.
   */
  message?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
  /**
   * @member {string} [reason] A machine-readable description of why this
   * operation is in the "Failure" status. If this value is empty there is no
   * information available. A Reason clarifies an HTTP status code but does not
   * override it.
   */
  reason?: string;
  /**
   * @member {string} [status] Status of the operation. One of: "Success" or
   * "Failure". More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1Initializers.
 * Initializers tracks the progress of initialization.
 *
 */
export interface Iok8sapimachinerypkgapismetav1Initializers {
  /**
   * @member {Iok8sapimachinerypkgapismetav1Initializer[]} pending Pending is a
   * list of initializers that must execute in order before this object is
   * visible. When the last pending initializer is removed, and no failing
   * result is set, the initializers struct will be set to nil and the object
   * is considered as initialized and visible to all clients.
   */
  pending: Iok8sapimachinerypkgapismetav1Initializer[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1Status} [result] If result is set
   * with the Failure field, the object will be persisted to storage and then
   * deleted, ensuring that other clients can observe the deletion.
   */
  result?: Iok8sapimachinerypkgapismetav1Status;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1OwnerReference.
 * OwnerReference contains enough information to let you identify an owning
 * object. Currently, an owning object must be in the same namespace, so there
 * is no namespace field.
 *
 */
export interface Iok8sapimachinerypkgapismetav1OwnerReference {
  /**
   * @member {string} apiVersion API version of the referent.
   */
  apiVersion: string;
  /**
   * @member {boolean} [blockOwnerDeletion] If true, AND if the owner has the
   * "foregroundDeletion" finalizer, then the owner cannot be deleted from the
   * key-value store until this reference is removed. Defaults to false. To set
   * this field, a user needs "delete" permission of the owner, otherwise 422
   * (Unprocessable Entity) will be returned.
   */
  blockOwnerDeletion?: boolean;
  /**
   * @member {boolean} [controller] If true, this reference points to the
   * managing controller.
   */
  controller?: boolean;
  /**
   * @member {string} kind Kind of the referent. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind: string;
  /**
   * @member {string} name Name of the referent. More info:
   * http://kubernetes.io/docs/user-guide/identifiers#names
   */
  name: string;
  /**
   * @member {string} uid UID of the referent. More info:
   * http://kubernetes.io/docs/user-guide/identifiers#uids
   */
  uid: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1ObjectMeta.
 * ObjectMeta is metadata that all persisted resources must have, which
 * includes all objects users must create.
 *
 */
export interface Iok8sapimachinerypkgapismetav1ObjectMeta {
  /**
   * @member {{ [propertyName: string]: string }} [annotations] Annotations is
   * an unstructured key value map stored with a resource that may be set by
   * external tools to store and retrieve arbitrary metadata. They are not
   * queryable and should be preserved when modifying objects. More info:
   * http://kubernetes.io/docs/user-guide/annotations
   */
  annotations?: { [propertyName: string]: string };
  /**
   * @member {string} [clusterName] The name of the cluster which the object
   * belongs to. This is used to distinguish resources with same name and
   * namespace in different clusters. This field is not set anywhere right now
   * and apiserver is going to ignore it if set in create or update request.
   */
  clusterName?: string;
  /**
   * @member {Date} [creationTimestamp] CreationTimestamp is a timestamp
   * representing the server time when this object was created. It is not
   * guaranteed to be set in happens-before order across separate operations.
   * Clients may not set this value. It is represented in RFC3339 form and is
   * in UTC.
   *
   * Populated by the system. Read-only. Null for lists. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  creationTimestamp?: Date;
  /**
   * @member {number} [deletionGracePeriodSeconds] Number of seconds allowed
   * for this object to gracefully terminate before it will be removed from the
   * system. Only set when deletionTimestamp is also set. May only be
   * shortened. Read-only.
   */
  deletionGracePeriodSeconds?: number;
  /**
   * @member {Date} [deletionTimestamp] DeletionTimestamp is RFC 3339 date and
   * time at which this resource will be deleted. This field is set by the
   * server when a graceful deletion is requested by the user, and is not
   * directly settable by a client. The resource is expected to be deleted (no
   * longer visible from resource lists, and not reachable by name) after the
   * time in this field, once the finalizers list is empty. As long as the
   * finalizers list contains items, deletion is blocked. Once the
   * deletionTimestamp is set, this value may not be unset or be set further
   * into the future, although it may be shortened or the resource may be
   * deleted prior to this time. For example, a user may request that a pod is
   * deleted in 30 seconds. The Kubelet will react by sending a graceful
   * termination signal to the containers in the pod. After that 30 seconds,
   * the Kubelet will send a hard termination signal (SIGKILL) to the container
   * and after cleanup, remove the pod from the API. In the presence of network
   * partitions, this object may still exist after this timestamp, until an
   * administrator or automated process can determine the resource is fully
   * terminated. If not set, graceful deletion of the object has not been
   * requested.
   *
   * Populated by the system when a graceful deletion is requested. Read-only.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  deletionTimestamp?: Date;
  /**
   * @member {string[]} [finalizers] Must be empty before the object is deleted
   * from the registry. Each entry is an identifier for the responsible
   * component that will remove the entry from the list. If the
   * deletionTimestamp of the object is non-nil, entries in this list can only
   * be removed.
   */
  finalizers?: string[];
  /**
   * @member {string} [generateName] GenerateName is an optional prefix, used
   * by the server, to generate a unique name ONLY IF the Name field has not
   * been provided. If this field is used, the name returned to the client will
   * be different than the name passed. This value will also be combined with a
   * unique suffix. The provided value has the same validation rules as the
   * Name field, and may be truncated by the length of the suffix required to
   * make the value unique on the server.
   *
   * If this field is specified and the generated name exists, the server will
   * NOT return a 409 - instead, it will either return 201 Created or 500 with
   * Reason ServerTimeout indicating a unique name could not be found in the
   * time allotted, and the client should retry (optionally after the time
   * indicated in the Retry-After header).
   *
   * Applied only if Name is not specified. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
   */
  generateName?: string;
  /**
   * @member {number} [generation] A sequence number representing a specific
   * generation of the desired state. Populated by the system. Read-only.
   */
  generation?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1Initializers} [initializers] An
   * initializer is a controller which enforces some system invariant at object
   * creation time. This field is a list of initializers that have not yet
   * acted on this object. If nil or empty, this object has been completely
   * initialized. Otherwise, the object is considered uninitialized and is
   * hidden (in list/watch and get calls) from clients that haven't explicitly
   * asked to observe uninitialized objects.
   *
   * When an object is created, the system will populate this list with the
   * current set of initializers. Only privileged users may set or modify this
   * list. Once it is empty, it may not be modified further by any user.
   */
  initializers?: Iok8sapimachinerypkgapismetav1Initializers;
  /**
   * @member {{ [propertyName: string]: string }} [labels] Map of string keys
   * and values that can be used to organize and categorize (scope and select)
   * objects. May match selectors of replication controllers and services. More
   * info: http://kubernetes.io/docs/user-guide/labels
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {string} [name] Name must be unique within a namespace. Is
   * required when creating resources, although some resources may allow a
   * client to request the generation of an appropriate name automatically.
   * Name is primarily intended for creation idempotence and configuration
   * definition. Cannot be updated. More info:
   * http://kubernetes.io/docs/user-guide/identifiers#names
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace defines the space within each name
   * must be unique. An empty namespace is equivalent to the "default"
   * namespace, but "default" is the canonical representation. Not all objects
   * are required to be scoped to a namespace - the value of this field for
   * those objects will be empty.
   *
   * Must be a DNS_LABEL. Cannot be updated. More info:
   * http://kubernetes.io/docs/user-guide/namespaces
   */
  namespace?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1OwnerReference[]} [ownerReferences]
   * List of objects depended by this object. If ALL objects in the list have
   * been deleted, this object will be garbage collected. If this object is
   * managed by a controller, then an entry in this list will point to this
   * controller, with the controller field set to true. There cannot be more
   * than one managing controller.
   */
  ownerReferences?: Iok8sapimachinerypkgapismetav1OwnerReference[];
  /**
   * @member {string} [resourceVersion] An opaque value that represents the
   * internal version of this object that can be used by clients to determine
   * when objects have changed. May be used for optimistic concurrency, change
   * detection, and the watch operation on a resource or set of resources.
   * Clients must treat these values as opaque and passed unmodified back to
   * the server. They may only be valid for a particular resource or set of
   * resources.
   *
   * Populated by the system. Read-only. Value must be treated as opaque by
   * clients and . More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string;
  /**
   * @member {string} [selfLink] SelfLink is a URL representing this object.
   * Populated by the system. Read-only.
   */
  selfLink?: string;
  /**
   * @member {string} [uid] UID is the unique in time and space value for this
   * object. It is typically generated by the server on successful creation of
   * a resource and is not allowed to change on PUT operations.
   *
   * Populated by the system. Read-only. More info:
   * http://kubernetes.io/docs/user-guide/identifiers#uids
   */
  uid?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1ExecNewPodHook.
 * ExecNewPodHook is a hook implementation which runs a command in a new pod
 * based on the specified container which is assumed to be part of the
 * deployment template.
 *
 */
export interface Comgithubopenshiftapiappsv1ExecNewPodHook {
  /**
   * @member {string[]} command Command is the action command and its
   * arguments.
   */
  command: string[];
  /**
   * @member {string} containerName ContainerName is the name of a container in
   * the deployment pod template whose container image will be used for the
   * hook pod's container.
   */
  containerName: string;
  /**
   * @member {V1EnvVar[]} [env] Env is a set of environment
   * variables to supply to the hook pod's container.
   */
  env?: V1EnvVar[];
  /**
   * @member {string[]} [volumes] Volumes is a list of named volumes from the
   * pod template which should be copied to the hook pod. Volumes names not
   * found in pod spec are ignored. An empty list means no volumes will be
   * copied.
   */
  volumes?: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1TagImageHook.
 * TagImageHook is a request to tag the image in a particular container onto an
 * ImageStreamTag.
 *
 */
export interface Comgithubopenshiftapiappsv1TagImageHook {
  /**
   * @member {string} containerName ContainerName is the name of a container in
   * the deployment config whose image value will be used as the source of the
   * tag. If there is only a single container this value will be defaulted to
   * the name of that container.
   */
  containerName: string;
  /**
   * @member {V1ObjectReference} to To is the target ImageStreamTag
   * to set the container's image onto.
   */
  to: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1LifecycleHook.
 * LifecycleHook defines a specific deployment lifecycle action. Only one type
 * of action may be specified at any time.
 *
 */
export interface Comgithubopenshiftapiappsv1LifecycleHook {
  /**
   * @member {Comgithubopenshiftapiappsv1ExecNewPodHook} [execNewPod]
   * ExecNewPod specifies the options for a lifecycle hook backed by a pod.
   */
  execNewPod?: Comgithubopenshiftapiappsv1ExecNewPodHook;
  /**
   * @member {string} failurePolicy FailurePolicy specifies what action to take
   * if the hook fails.
   */
  failurePolicy: string;
  /**
   * @member {Comgithubopenshiftapiappsv1TagImageHook[]} [tagImages] TagImages
   * instructs the deployer to tag the current image referenced under a
   * container onto an image stream tag.
   */
  tagImages?: Comgithubopenshiftapiappsv1TagImageHook[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams.
 * RecreateDeploymentStrategyParams are the input to the Recreate deployment
 * strategy.
 *
 */
export interface Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams {
  /**
   * @member {Comgithubopenshiftapiappsv1LifecycleHook} [mid] Mid is a
   * lifecycle hook which is executed while the deployment is scaled down to
   * zero before the first new pod is created. All LifecycleHookFailurePolicy
   * values are supported.
   */
  mid?: Comgithubopenshiftapiappsv1LifecycleHook;
  /**
   * @member {Comgithubopenshiftapiappsv1LifecycleHook} [post] Post is a
   * lifecycle hook which is executed after the strategy has finished all
   * deployment logic. All LifecycleHookFailurePolicy values are supported.
   */
  post?: Comgithubopenshiftapiappsv1LifecycleHook;
  /**
   * @member {Comgithubopenshiftapiappsv1LifecycleHook} [pre] Pre is a
   * lifecycle hook which is executed before the strategy manipulates the
   * deployment. All LifecycleHookFailurePolicy values are supported.
   */
  pre?: Comgithubopenshiftapiappsv1LifecycleHook;
  /**
   * @member {number} [timeoutSeconds] TimeoutSeconds is the time to wait for
   * updates before giving up. If the value is nil, a default will be used.
   */
  timeoutSeconds?: number;
}

/**
 * @interface
 * An interface representing V1ResourceRequirements.
 * ResourceRequirements describes the compute resource requirements.
 *
 */
export interface V1ResourceRequirements {
  /**
   * @member {{ [propertyName: string]: string }} [limits] Limits describes the
   * maximum amount of compute resources allowed. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  limits?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [requests] Requests describes
   * the minimum amount of compute resources required. If Requests is omitted
   * for a container, it defaults to Limits if that is explicitly specified,
   * otherwise to an implementation-defined value. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  requests?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams.
 * RollingDeploymentStrategyParams are the input to the Rolling deployment
 * strategy.
 *
 */
export interface Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams {
  /**
   * @member {number} [intervalSeconds] IntervalSeconds is the time to wait
   * between polling deployment status after update. If the value is nil, a
   * default will be used.
   */
  intervalSeconds?: number;
  /**
   * @member {string} [maxSurge] MaxSurge is the maximum number of pods that
   * can be scheduled above the original number of pods. Value can be an
   * absolute number (ex: 5) or a percentage of total pods at the start of the
   * update (ex: 10%). Absolute number is calculated from percentage by
   * rounding up.
   *
   * This cannot be 0 if MaxUnavailable is 0. By default, 25% is used.
   *
   * Example: when this is set to 30%, the new RC can be scaled up by 30%
   * immediately when the rolling update starts. Once old pods have been
   * killed, new RC can be scaled up further, ensuring that total number of
   * pods running at any time during the update is atmost 130% of original
   * pods.
   */
  maxSurge?: string;
  /**
   * @member {string} [maxUnavailable] MaxUnavailable is the maximum number of
   * pods that can be unavailable during the update. Value can be an absolute
   * number (ex: 5) or a percentage of total pods at the start of update (ex:
   * 10%). Absolute number is calculated from percentage by rounding down.
   *
   * This cannot be 0 if MaxSurge is 0. By default, 25% is used.
   *
   * Example: when this is set to 30%, the old RC can be scaled down by 30%
   * immediately when the rolling update starts. Once new pods are ready, old
   * RC can be scaled down further, followed by scaling up the new RC, ensuring
   * that at least 70% of original number of pods are available at all times
   * during the update.
   */
  maxUnavailable?: string;
  /**
   * @member {Comgithubopenshiftapiappsv1LifecycleHook} [post] Post is a
   * lifecycle hook which is executed after the strategy has finished all
   * deployment logic. All LifecycleHookFailurePolicy values are supported.
   */
  post?: Comgithubopenshiftapiappsv1LifecycleHook;
  /**
   * @member {Comgithubopenshiftapiappsv1LifecycleHook} [pre] Pre is a
   * lifecycle hook which is executed before the deployment process begins. All
   * LifecycleHookFailurePolicy values are supported.
   */
  pre?: Comgithubopenshiftapiappsv1LifecycleHook;
  /**
   * @member {number} [timeoutSeconds] TimeoutSeconds is the time to wait for
   * updates before giving up. If the value is nil, a default will be used.
   */
  timeoutSeconds?: number;
  /**
   * @member {number} [updatePeriodSeconds] UpdatePeriodSeconds is the time to
   * wait between individual pod updates. If the value is nil, a default will
   * be used.
   */
  updatePeriodSeconds?: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentStrategy.
 * DeploymentStrategy describes how to perform a deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentStrategy {
  /**
   * @member {number} [activeDeadlineSeconds] ActiveDeadlineSeconds is the
   * duration in seconds that the deployer pods for this deployment config may
   * be active on a node before the system actively tries to terminate them.
   */
  activeDeadlineSeconds?: number;
  /**
   * @member {{ [propertyName: string]: string }} [annotations] Annotations is
   * a set of key, value pairs added to custom deployer and lifecycle pre/post
   * hook pods.
   */
  annotations?: { [propertyName: string]: string };
  /**
   * @member {Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams}
   * [customParams] CustomParams are the input to the Custom deployment
   * strategy, and may also be specified for the Recreate and Rolling
   * strategies to customize the execution process that runs the deployment.
   */
  customParams?: Comgithubopenshiftapiappsv1CustomDeploymentStrategyParams;
  /**
   * @member {{ [propertyName: string]: string }} [labels] Labels is a set of
   * key, value pairs added to custom deployer and lifecycle pre/post hook
   * pods.
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams}
   * [recreateParams] RecreateParams are the input to the Recreate deployment
   * strategy.
   */
  recreateParams?: Comgithubopenshiftapiappsv1RecreateDeploymentStrategyParams;
  /**
   * @member {V1ResourceRequirements} [resources] Resources
   * contains resource requirements to execute the deployment and any hooks.
   */
  resources?: V1ResourceRequirements;
  /**
   * @member {Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams}
   * [rollingParams] RollingParams are the input to the Rolling deployment
   * strategy.
   */
  rollingParams?: Comgithubopenshiftapiappsv1RollingDeploymentStrategyParams;
  /**
   * @member {string} [type] Type is the name of a deployment strategy.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1NodeSelectorRequirement.
 * A node selector requirement is a selector that contains values, a key, and
 * an operator that relates the key and values.
 *
 */
export interface V1NodeSelectorRequirement {
  /**
   * @member {string} key The label key that the selector applies to.
   */
  key: string;
  /**
   * @member {string} operator Represents a key's relationship to a set of
   * values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   */
  operator: string;
  /**
   * @member {string[]} [values] An array of string values. If the operator is
   * In or NotIn, the values array must be non-empty. If the operator is Exists
   * or DoesNotExist, the values array must be empty. If the operator is Gt or
   * Lt, the values array must have a single element, which will be interpreted
   * as an integer. This array is replaced during a strategic merge patch.
   */
  values?: string[];
}

/**
 * @interface
 * An interface representing V1NodeSelectorTerm.
 * A null or empty node selector term matches no objects. The requirements of
 * them are ANDed. The TopologySelectorTerm type implements a subset of the
 * NodeSelectorTerm.
 *
 */
export interface V1NodeSelectorTerm {
  /**
   * @member {V1NodeSelectorRequirement[]} [matchExpressions] A
   * list of node selector requirements by node's labels.
   */
  matchExpressions?: V1NodeSelectorRequirement[];
  /**
   * @member {V1NodeSelectorRequirement[]} [matchFields] A list of
   * node selector requirements by node's fields.
   */
  matchFields?: V1NodeSelectorRequirement[];
}

/**
 * @interface
 * An interface representing V1PreferredSchedulingTerm.
 * An empty preferred scheduling term matches all objects with implicit weight
 * 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects
 * (i.e. is also a no-op).
 *
 */
export interface V1PreferredSchedulingTerm {
  /**
   * @member {V1NodeSelectorTerm} preference A node selector term,
   * associated with the corresponding weight.
   */
  preference: V1NodeSelectorTerm;
  /**
   * @member {number} weight Weight associated with matching the corresponding
   * nodeSelectorTerm, in the range 1-100.
   */
  weight: number;
}

/**
 * @interface
 * An interface representing V1NodeSelector.
 * A node selector represents the union of the results of one or more label
 * queries over a set of nodes; that is, it represents the OR of the selectors
 * represented by the node selector terms.
 *
 */
export interface V1NodeSelector {
  /**
   * @member {V1NodeSelectorTerm[]} nodeSelectorTerms Required. A
   * list of node selector terms. The terms are ORed.
   */
  nodeSelectorTerms: V1NodeSelectorTerm[];
}

/**
 * @interface
 * An interface representing V1NodeAffinity.
 * Node affinity is a group of node affinity scheduling rules.
 *
 */
export interface V1NodeAffinity {
  /**
   * @member {V1PreferredSchedulingTerm[]}
   * [preferredDuringSchedulingIgnoredDuringExecution] The scheduler will
   * prefer to schedule pods to nodes that satisfy the affinity expressions
   * specified by this field, but it may choose a node that violates one or
   * more of the expressions. The node that is most preferred is the one with
   * the greatest sum of weights, i.e. for each node that meets all of the
   * scheduling requirements (resource request, requiredDuringScheduling
   * affinity expressions, etc.), compute a sum by iterating through the
   * elements of this field and adding "weight" to the sum if the node matches
   * the corresponding matchExpressions; the node(s) with the highest sum are
   * the most preferred.
   */
  preferredDuringSchedulingIgnoredDuringExecution?: V1PreferredSchedulingTerm[];
  /**
   * @member {V1NodeSelector}
   * [requiredDuringSchedulingIgnoredDuringExecution] If the affinity
   * requirements specified by this field are not met at scheduling time, the
   * pod will not be scheduled onto the node. If the affinity requirements
   * specified by this field cease to be met at some point during pod execution
   * (e.g. due to an update), the system may or may not try to eventually evict
   * the pod from its node.
   */
  requiredDuringSchedulingIgnoredDuringExecution?: V1NodeSelector;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1LabelSelectorRequirement.
 * A label selector requirement is a selector that contains values, a key, and
 * an operator that relates the key and values.
 *
 */
export interface Iok8sapimachinerypkgapismetav1LabelSelectorRequirement {
  /**
   * @member {string} key key is the label key that the selector applies to.
   */
  key: string;
  /**
   * @member {string} operator operator represents a key's relationship to a
   * set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   */
  operator: string;
  /**
   * @member {string[]} [values] values is an array of string values. If the
   * operator is In or NotIn, the values array must be non-empty. If the
   * operator is Exists or DoesNotExist, the values array must be empty. This
   * array is replaced during a strategic merge patch.
   */
  values?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1LabelSelector.
 * A label selector is a label query over a set of resources. The result of
 * matchLabels and matchExpressions are ANDed. An empty label selector matches
 * all objects. A null label selector matches no objects.
 *
 */
export interface Iok8sapimachinerypkgapismetav1LabelSelector {
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelectorRequirement[]}
   * [matchExpressions] matchExpressions is a list of label selector
   * requirements. The requirements are ANDed.
   */
  matchExpressions?: Iok8sapimachinerypkgapismetav1LabelSelectorRequirement[];
  /**
   * @member {{ [propertyName: string]: string }} [matchLabels] matchLabels is
   * a map of {key,value} pairs. A single {key,value} in the matchLabels map is
   * equivalent to an element of matchExpressions, whose key field is "key",
   * the operator is "In", and the values array contains only "value". The
   * requirements are ANDed.
   */
  matchLabels?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing V1PodAffinityTerm.
 * Defines a set of pods (namely those matching the labelSelector relative to
 * the given namespace(s)) that this pod should be co-located (affinity) or not
 * co-located (anti-affinity) with, where co-located is defined as running on a
 * node whose value of the label with key <topologyKey> matches that of any
 * node on which a pod of the set of pods is running
 *
 */
export interface V1PodAffinityTerm {
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [labelSelector] A
   * label query over a set of resources, in this case pods.
   */
  labelSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string[]} [namespaces] namespaces specifies which namespaces the
   * labelSelector applies to (matches against); null or empty list means "this
   * pod's namespace"
   */
  namespaces?: string[];
  /**
   * @member {string} topologyKey This pod should be co-located (affinity) or
   * not co-located (anti-affinity) with the pods matching the labelSelector in
   * the specified namespaces, where co-located is defined as running on a node
   * whose value of the label with key topologyKey matches that of any node on
   * which any of the selected pods is running. Empty topologyKey is not
   * allowed.
   */
  topologyKey: string;
}

/**
 * @interface
 * An interface representing V1WeightedPodAffinityTerm.
 * The weights of all of the matched WeightedPodAffinityTerm fields are added
 * per-node to find the most preferred node(s)
 *
 */
export interface V1WeightedPodAffinityTerm {
  /**
   * @member {V1PodAffinityTerm} podAffinityTerm Required. A pod
   * affinity term, associated with the corresponding weight.
   */
  podAffinityTerm: V1PodAffinityTerm;
  /**
   * @member {number} weight weight associated with matching the corresponding
   * podAffinityTerm, in the range 1-100.
   */
  weight: number;
}

/**
 * @interface
 * An interface representing V1PodAffinity.
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 */
export interface V1PodAffinity {
  /**
   * @member {V1WeightedPodAffinityTerm[]}
   * [preferredDuringSchedulingIgnoredDuringExecution] The scheduler will
   * prefer to schedule pods to nodes that satisfy the affinity expressions
   * specified by this field, but it may choose a node that violates one or
   * more of the expressions. The node that is most preferred is the one with
   * the greatest sum of weights, i.e. for each node that meets all of the
   * scheduling requirements (resource request, requiredDuringScheduling
   * affinity expressions, etc.), compute a sum by iterating through the
   * elements of this field and adding "weight" to the sum if the node has pods
   * which matches the corresponding podAffinityTerm; the node(s) with the
   * highest sum are the most preferred.
   */
  preferredDuringSchedulingIgnoredDuringExecution?: V1WeightedPodAffinityTerm[];
  /**
   * @member {V1PodAffinityTerm[]}
   * [requiredDuringSchedulingIgnoredDuringExecution] If the affinity
   * requirements specified by this field are not met at scheduling time, the
   * pod will not be scheduled onto the node. If the affinity requirements
   * specified by this field cease to be met at some point during pod execution
   * (e.g. due to a pod label update), the system may or may not try to
   * eventually evict the pod from its node. When there are multiple elements,
   * the lists of nodes corresponding to each podAffinityTerm are intersected,
   * i.e. all terms must be satisfied.
   */
  requiredDuringSchedulingIgnoredDuringExecution?: V1PodAffinityTerm[];
}

/**
 * @interface
 * An interface representing V1PodAntiAffinity.
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 */
export interface V1PodAntiAffinity {
  /**
   * @member {V1WeightedPodAffinityTerm[]}
   * [preferredDuringSchedulingIgnoredDuringExecution] The scheduler will
   * prefer to schedule pods to nodes that satisfy the anti-affinity
   * expressions specified by this field, but it may choose a node that
   * violates one or more of the expressions. The node that is most preferred
   * is the one with the greatest sum of weights, i.e. for each node that meets
   * all of the scheduling requirements (resource request,
   * requiredDuringScheduling anti-affinity expressions, etc.), compute a sum
   * by iterating through the elements of this field and adding "weight" to the
   * sum if the node has pods which matches the corresponding podAffinityTerm;
   * the node(s) with the highest sum are the most preferred.
   */
  preferredDuringSchedulingIgnoredDuringExecution?: V1WeightedPodAffinityTerm[];
  /**
   * @member {V1PodAffinityTerm[]}
   * [requiredDuringSchedulingIgnoredDuringExecution] If the anti-affinity
   * requirements specified by this field are not met at scheduling time, the
   * pod will not be scheduled onto the node. If the anti-affinity requirements
   * specified by this field cease to be met at some point during pod execution
   * (e.g. due to a pod label update), the system may or may not try to
   * eventually evict the pod from its node. When there are multiple elements,
   * the lists of nodes corresponding to each podAffinityTerm are intersected,
   * i.e. all terms must be satisfied.
   */
  requiredDuringSchedulingIgnoredDuringExecution?: V1PodAffinityTerm[];
}

/**
 * @interface
 * An interface representing V1Affinity.
 * Affinity is a group of affinity scheduling rules.
 *
 */
export interface V1Affinity {
  /**
   * @member {V1NodeAffinity} [nodeAffinity] Describes node
   * affinity scheduling rules for the pod.
   */
  nodeAffinity?: V1NodeAffinity;
  /**
   * @member {V1PodAffinity} [podAffinity] Describes pod affinity
   * scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as
   * some other pod(s)).
   */
  podAffinity?: V1PodAffinity;
  /**
   * @member {V1PodAntiAffinity} [podAntiAffinity] Describes pod
   * anti-affinity scheduling rules (e.g. avoid putting this pod in the same
   * node, zone, etc. as some other pod(s)).
   */
  podAntiAffinity?: V1PodAntiAffinity;
}

/**
 * @interface
 * An interface representing V1ConfigMapEnvSource.
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables
 * with.
 *
 * The contents of the target ConfigMap's Data field will represent the
 * key-value pairs as environment variables.
 *
 */
export interface V1ConfigMapEnvSource {
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the ConfigMap must be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1SecretEnvSource.
 * SecretEnvSource selects a Secret to populate the environment variables with.
 *
 * The contents of the target Secret's Data field will represent the key-value
 * pairs as environment variables.
 *
 */
export interface V1SecretEnvSource {
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the Secret must be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1EnvFromSource.
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 */
export interface V1EnvFromSource {
  /**
   * @member {V1ConfigMapEnvSource} [configMapRef] The ConfigMap to
   * select from
   */
  configMapRef?: V1ConfigMapEnvSource;
  /**
   * @member {string} [prefix] An optional identifier to prepend to each key in
   * the ConfigMap. Must be a C_IDENTIFIER.
   */
  prefix?: string;
  /**
   * @member {V1SecretEnvSource} [secretRef] The Secret to select
   * from
   */
  secretRef?: V1SecretEnvSource;
}

/**
 * @interface
 * An interface representing V1ExecAction.
 * ExecAction describes a "run in container" action.
 *
 */
export interface V1ExecAction {
  /**
   * @member {string[]} [command] Command is the command line to execute inside
   * the container, the working directory for the command  is root ('/') in the
   * container's filesystem. The command is simply exec'd, it is not run inside
   * a shell, so traditional shell instructions ('|', etc) won't work. To use a
   * shell, you need to explicitly call out to that shell. Exit status of 0 is
   * treated as live/healthy and non-zero is unhealthy.
   */
  command?: string[];
}

/**
 * @interface
 * An interface representing V1HTTPHeader.
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 */
export interface V1HTTPHeader {
  /**
   * @member {string} name The header field name
   */
  name: string;
  /**
   * @member {string} value The header field value
   */
  value: string;
}

/**
 * @interface
 * An interface representing V1HTTPGetAction.
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 */
export interface V1HTTPGetAction {
  /**
   * @member {string} [host] Host name to connect to, defaults to the pod IP.
   * You probably want to set "Host" in httpHeaders instead.
   */
  host?: string;
  /**
   * @member {V1HTTPHeader[]} [httpHeaders] Custom headers to set
   * in the request. HTTP allows repeated headers.
   */
  httpHeaders?: V1HTTPHeader[];
  /**
   * @member {string} [path] Path to access on the HTTP server.
   */
  path?: string;
  /**
   * @member {string} port Name or number of the port to access on the
   * container. Number must be in the range 1 to 65535. Name must be an
   * IANA_SVC_NAME.
   */
  port: string;
  /**
   * @member {string} [scheme] Scheme to use for connecting to the host.
   * Defaults to HTTP.
   */
  scheme?: string;
}

/**
 * @interface
 * An interface representing V1TCPSocketAction.
 * TCPSocketAction describes an action based on opening a socket
 *
 */
export interface V1TCPSocketAction {
  /**
   * @member {string} [host] Optional: Host name to connect to, defaults to the
   * pod IP.
   */
  host?: string;
  /**
   * @member {string} port Number or name of the port to access on the
   * container. Number must be in the range 1 to 65535. Name must be an
   * IANA_SVC_NAME.
   */
  port: string;
}

/**
 * @interface
 * An interface representing V1Handler.
 * Handler defines a specific action that should be taken
 *
 */
export interface V1Handler {
  /**
   * @member {V1ExecAction} [exec] One and only one of the
   * following should be specified. Exec specifies the action to take.
   */
  exec?: V1ExecAction;
  /**
   * @member {V1HTTPGetAction} [httpGet] HTTPGet specifies the http
   * request to perform.
   */
  httpGet?: V1HTTPGetAction;
  /**
   * @member {V1TCPSocketAction} [tcpSocket] TCPSocket specifies an
   * action involving a TCP port. TCP hooks not yet supported
   */
  tcpSocket?: V1TCPSocketAction;
}

/**
 * @interface
 * An interface representing V1Lifecycle.
 * Lifecycle describes actions that the management system should take in
 * response to container lifecycle events. For the PostStart and PreStop
 * lifecycle handlers, management of the container blocks until the action is
 * complete, unless the container process fails, in which case the handler is
 * aborted.
 *
 */
export interface V1Lifecycle {
  /**
   * @member {V1Handler} [postStart] PostStart is called
   * immediately after a container is created. If the handler fails, the
   * container is terminated and restarted according to its restart policy.
   * Other management of the container blocks until the hook completes. More
   * info:
   * https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   */
  postStart?: V1Handler;
  /**
   * @member {V1Handler} [preStop] PreStop is called immediately
   * before a container is terminated. The container is terminated after the
   * handler completes. The reason for termination is passed to the handler.
   * Regardless of the outcome of the handler, the container is eventually
   * terminated. Other management of the container blocks until the hook
   * completes. More info:
   * https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   */
  preStop?: V1Handler;
}

/**
 * @interface
 * An interface representing V1Probe.
 * Probe describes a health check to be performed against a container to
 * determine whether it is alive or ready to receive traffic.
 *
 */
export interface V1Probe {
  /**
   * @member {V1ExecAction} [exec] One and only one of the
   * following should be specified. Exec specifies the action to take.
   */
  exec?: V1ExecAction;
  /**
   * @member {number} [failureThreshold] Minimum consecutive failures for the
   * probe to be considered failed after having succeeded. Defaults to 3.
   * Minimum value is 1.
   */
  failureThreshold?: number;
  /**
   * @member {V1HTTPGetAction} [httpGet] HTTPGet specifies the http
   * request to perform.
   */
  httpGet?: V1HTTPGetAction;
  /**
   * @member {number} [initialDelaySeconds] Number of seconds after the
   * container has started before liveness probes are initiated. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   */
  initialDelaySeconds?: number;
  /**
   * @member {number} [periodSeconds] How often (in seconds) to perform the
   * probe. Default to 10 seconds. Minimum value is 1.
   */
  periodSeconds?: number;
  /**
   * @member {number} [successThreshold] Minimum consecutive successes for the
   * probe to be considered successful after having failed. Defaults to 1. Must
   * be 1 for liveness. Minimum value is 1.
   */
  successThreshold?: number;
  /**
   * @member {V1TCPSocketAction} [tcpSocket] TCPSocket specifies an
   * action involving a TCP port. TCP hooks not yet supported
   */
  tcpSocket?: V1TCPSocketAction;
  /**
   * @member {number} [timeoutSeconds] Number of seconds after which the probe
   * times out. Defaults to 1 second. Minimum value is 1. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   */
  timeoutSeconds?: number;
}

/**
 * @interface
 * An interface representing V1ContainerPort.
 * ContainerPort represents a network port in a single container.
 *
 */
export interface V1ContainerPort {
  /**
   * @member {number} containerPort Number of port to expose on the pod's IP
   * address. This must be a valid port number, 0 < x < 65536.
   */
  containerPort: number;
  /**
   * @member {string} [hostIP] What host IP to bind the external port to.
   */
  hostIP?: string;
  /**
   * @member {number} [hostPort] Number of port to expose on the host. If
   * specified, this must be a valid port number, 0 < x < 65536. If HostNetwork
   * is specified, this must match ContainerPort. Most containers do not need
   * this.
   */
  hostPort?: number;
  /**
   * @member {string} [name] If specified, this must be an IANA_SVC_NAME and
   * unique within the pod. Each named port in a pod must have a unique name.
   * Name for the port that can be referred to by services.
   */
  name?: string;
  /**
   * @member {string} [protocol] Protocol for port. Must be UDP or TCP.
   * Defaults to "TCP".
   */
  protocol?: string;
}

/**
 * @interface
 * An interface representing V1Capabilities.
 * Adds and removes POSIX capabilities from running containers.
 *
 */
export interface V1Capabilities {
  /**
   * @member {string[]} [add] Added capabilities
   */
  add?: string[];
  /**
   * @member {string[]} [drop] Removed capabilities
   */
  drop?: string[];
}

/**
 * @interface
 * An interface representing V1SELinuxOptions.
 * SELinuxOptions are the labels to be applied to the container
 *
 */
export interface V1SELinuxOptions {
  /**
   * @member {string} [level] Level is SELinux level label that applies to the
   * container.
   */
  level?: string;
  /**
   * @member {string} [role] Role is a SELinux role label that applies to the
   * container.
   */
  role?: string;
  /**
   * @member {string} [type] Type is a SELinux type label that applies to the
   * container.
   */
  type?: string;
  /**
   * @member {string} [user] User is a SELinux user label that applies to the
   * container.
   */
  user?: string;
}

/**
 * @interface
 * An interface representing V1SecurityContext.
 * SecurityContext holds security configuration that will be applied to a
 * container. Some fields are present in both SecurityContext and
 * PodSecurityContext.  When both are set, the values in SecurityContext take
 * precedence.
 *
 */
export interface V1SecurityContext {
  /**
   * @member {boolean} [allowPrivilegeEscalation] AllowPrivilegeEscalation
   * controls whether a process can gain more privileges than its parent
   * process. This bool directly controls if the no_new_privs flag will be set
   * on the container process. AllowPrivilegeEscalation is true always when the
   * container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   */
  allowPrivilegeEscalation?: boolean;
  /**
   * @member {V1Capabilities} [capabilities] The capabilities to
   * add/drop when running containers. Defaults to the default set of
   * capabilities granted by the container runtime.
   */
  capabilities?: V1Capabilities;
  /**
   * @member {boolean} [privileged] Run container in privileged mode. Processes
   * in privileged containers are essentially equivalent to root on the host.
   * Defaults to false.
   */
  privileged?: boolean;
  /**
   * @member {boolean} [readOnlyRootFilesystem] Whether this container has a
   * read-only root filesystem. Default is false.
   */
  readOnlyRootFilesystem?: boolean;
  /**
   * @member {number} [runAsGroup] The GID to run the entrypoint of the
   * container process. Uses runtime default if unset. May also be set in
   * PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes
   * precedence.
   */
  runAsGroup?: number;
  /**
   * @member {boolean} [runAsNonRoot] Indicates that the container must run as
   * a non-root user. If true, the Kubelet will validate the image at runtime
   * to ensure that it does not run as UID 0 (root) and fail to start the
   * container if it does. If unset or false, no such validation will be
   * performed. May also be set in PodSecurityContext.  If set in both
   * SecurityContext and PodSecurityContext, the value specified in
   * SecurityContext takes precedence.
   */
  runAsNonRoot?: boolean;
  /**
   * @member {number} [runAsUser] The UID to run the entrypoint of the
   * container process. Defaults to user specified in image metadata if
   * unspecified. May also be set in PodSecurityContext.  If set in both
   * SecurityContext and PodSecurityContext, the value specified in
   * SecurityContext takes precedence.
   */
  runAsUser?: number;
  /**
   * @member {V1SELinuxOptions} [seLinuxOptions] The SELinux
   * context to be applied to the container. If unspecified, the container
   * runtime will allocate a random SELinux context for each container.  May
   * also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes
   * precedence.
   */
  seLinuxOptions?: V1SELinuxOptions;
}

/**
 * @interface
 * An interface representing V1VolumeDevice.
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 */
export interface V1VolumeDevice {
  /**
   * @member {string} devicePath devicePath is the path inside of the container
   * that the device will be mapped to.
   */
  devicePath: string;
  /**
   * @member {string} name name must match the name of a persistentVolumeClaim
   * in the pod
   */
  name: string;
}

/**
 * @interface
 * An interface representing V1VolumeMount.
 * VolumeMount describes a mounting of a Volume within a container.
 *
 */
export interface V1VolumeMount {
  /**
   * @member {string} mountPath Path within the container at which the volume
   * should be mounted.  Must not contain ':'.
   */
  mountPath: string;
  /**
   * @member {string} [mountPropagation] mountPropagation determines how mounts
   * are propagated from the host to container and the other way around. When
   * not set, MountPropagationNone is used. This field is beta in 1.10.
   */
  mountPropagation?: string;
  /**
   * @member {string} name This must match the Name of a Volume.
   */
  name: string;
  /**
   * @member {boolean} [readOnly] Mounted read-only if true, read-write
   * otherwise (false or unspecified). Defaults to false.
   */
  readOnly?: boolean;
  /**
   * @member {string} [subPath] Path within the volume from which the
   * container's volume should be mounted. Defaults to "" (volume's root).
   */
  subPath?: string;
}

/**
 * @interface
 * An interface representing V1Container.
 * A single application container that you want to run within a pod.
 *
 */
export interface V1Container {
  /**
   * @member {string[]} [args] Arguments to the entrypoint. The docker image's
   * CMD is used if this is not provided. Variable references $(VAR_NAME) are
   * expanded using the container's environment. If a variable cannot be
   * resolved, the reference in the input string will be unchanged. The
   * $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME).
   * Escaped references will never be expanded, regardless of whether the
   * variable exists or not. Cannot be updated. More info:
   * https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   */
  args?: string[];
  /**
   * @member {string[]} [command] Entrypoint array. Not executed within a
   * shell. The docker image's ENTRYPOINT is used if this is not provided.
   * Variable references $(VAR_NAME) are expanded using the container's
   * environment. If a variable cannot be resolved, the reference in the input
   * string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
   * double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
   * regardless of whether the variable exists or not. Cannot be updated. More
   * info:
   * https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   */
  command?: string[];
  /**
   * @member {V1EnvVar[]} [env] List of environment variables to
   * set in the container. Cannot be updated.
   */
  env?: V1EnvVar[];
  /**
   * @member {V1EnvFromSource[]} [envFrom] List of sources to
   * populate environment variables in the container. The keys defined within a
   * source must be a C_IDENTIFIER. All invalid keys will be reported as an
   * event when the container is starting. When a key exists in multiple
   * sources, the value associated with the last source will take precedence.
   * Values defined by an Env with a duplicate key will take precedence. Cannot
   * be updated.
   */
  envFrom?: V1EnvFromSource[];
  /**
   * @member {string} [image] Docker image name. More info:
   * https://kubernetes.io/docs/concepts/containers/images This field is
   * optional to allow higher level config management to default or override
   * container images in workload controllers like Deployments and
   * StatefulSets.
   */
  image?: string;
  /**
   * @member {string} [imagePullPolicy] Image pull policy. One of Always,
   * Never, IfNotPresent. Defaults to Always if :latest tag is specified, or
   * IfNotPresent otherwise. Cannot be updated. More info:
   * https://kubernetes.io/docs/concepts/containers/images#updating-images
   */
  imagePullPolicy?: string;
  /**
   * @member {V1Lifecycle} [lifecycle] Actions that the management
   * system should take in response to container lifecycle events. Cannot be
   * updated.
   */
  lifecycle?: V1Lifecycle;
  /**
   * @member {V1Probe} [livenessProbe] Periodic probe of container
   * liveness. Container will be restarted if the probe fails. Cannot be
   * updated. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   */
  livenessProbe?: V1Probe;
  /**
   * @member {string} name Name of the container specified as a DNS_LABEL. Each
   * container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   */
  name: string;
  /**
   * @member {V1ContainerPort[]} [ports] List of ports to expose
   * from the container. Exposing a port here gives the system additional
   * information about the network connections a container uses, but is
   * primarily informational. Not specifying a port here DOES NOT prevent that
   * port from being exposed. Any port which is listening on the default
   * "0.0.0.0" address inside a container will be accessible from the network.
   * Cannot be updated.
   */
  ports?: V1ContainerPort[];
  /**
   * @member {V1Probe} [readinessProbe] Periodic probe of container
   * service readiness. Container will be removed from service endpoints if the
   * probe fails. Cannot be updated. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   */
  readinessProbe?: V1Probe;
  /**
   * @member {V1ResourceRequirements} [resources] Compute Resources
   * required by this container. Cannot be updated. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
   */
  resources?: V1ResourceRequirements;
  /**
   * @member {V1SecurityContext} [securityContext] Security options
   * the pod should run with. More info:
   * https://kubernetes.io/docs/concepts/policy/security-context/ More info:
   * https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   */
  securityContext?: V1SecurityContext;
  /**
   * @member {boolean} [stdin] Whether this container should allocate a buffer
   * for stdin in the container runtime. If this is not set, reads from stdin
   * in the container will always result in EOF. Default is false.
   */
  stdin?: boolean;
  /**
   * @member {boolean} [stdinOnce] Whether the container runtime should close
   * the stdin channel after it has been opened by a single attach. When stdin
   * is true the stdin stream will remain open across multiple attach sessions.
   * If stdinOnce is set to true, stdin is opened on container start, is empty
   * until the first client attaches to stdin, and then remains open and
   * accepts data until the client disconnects, at which time stdin is closed
   * and remains closed until the container is restarted. If this flag is
   * false, a container processes that reads from stdin will never receive an
   * EOF. Default is false
   */
  stdinOnce?: boolean;
  /**
   * @member {string} [terminationMessagePath] Optional: Path at which the file
   * to which the container's termination message will be written is mounted
   * into the container's filesystem. Message written is intended to be brief
   * final status, such as an assertion failure message. Will be truncated by
   * the node if greater than 4096 bytes. The total message length across all
   * containers will be limited to 12kb. Defaults to /dev/termination-log.
   * Cannot be updated.
   */
  terminationMessagePath?: string;
  /**
   * @member {string} [terminationMessagePolicy] Indicate how the termination
   * message should be populated. File will use the contents of
   * terminationMessagePath to populate the container status message on both
   * success and failure. FallbackToLogsOnError will use the last chunk of
   * container log output if the termination message file is empty and the
   * container exited with an error. The log output is limited to 2048 bytes or
   * 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   */
  terminationMessagePolicy?: string;
  /**
   * @member {boolean} [tty] Whether this container should allocate a TTY for
   * itself, also requires 'stdin' to be true. Default is false.
   */
  tty?: boolean;
  /**
   * @member {V1VolumeDevice[]} [volumeDevices] volumeDevices is
   * the list of block devices to be used by the container. This is an alpha
   * feature and may change in the future.
   */
  volumeDevices?: V1VolumeDevice[];
  /**
   * @member {V1VolumeMount[]} [volumeMounts] Pod volumes to mount
   * into the container's filesystem. Cannot be updated.
   */
  volumeMounts?: V1VolumeMount[];
  /**
   * @member {string} [workingDir] Container's working directory. If not
   * specified, the container runtime's default will be used, which might be
   * configured in the container image. Cannot be updated.
   */
  workingDir?: string;
}

/**
 * @interface
 * An interface representing V1PodDNSConfigOption.
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 */
export interface V1PodDNSConfigOption {
  /**
   * @member {string} [name] Required.
   */
  name?: string;
  /**
   * @member {string} [value]
   */
  value?: string;
}

/**
 * @interface
 * An interface representing V1PodDNSConfig.
 * PodDNSConfig defines the DNS parameters of a pod in addition to those
 * generated from DNSPolicy.
 *
 */
export interface V1PodDNSConfig {
  /**
   * @member {string[]} [nameservers] A list of DNS name server IP addresses.
   * This will be appended to the base nameservers generated from DNSPolicy.
   * Duplicated nameservers will be removed.
   */
  nameservers?: string[];
  /**
   * @member {V1PodDNSConfigOption[]} [options] A list of DNS
   * resolver options. This will be merged with the base options generated from
   * DNSPolicy. Duplicated entries will be removed. Resolution options given in
   * Options will override those that appear in the base DNSPolicy.
   */
  options?: V1PodDNSConfigOption[];
  /**
   * @member {string[]} [searches] A list of DNS search domains for host-name
   * lookup. This will be appended to the base search paths generated from
   * DNSPolicy. Duplicated search paths will be removed.
   */
  searches?: string[];
}

/**
 * @interface
 * An interface representing V1HostAlias.
 * HostAlias holds the mapping between IP and hostnames that will be injected
 * as an entry in the pod's hosts file.
 *
 */
export interface V1HostAlias {
  /**
   * @member {string[]} [hostnames] Hostnames for the above IP address.
   */
  hostnames?: string[];
  /**
   * @member {string} [ip] IP address of the host file entry.
   */
  ip?: string;
}

/**
 * @interface
 * An interface representing V1LocalObjectReference.
 * LocalObjectReference contains enough information to let you locate the
 * referenced object inside the same namespace.
 *
 */
export interface V1LocalObjectReference {
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
}

/**
 * @interface
 * An interface representing V1PodReadinessGate.
 * PodReadinessGate contains the reference to a pod condition
 *
 */
export interface V1PodReadinessGate {
  /**
   * @member {string} conditionType ConditionType refers to a condition in the
   * pod's condition list with matching type.
   */
  conditionType: string;
}

/**
 * @interface
 * An interface representing V1Sysctl.
 * Sysctl defines a kernel parameter to be set
 *
 */
export interface V1Sysctl {
  /**
   * @member {string} name Name of a property to set
   */
  name: string;
  /**
   * @member {string} value Value of a property to set
   */
  value: string;
}

/**
 * @interface
 * An interface representing V1PodSecurityContext.
 * PodSecurityContext holds pod-level security attributes and common container
 * settings. Some fields are also present in container.securityContext.  Field
 * values of container.securityContext take precedence over field values of
 * PodSecurityContext.
 *
 */
export interface V1PodSecurityContext {
  /**
   * @member {number} [fsGroup] A special supplemental group that applies to
   * all containers in a pod. Some volume types allow the Kubelet to change the
   * ownership of that volume to be owned by the pod:
   *
   * 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files
   * created in the volume will be owned by FSGroup) 3. The permission bits are
   * OR'd with rw-rw----
   *
   * If unset, the Kubelet will not modify the ownership and permissions of any
   * volume.
   */
  fsGroup?: number;
  /**
   * @member {number} [runAsGroup] The GID to run the entrypoint of the
   * container process. Uses runtime default if unset. May also be set in
   * SecurityContext.  If set in both SecurityContext and PodSecurityContext,
   * the value specified in SecurityContext takes precedence for that
   * container.
   */
  runAsGroup?: number;
  /**
   * @member {boolean} [runAsNonRoot] Indicates that the container must run as
   * a non-root user. If true, the Kubelet will validate the image at runtime
   * to ensure that it does not run as UID 0 (root) and fail to start the
   * container if it does. If unset or false, no such validation will be
   * performed. May also be set in SecurityContext.  If set in both
   * SecurityContext and PodSecurityContext, the value specified in
   * SecurityContext takes precedence.
   */
  runAsNonRoot?: boolean;
  /**
   * @member {number} [runAsUser] The UID to run the entrypoint of the
   * container process. Defaults to user specified in image metadata if
   * unspecified. May also be set in SecurityContext.  If set in both
   * SecurityContext and PodSecurityContext, the value specified in
   * SecurityContext takes precedence for that container.
   */
  runAsUser?: number;
  /**
   * @member {V1SELinuxOptions} [seLinuxOptions] The SELinux
   * context to be applied to all containers. If unspecified, the container
   * runtime will allocate a random SELinux context for each container.  May
   * also be set in SecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes
   * precedence for that container.
   */
  seLinuxOptions?: V1SELinuxOptions;
  /**
   * @member {number[]} [supplementalGroups] A list of groups applied to the
   * first process run in each container, in addition to the container's
   * primary GID.  If unspecified, no groups will be added to any container.
   */
  supplementalGroups?: number[];
  /**
   * @member {V1Sysctl[]} [sysctls] Sysctls hold a list of
   * namespaced sysctls used for the pod. Pods with unsupported sysctls (by the
   * container runtime) might fail to launch.
   */
  sysctls?: V1Sysctl[];
}

/**
 * @interface
 * An interface representing V1Toleration.
 * The pod this Toleration is attached to tolerates any taint that matches the
 * triple <key,value,effect> using the matching operator <operator>.
 *
 */
export interface V1Toleration {
  /**
   * @member {string} [effect] Effect indicates the taint effect to match.
   * Empty means match all taint effects. When specified, allowed values are
   * NoSchedule, PreferNoSchedule and NoExecute.
   */
  effect?: string;
  /**
   * @member {string} [key] Key is the taint key that the toleration applies
   * to. Empty means match all taint keys. If the key is empty, operator must
   * be Exists; this combination means to match all values and all keys.
   */
  key?: string;
  /**
   * @member {string} [operator] Operator represents a key's relationship to
   * the value. Valid operators are Exists and Equal. Defaults to Equal. Exists
   * is equivalent to wildcard for value, so that a pod can tolerate all taints
   * of a particular category.
   */
  operator?: string;
  /**
   * @member {number} [tolerationSeconds] TolerationSeconds represents the
   * period of time the toleration (which must be of effect NoExecute,
   * otherwise this field is ignored) tolerates the taint. By default, it is
   * not set, which means tolerate the taint forever (do not evict). Zero and
   * negative values will be treated as 0 (evict immediately) by the system.
   */
  tolerationSeconds?: number;
  /**
   * @member {string} [value] Value is the taint value the toleration matches
   * to. If the operator is Exists, the value should be empty, otherwise just a
   * regular string.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing V1AWSElasticBlockStoreVolumeSource.
 * Represents a Persistent Disk resource in AWS.
 *
 * An AWS EBS disk must exist before mounting to a container. The disk must
 * also be in the same AWS zone as the kubelet. An AWS EBS disk can only be
 * mounted as read/write once. AWS EBS volumes support ownership management and
 * SELinux relabeling.
 *
 */
export interface V1AWSElasticBlockStoreVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   */
  fsType?: string;
  /**
   * @member {number} [partition] The partition in the volume that you want to
   * mount. If omitted, the default is to mount by volume name. Examples: For
   * volume /dev/sda1, you specify the partition as "1". Similarly, the volume
   * partition for /dev/sda is "0" (or you can leave the property empty).
   */
  partition?: number;
  /**
   * @member {boolean} [readOnly] Specify "true" to force and set the ReadOnly
   * property in VolumeMounts to "true". If omitted, the default is "false".
   * More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   */
  readOnly?: boolean;
  /**
   * @member {string} volumeID Unique ID of the persistent disk resource in AWS
   * (Amazon EBS volume). More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   */
  volumeID: string;
}

/**
 * @interface
 * An interface representing V1AzureDiskVolumeSource.
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to
 * the pod.
 *
 */
export interface V1AzureDiskVolumeSource {
  /**
   * @member {string} [cachingMode] Host Caching mode: None, Read Only, Read
   * Write.
   */
  cachingMode?: string;
  /**
   * @member {string} diskName The Name of the data disk in the blob storage
   */
  diskName: string;
  /**
   * @member {string} diskURI The URI the data disk in the blob storage
   */
  diskURI: string;
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {string} [kind] Expected values Shared: multiple blob disks per
   * storage account  Dedicated: single blob disk per storage account  Managed:
   * azure managed data disk (only in managed availability set). defaults to
   * shared
   */
  kind?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing V1AzureFileVolumeSource.
 * AzureFile represents an Azure File Service mount on the host and bind mount
 * to the pod.
 *
 */
export interface V1AzureFileVolumeSource {
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {string} secretName the name of secret that contains Azure Storage
   * Account Name and Key
   */
  secretName: string;
  /**
   * @member {string} shareName Share Name
   */
  shareName: string;
}

/**
 * @interface
 * An interface representing V1CephFSVolumeSource.
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs
 * volumes do not support ownership management or SELinux relabeling.
 *
 */
export interface V1CephFSVolumeSource {
  /**
   * @member {string[]} monitors Required: Monitors is a collection of Ceph
   * monitors More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  monitors: string[];
  /**
   * @member {string} [path] Optional: Used as the mounted root, rather than
   * the full Ceph tree, default is /
   */
  path?: string;
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  readOnly?: boolean;
  /**
   * @member {string} [secretFile] Optional: SecretFile is the path to key ring
   * for User, default is /etc/ceph/user.secret More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  secretFile?: string;
  /**
   * @member {V1LocalObjectReference} [secretRef] Optional:
   * SecretRef is reference to the authentication secret for User, default is
   * empty. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  secretRef?: V1LocalObjectReference;
  /**
   * @member {string} [user] Optional: User is the rados user name, default is
   * admin More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  user?: string;
}

/**
 * @interface
 * An interface representing V1CinderVolumeSource.
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist
 * before mounting to a container. The volume must also be in the same region
 * as the kubelet. Cinder volumes support ownership management and SELinux
 * relabeling.
 *
 */
export interface V1CinderVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Examples: "ext4", "xfs",
   * "ntfs". Implicitly inferred to be "ext4" if unspecified. More info:
   * https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  fsType?: string;
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. More info:
   * https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} [secretRef] Optional: points
   * to a secret object containing parameters used to connect to OpenStack.
   */
  secretRef?: V1LocalObjectReference;
  /**
   * @member {string} volumeID volume id used to identify the volume in cinder
   * More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  volumeID: string;
}

/**
 * @interface
 * An interface representing V1KeyToPath.
 * Maps a string key to a path within a volume.
 *
 */
export interface V1KeyToPath {
  /**
   * @member {string} key The key to project.
   */
  key: string;
  /**
   * @member {number} [mode] Optional: mode bits to use on this file, must be a
   * value between 0 and 0777. If not specified, the volume defaultMode will be
   * used. This might be in conflict with other options that affect the file
   * mode, like fsGroup, and the result can be other mode bits set.
   */
  mode?: number;
  /**
   * @member {string} path The relative path of the file to map the key to. May
   * not be an absolute path. May not contain the path element '..'. May not
   * start with the string '..'.
   */
  path: string;
}

/**
 * @interface
 * An interface representing V1ConfigMapVolumeSource.
 * Adapts a ConfigMap into a volume.
 *
 * The contents of the target ConfigMap's Data field will be presented in a
 * volume as files using the keys in the Data field as the file names, unless
 * the items element is populated with specific mappings of keys to paths.
 * ConfigMap volumes support ownership management and SELinux relabeling.
 *
 */
export interface V1ConfigMapVolumeSource {
  /**
   * @member {number} [defaultMode] Optional: mode bits to use on created files
   * by default. Must be a value between 0 and 0777. Defaults to 0644.
   * Directories within the path are not affected by this setting. This might
   * be in conflict with other options that affect the file mode, like fsGroup,
   * and the result can be other mode bits set.
   */
  defaultMode?: number;
  /**
   * @member {V1KeyToPath[]} [items] If unspecified, each key-value
   * pair in the Data field of the referenced ConfigMap will be projected into
   * the volume as a file whose name is the key and content is the value. If
   * specified, the listed keys will be projected into the specified paths, and
   * unlisted keys will not be present. If a key is specified which is not
   * present in the ConfigMap, the volume setup will error unless it is marked
   * optional. Paths must be relative and may not contain the '..' path or
   * start with '..'.
   */
  items?: V1KeyToPath[];
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the ConfigMap or it's keys
   * must be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1DownwardAPIVolumeFile.
 * DownwardAPIVolumeFile represents information to create the file containing
 * the pod field
 *
 */
export interface V1DownwardAPIVolumeFile {
  /**
   * @member {V1ObjectFieldSelector} [fieldRef] Required: Selects a
   * field of the pod: only annotations, labels, name and namespace are
   * supported.
   */
  fieldRef?: V1ObjectFieldSelector;
  /**
   * @member {number} [mode] Optional: mode bits to use on this file, must be a
   * value between 0 and 0777. If not specified, the volume defaultMode will be
   * used. This might be in conflict with other options that affect the file
   * mode, like fsGroup, and the result can be other mode bits set.
   */
  mode?: number;
  /**
   * @member {string} path Required: Path is  the relative path name of the
   * file to be created. Must not be absolute or contain the '..' path. Must be
   * utf-8 encoded. The first item of the relative path must not start with
   * '..'
   */
  path: string;
  /**
   * @member {V1ResourceFieldSelector} [resourceFieldRef] Selects a
   * resource of the container: only resources limits and requests (limits.cpu,
   * limits.memory, requests.cpu and requests.memory) are currently supported.
   */
  resourceFieldRef?: V1ResourceFieldSelector;
}

/**
 * @interface
 * An interface representing V1DownwardAPIVolumeSource.
 * DownwardAPIVolumeSource represents a volume containing downward API info.
 * Downward API volumes support ownership management and SELinux relabeling.
 *
 */
export interface V1DownwardAPIVolumeSource {
  /**
   * @member {number} [defaultMode] Optional: mode bits to use on created files
   * by default. Must be a value between 0 and 0777. Defaults to 0644.
   * Directories within the path are not affected by this setting. This might
   * be in conflict with other options that affect the file mode, like fsGroup,
   * and the result can be other mode bits set.
   */
  defaultMode?: number;
  /**
   * @member {V1DownwardAPIVolumeFile[]} [items] Items is a list of
   * downward API volume file
   */
  items?: V1DownwardAPIVolumeFile[];
}

/**
 * @interface
 * An interface representing V1EmptyDirVolumeSource.
 * Represents an empty directory for a pod. Empty directory volumes support
 * ownership management and SELinux relabeling.
 *
 */
export interface V1EmptyDirVolumeSource {
  /**
   * @member {string} [medium] What type of storage medium should back this
   * directory. The default is "" which means to use the node's default medium.
   * Must be an empty string (default) or Memory. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   */
  medium?: string;
  /**
   * @member {string} [sizeLimit] Total amount of local storage required for
   * this EmptyDir volume. The size limit is also applicable for memory medium.
   * The maximum usage on memory medium EmptyDir would be the minimum value
   * between the SizeLimit specified here and the sum of memory limits of all
   * containers in a pod. The default is nil which means that the limit is
   * undefined. More info:
   * http://kubernetes.io/docs/user-guide/volumes#emptydir
   */
  sizeLimit?: string;
}

/**
 * @interface
 * An interface representing V1FCVolumeSource.
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted
 * as read/write once. Fibre Channel volumes support ownership management and
 * SELinux relabeling.
 *
 */
export interface V1FCVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {number} [lun] Optional: FC target lun number
   */
  lun?: number;
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {string[]} [targetWWNs] Optional: FC target worldwide names (WWNs)
   */
  targetWWNs?: string[];
  /**
   * @member {string[]} [wwids] Optional: FC volume world wide identifiers
   * (wwids) Either wwids or combination of targetWWNs and lun must be set, but
   * not both simultaneously.
   */
  wwids?: string[];
}

/**
 * @interface
 * An interface representing V1FlexVolumeSource.
 * FlexVolume represents a generic volume resource that is provisioned/attached
 * using an exec based plugin.
 *
 */
export interface V1FlexVolumeSource {
  /**
   * @member {string} driver Driver is the name of the driver to use for this
   * volume.
   */
  driver: string;
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * The default filesystem depends on FlexVolume script.
   */
  fsType?: string;
  /**
   * @member {{ [propertyName: string]: string }} [options] Optional: Extra
   * command options if any.
   */
  options?: { [propertyName: string]: string };
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} [secretRef] Optional:
   * SecretRef is reference to the secret object containing sensitive
   * information to pass to the plugin scripts. This may be empty if no secret
   * object is specified. If the secret object contains more than one secret,
   * all secrets are passed to the plugin scripts.
   */
  secretRef?: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing V1FlockerVolumeSource.
 * Represents a Flocker volume mounted by the Flocker agent. One and only one
 * of datasetName and datasetUUID should be set. Flocker volumes do not support
 * ownership management or SELinux relabeling.
 *
 */
export interface V1FlockerVolumeSource {
  /**
   * @member {string} [datasetName] Name of the dataset stored as metadata ->
   * name on the dataset for Flocker should be considered as deprecated
   */
  datasetName?: string;
  /**
   * @member {string} [datasetUUID] UUID of the dataset. This is unique
   * identifier of a Flocker dataset
   */
  datasetUUID?: string;
}

/**
 * @interface
 * An interface representing V1GCEPersistentDiskVolumeSource.
 * Represents a Persistent Disk resource in Google Compute Engine.
 *
 * A GCE PD must exist before mounting to a container. The disk must also be in
 * the same GCE project and zone as the kubelet. A GCE PD can only be mounted
 * as read/write once or read-only many times. GCE PDs support ownership
 * management and SELinux relabeling.
 *
 */
export interface V1GCEPersistentDiskVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  fsType?: string;
  /**
   * @member {number} [partition] The partition in the volume that you want to
   * mount. If omitted, the default is to mount by volume name. Examples: For
   * volume /dev/sda1, you specify the partition as "1". Similarly, the volume
   * partition for /dev/sda is "0" (or you can leave the property empty). More
   * info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  partition?: number;
  /**
   * @member {string} pdName Unique name of the PD resource in GCE. Used to
   * identify the disk in GCE. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  pdName: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the ReadOnly setting
   * in VolumeMounts. Defaults to false. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing V1GitRepoVolumeSource.
 * Represents a volume that is populated with the contents of a git repository.
 * Git repo volumes do not support ownership management. Git repo volumes
 * support SELinux relabeling.
 *
 * DEPRECATED: GitRepo is deprecated. To provision a container with a git repo,
 * mount an EmptyDir into an InitContainer that clones the repo using git, then
 * mount the EmptyDir into the Pod's container.
 *
 */
export interface V1GitRepoVolumeSource {
  /**
   * @member {string} [directory] Target directory name. Must not contain or
   * start with '..'.  If '.' is supplied, the volume directory will be the git
   * repository.  Otherwise, if specified, the volume will contain the git
   * repository in the subdirectory with the given name.
   */
  directory?: string;
  /**
   * @member {string} repository Repository URL
   */
  repository: string;
  /**
   * @member {string} [revision] Commit hash for the specified revision.
   */
  revision?: string;
}

/**
 * @interface
 * An interface representing V1GlusterfsVolumeSource.
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs
 * volumes do not support ownership management or SELinux relabeling.
 *
 */
export interface V1GlusterfsVolumeSource {
  /**
   * @member {string} endpoints EndpointsName is the endpoint name that details
   * Glusterfs topology. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   */
  endpoints: string;
  /**
   * @member {string} path Path is the Glusterfs volume path. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   */
  path: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the Glusterfs volume
   * to be mounted with read-only permissions. Defaults to false. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing V1HostPathVolumeSource.
 * Represents a host path mapped into a pod. Host path volumes do not support
 * ownership management or SELinux relabeling.
 *
 */
export interface V1HostPathVolumeSource {
  /**
   * @member {string} path Path of the directory on the host. If the path is a
   * symlink, it will follow the link to the real path. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   */
  path: string;
  /**
   * @member {string} [type] Type for HostPath Volume Defaults to "" More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1ISCSIVolumeSource.
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write
 * once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 */
export interface V1ISCSIVolumeSource {
  /**
   * @member {boolean} [chapAuthDiscovery] whether support iSCSI Discovery CHAP
   * authentication
   */
  chapAuthDiscovery?: boolean;
  /**
   * @member {boolean} [chapAuthSession] whether support iSCSI Session CHAP
   * authentication
   */
  chapAuthSession?: boolean;
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   */
  fsType?: string;
  /**
   * @member {string} [initiatorName] Custom iSCSI Initiator Name. If
   * initiatorName is specified with iscsiInterface simultaneously, new iSCSI
   * interface <target portal>:<volume name> will be created for the
   * connection.
   */
  initiatorName?: string;
  /**
   * @member {string} iqn Target iSCSI Qualified Name.
   */
  iqn: string;
  /**
   * @member {string} [iscsiInterface] iSCSI Interface Name that uses an iSCSI
   * transport. Defaults to 'default' (tcp).
   */
  iscsiInterface?: string;
  /**
   * @member {number} lun iSCSI Target Lun number.
   */
  lun: number;
  /**
   * @member {string[]} [portals] iSCSI Target Portal List. The portal is
   * either an IP or ip_addr:port if the port is other than default (typically
   * TCP ports 860 and 3260).
   */
  portals?: string[];
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the ReadOnly setting
   * in VolumeMounts. Defaults to false.
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} [secretRef] CHAP Secret for
   * iSCSI target and initiator authentication
   */
  secretRef?: V1LocalObjectReference;
  /**
   * @member {string} targetPortal iSCSI Target Portal. The Portal is either an
   * IP or ip_addr:port if the port is other than default (typically TCP ports
   * 860 and 3260).
   */
  targetPortal: string;
}

/**
 * @interface
 * An interface representing V1NFSVolumeSource.
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not
 * support ownership management or SELinux relabeling.
 *
 */
export interface V1NFSVolumeSource {
  /**
   * @member {string} path Path that is exported by the NFS server. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#nfs
   */
  path: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the NFS export to be
   * mounted with read-only permissions. Defaults to false. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#nfs
   */
  readOnly?: boolean;
  /**
   * @member {string} server Server is the hostname or IP address of the NFS
   * server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   */
  server: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaimVolumeSource.
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same
 * namespace. This volume finds the bound PV and mounts that volume for the
 * pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around
 * another type of volume that is owned by someone else (the system).
 *
 */
export interface V1PersistentVolumeClaimVolumeSource {
  /**
   * @member {string} claimName ClaimName is the name of a
   * PersistentVolumeClaim in the same namespace as the pod using this volume.
   * More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   */
  claimName: string;
  /**
   * @member {boolean} [readOnly] Will force the ReadOnly setting in
   * VolumeMounts. Default false.
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing V1PhotonPersistentDiskVolumeSource.
 * Represents a Photon Controller persistent disk resource.
 *
 */
export interface V1PhotonPersistentDiskVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {string} pdID ID that identifies Photon Controller persistent disk
   */
  pdID: string;
}

/**
 * @interface
 * An interface representing V1PortworxVolumeSource.
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 */
export interface V1PortworxVolumeSource {
  /**
   * @member {string} [fsType] FSType represents the filesystem type to mount
   * Must be a filesystem type supported by the host operating system. Ex.
   * "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {string} volumeID VolumeID uniquely identifies a Portworx volume
   */
  volumeID: string;
}

/**
 * @interface
 * An interface representing V1ConfigMapProjection.
 * Adapts a ConfigMap into a projected volume.
 *
 * The contents of the target ConfigMap's Data field will be presented in a
 * projected volume as files using the keys in the Data field as the file
 * names, unless the items element is populated with specific mappings of keys
 * to paths. Note that this is identical to a configmap volume source without
 * the default mode.
 *
 */
export interface V1ConfigMapProjection {
  /**
   * @member {V1KeyToPath[]} [items] If unspecified, each key-value
   * pair in the Data field of the referenced ConfigMap will be projected into
   * the volume as a file whose name is the key and content is the value. If
   * specified, the listed keys will be projected into the specified paths, and
   * unlisted keys will not be present. If a key is specified which is not
   * present in the ConfigMap, the volume setup will error unless it is marked
   * optional. Paths must be relative and may not contain the '..' path or
   * start with '..'.
   */
  items?: V1KeyToPath[];
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the ConfigMap or it's keys
   * must be defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1DownwardAPIProjection.
 * Represents downward API info for projecting into a projected volume. Note
 * that this is identical to a downwardAPI volume source without the default
 * mode.
 *
 */
export interface V1DownwardAPIProjection {
  /**
   * @member {V1DownwardAPIVolumeFile[]} [items] Items is a list of
   * DownwardAPIVolume file
   */
  items?: V1DownwardAPIVolumeFile[];
}

/**
 * @interface
 * An interface representing V1SecretProjection.
 * Adapts a secret into a projected volume.
 *
 * The contents of the target Secret's Data field will be presented in a
 * projected volume as files using the keys in the Data field as the file
 * names. Note that this is identical to a secret volume source without the
 * default mode.
 *
 */
export interface V1SecretProjection {
  /**
   * @member {V1KeyToPath[]} [items] If unspecified, each key-value
   * pair in the Data field of the referenced Secret will be projected into the
   * volume as a file whose name is the key and content is the value. If
   * specified, the listed keys will be projected into the specified paths, and
   * unlisted keys will not be present. If a key is specified which is not
   * present in the Secret, the volume setup will error unless it is marked
   * optional. Paths must be relative and may not contain the '..' path or
   * start with '..'.
   */
  items?: V1KeyToPath[];
  /**
   * @member {string} [name] Name of the referent. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name?: string;
  /**
   * @member {boolean} [optional] Specify whether the Secret or its key must be
   * defined
   */
  optional?: boolean;
}

/**
 * @interface
 * An interface representing V1ServiceAccountTokenProjection.
 * ServiceAccountTokenProjection represents a projected service account token
 * volume. This projection can be used to insert a service account token into
 * the pods runtime filesystem for use against APIs (Kubernetes API Server or
 * otherwise).
 *
 */
export interface V1ServiceAccountTokenProjection {
  /**
   * @member {string} [audience] Audience is the intended audience of the
   * token. A recipient of a token must identify itself with an identifier
   * specified in the audience of the token, and otherwise should reject the
   * token. The audience defaults to the identifier of the apiserver.
   */
  audience?: string;
  /**
   * @member {number} [expirationSeconds] ExpirationSeconds is the requested
   * duration of validity of the service account token. As the token approaches
   * expiration, the kubelet volume plugin will proactively rotate the service
   * account token. The kubelet will start trying to rotate the token if the
   * token is older than 80 percent of its time to live or if the token is
   * older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   */
  expirationSeconds?: number;
  /**
   * @member {string} path Path is the path relative to the mount point of the
   * file to project the token into.
   */
  path: string;
}

/**
 * @interface
 * An interface representing V1VolumeProjection.
 * Projection that may be projected along with other supported volume types
 *
 */
export interface V1VolumeProjection {
  /**
   * @member {V1ConfigMapProjection} [configMap] information about
   * the configMap data to project
   */
  configMap?: V1ConfigMapProjection;
  /**
   * @member {V1DownwardAPIProjection} [downwardAPI] information
   * about the downwardAPI data to project
   */
  downwardAPI?: V1DownwardAPIProjection;
  /**
   * @member {V1SecretProjection} [secret] information about the
   * secret data to project
   */
  secret?: V1SecretProjection;
  /**
   * @member {V1ServiceAccountTokenProjection}
   * [serviceAccountToken] information about the serviceAccountToken data to
   * project
   */
  serviceAccountToken?: V1ServiceAccountTokenProjection;
}

/**
 * @interface
 * An interface representing V1ProjectedVolumeSource.
 * Represents a projected volume source
 *
 */
export interface V1ProjectedVolumeSource {
  /**
   * @member {number} [defaultMode] Mode bits to use on created files by
   * default. Must be a value between 0 and 0777. Directories within the path
   * are not affected by this setting. This might be in conflict with other
   * options that affect the file mode, like fsGroup, and the result can be
   * other mode bits set.
   */
  defaultMode?: number;
  /**
   * @member {V1VolumeProjection[]} sources list of volume
   * projections
   */
  sources: V1VolumeProjection[];
}

/**
 * @interface
 * An interface representing V1QuobyteVolumeSource.
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes
 * do not support ownership management or SELinux relabeling.
 *
 */
export interface V1QuobyteVolumeSource {
  /**
   * @member {string} [group] Group to map volume access to Default is no group
   */
  group?: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the Quobyte volume
   * to be mounted with read-only permissions. Defaults to false.
   */
  readOnly?: boolean;
  /**
   * @member {string} registry Registry represents a single or multiple Quobyte
   * Registry services specified as a string as host:port pair (multiple
   * entries are separated with commas) which acts as the central registry for
   * volumes
   */
  registry: string;
  /**
   * @member {string} [user] User to map volume access to Defaults to
   * serivceaccount user
   */
  user?: string;
  /**
   * @member {string} volume Volume is a string that references an already
   * created Quobyte volume by name.
   */
  volume: string;
}

/**
 * @interface
 * An interface representing V1RBDVolumeSource.
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD
 * volumes support ownership management and SELinux relabeling.
 *
 */
export interface V1RBDVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#rbd
   */
  fsType?: string;
  /**
   * @member {string} image The rados image name. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  image: string;
  /**
   * @member {string} [keyring] Keyring is the path to key ring for RBDUser.
   * Default is /etc/ceph/keyring. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  keyring?: string;
  /**
   * @member {string[]} monitors A collection of Ceph monitors. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  monitors: string[];
  /**
   * @member {string} [pool] The rados pool name. Default is rbd. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  pool?: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the ReadOnly setting
   * in VolumeMounts. Defaults to false. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} [secretRef] SecretRef is name
   * of the authentication secret for RBDUser. If provided overrides keyring.
   * Default is nil. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  secretRef?: V1LocalObjectReference;
  /**
   * @member {string} [user] The rados user name. Default is admin. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  user?: string;
}

/**
 * @interface
 * An interface representing V1ScaleIOVolumeSource.
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 */
export interface V1ScaleIOVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {string} gateway The host address of the ScaleIO API Gateway.
   */
  gateway: string;
  /**
   * @member {string} [protectionDomain] The name of the ScaleIO Protection
   * Domain for the configured storage.
   */
  protectionDomain?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} secretRef SecretRef
   * references to the secret for ScaleIO user and other sensitive information.
   * If this is not provided, Login operation will fail.
   */
  secretRef: V1LocalObjectReference;
  /**
   * @member {boolean} [sslEnabled] Flag to enable/disable SSL communication
   * with Gateway, default false
   */
  sslEnabled?: boolean;
  /**
   * @member {string} [storageMode] Indicates whether the storage for a volume
   * should be ThickProvisioned or ThinProvisioned.
   */
  storageMode?: string;
  /**
   * @member {string} [storagePool] The ScaleIO Storage Pool associated with
   * the protection domain.
   */
  storagePool?: string;
  /**
   * @member {string} system The name of the storage system as configured in
   * ScaleIO.
   */
  system: string;
  /**
   * @member {string} [volumeName] The name of a volume already created in the
   * ScaleIO system that is associated with this volume source.
   */
  volumeName?: string;
}

/**
 * @interface
 * An interface representing V1SecretVolumeSource.
 * Adapts a Secret into a volume.
 *
 * The contents of the target Secret's Data field will be presented in a volume
 * as files using the keys in the Data field as the file names. Secret volumes
 * support ownership management and SELinux relabeling.
 *
 */
export interface V1SecretVolumeSource {
  /**
   * @member {number} [defaultMode] Optional: mode bits to use on created files
   * by default. Must be a value between 0 and 0777. Defaults to 0644.
   * Directories within the path are not affected by this setting. This might
   * be in conflict with other options that affect the file mode, like fsGroup,
   * and the result can be other mode bits set.
   */
  defaultMode?: number;
  /**
   * @member {V1KeyToPath[]} [items] If unspecified, each key-value
   * pair in the Data field of the referenced Secret will be projected into the
   * volume as a file whose name is the key and content is the value. If
   * specified, the listed keys will be projected into the specified paths, and
   * unlisted keys will not be present. If a key is specified which is not
   * present in the Secret, the volume setup will error unless it is marked
   * optional. Paths must be relative and may not contain the '..' path or
   * start with '..'.
   */
  items?: V1KeyToPath[];
  /**
   * @member {boolean} [optional] Specify whether the Secret or it's keys must
   * be defined
   */
  optional?: boolean;
  /**
   * @member {string} [secretName] Name of the secret in the pod's namespace to
   * use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   */
  secretName?: string;
}

/**
 * @interface
 * An interface representing V1StorageOSVolumeSource.
 * Represents a StorageOS persistent volume resource.
 *
 */
export interface V1StorageOSVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1LocalObjectReference} [secretRef] SecretRef
   * specifies the secret to use for obtaining the StorageOS API credentials.
   * If not specified, default values will be attempted.
   */
  secretRef?: V1LocalObjectReference;
  /**
   * @member {string} [volumeName] VolumeName is the human-readable name of the
   * StorageOS volume.  Volume names are only unique within a namespace.
   */
  volumeName?: string;
  /**
   * @member {string} [volumeNamespace] VolumeNamespace specifies the scope of
   * the volume within StorageOS.  If no namespace is specified then the Pod's
   * namespace will be used.  This allows the Kubernetes name scoping to be
   * mirrored within StorageOS for tighter integration. Set VolumeName to any
   * name to override the default behaviour. Set to "default" if you are not
   * using namespaces within StorageOS. Namespaces that do not pre-exist within
   * StorageOS will be created.
   */
  volumeNamespace?: string;
}

/**
 * @interface
 * An interface representing V1VsphereVirtualDiskVolumeSource.
 * Represents a vSphere volume resource.
 *
 */
export interface V1VsphereVirtualDiskVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {string} [storagePolicyID] Storage Policy Based Management (SPBM)
   * profile ID associated with the StoragePolicyName.
   */
  storagePolicyID?: string;
  /**
   * @member {string} [storagePolicyName] Storage Policy Based Management
   * (SPBM) profile name.
   */
  storagePolicyName?: string;
  /**
   * @member {string} volumePath Path that identifies vSphere volume vmdk
   */
  volumePath: string;
}

/**
 * @interface
 * An interface representing V1Volume.
 * Volume represents a named volume in a pod that may be accessed by any
 * container in the pod.
 *
 */
export interface V1Volume {
  /**
   * @member {V1AWSElasticBlockStoreVolumeSource}
   * [awsElasticBlockStore] AWSElasticBlockStore represents an AWS Disk
   * resource that is attached to a kubelet's host machine and then exposed to
   * the pod. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   */
  awsElasticBlockStore?: V1AWSElasticBlockStoreVolumeSource;
  /**
   * @member {V1AzureDiskVolumeSource} [azureDisk] AzureDisk
   * represents an Azure Data Disk mount on the host and bind mount to the pod.
   */
  azureDisk?: V1AzureDiskVolumeSource;
  /**
   * @member {V1AzureFileVolumeSource} [azureFile] AzureFile
   * represents an Azure File Service mount on the host and bind mount to the
   * pod.
   */
  azureFile?: V1AzureFileVolumeSource;
  /**
   * @member {V1CephFSVolumeSource} [cephfs] CephFS represents a
   * Ceph FS mount on the host that shares a pod's lifetime
   */
  cephfs?: V1CephFSVolumeSource;
  /**
   * @member {V1CinderVolumeSource} [cinder] Cinder represents a
   * cinder volume attached and mounted on kubelets host machine More info:
   * https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  cinder?: V1CinderVolumeSource;
  /**
   * @member {V1ConfigMapVolumeSource} [configMap] ConfigMap
   * represents a configMap that should populate this volume
   */
  configMap?: V1ConfigMapVolumeSource;
  /**
   * @member {V1DownwardAPIVolumeSource} [downwardAPI] DownwardAPI
   * represents downward API about the pod that should populate this volume
   */
  downwardAPI?: V1DownwardAPIVolumeSource;
  /**
   * @member {V1EmptyDirVolumeSource} [emptyDir] EmptyDir
   * represents a temporary directory that shares a pod's lifetime. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   */
  emptyDir?: V1EmptyDirVolumeSource;
  /**
   * @member {V1FCVolumeSource} [fc] FC represents a Fibre Channel
   * resource that is attached to a kubelet's host machine and then exposed to
   * the pod.
   */
  fc?: V1FCVolumeSource;
  /**
   * @member {V1FlexVolumeSource} [flexVolume] FlexVolume
   * represents a generic volume resource that is provisioned/attached using an
   * exec based plugin.
   */
  flexVolume?: V1FlexVolumeSource;
  /**
   * @member {V1FlockerVolumeSource} [flocker] Flocker represents a
   * Flocker volume attached to a kubelet's host machine. This depends on the
   * Flocker control service being running
   */
  flocker?: V1FlockerVolumeSource;
  /**
   * @member {V1GCEPersistentDiskVolumeSource} [gcePersistentDisk]
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  gcePersistentDisk?: V1GCEPersistentDiskVolumeSource;
  /**
   * @member {V1GitRepoVolumeSource} [gitRepo] GitRepo represents a
   * git repository at a particular revision. DEPRECATED: GitRepo is
   * deprecated. To provision a container with a git repo, mount an EmptyDir
   * into an InitContainer that clones the repo using git, then mount the
   * EmptyDir into the Pod's container.
   */
  gitRepo?: V1GitRepoVolumeSource;
  /**
   * @member {V1GlusterfsVolumeSource} [glusterfs] Glusterfs
   * represents a Glusterfs mount on the host that shares a pod's lifetime.
   * More info:
   * https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
   */
  glusterfs?: V1GlusterfsVolumeSource;
  /**
   * @member {V1HostPathVolumeSource} [hostPath] HostPath
   * represents a pre-existing file or directory on the host machine that is
   * directly exposed to the container. This is generally used for system
   * agents or other privileged things that are allowed to see the host
   * machine. Most containers will NOT need this. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   */
  hostPath?: V1HostPathVolumeSource;
  /**
   * @member {V1ISCSIVolumeSource} [iscsi] ISCSI represents an
   * ISCSI Disk resource that is attached to a kubelet's host machine and then
   * exposed to the pod. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
   */
  iscsi?: V1ISCSIVolumeSource;
  /**
   * @member {string} name Volume's name. Must be a DNS_LABEL and unique within
   * the pod. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   */
  name: string;
  /**
   * @member {V1NFSVolumeSource} [nfs] NFS represents an NFS mount
   * on the host that shares a pod's lifetime More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#nfs
   */
  nfs?: V1NFSVolumeSource;
  /**
   * @member {V1PersistentVolumeClaimVolumeSource}
   * [persistentVolumeClaim] PersistentVolumeClaimVolumeSource represents a
   * reference to a PersistentVolumeClaim in the same namespace. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   */
  persistentVolumeClaim?: V1PersistentVolumeClaimVolumeSource;
  /**
   * @member {V1PhotonPersistentDiskVolumeSource}
   * [photonPersistentDisk] PhotonPersistentDisk represents a PhotonController
   * persistent disk attached and mounted on kubelets host machine
   */
  photonPersistentDisk?: V1PhotonPersistentDiskVolumeSource;
  /**
   * @member {V1PortworxVolumeSource} [portworxVolume]
   * PortworxVolume represents a portworx volume attached and mounted on
   * kubelets host machine
   */
  portworxVolume?: V1PortworxVolumeSource;
  /**
   * @member {V1ProjectedVolumeSource} [projected] Items for all in
   * one resources secrets, configmaps, and downward API
   */
  projected?: V1ProjectedVolumeSource;
  /**
   * @member {V1QuobyteVolumeSource} [quobyte] Quobyte represents a
   * Quobyte mount on the host that shares a pod's lifetime
   */
  quobyte?: V1QuobyteVolumeSource;
  /**
   * @member {V1RBDVolumeSource} [rbd] RBD represents a Rados Block
   * Device mount on the host that shares a pod's lifetime. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
   */
  rbd?: V1RBDVolumeSource;
  /**
   * @member {V1ScaleIOVolumeSource} [scaleIO] ScaleIO represents a
   * ScaleIO persistent volume attached and mounted on Kubernetes nodes.
   */
  scaleIO?: V1ScaleIOVolumeSource;
  /**
   * @member {V1SecretVolumeSource} [secret] Secret represents a
   * secret that should populate this volume. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#secret
   */
  secret?: V1SecretVolumeSource;
  /**
   * @member {V1StorageOSVolumeSource} [storageos] StorageOS
   * represents a StorageOS volume attached and mounted on Kubernetes nodes.
   */
  storageos?: V1StorageOSVolumeSource;
  /**
   * @member {V1VsphereVirtualDiskVolumeSource} [vsphereVolume]
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets
   * host machine
   */
  vsphereVolume?: V1VsphereVirtualDiskVolumeSource;
}

/**
 * @interface
 * An interface representing V1PodSpec.
 * PodSpec is a description of a pod.
 *
 */
export interface V1PodSpec {
  /**
   * @member {number} [activeDeadlineSeconds] Optional duration in seconds the
   * pod may be active on the node relative to StartTime before the system will
   * actively try to mark it failed and kill associated containers. Value must
   * be a positive integer.
   */
  activeDeadlineSeconds?: number;
  /**
   * @member {V1Affinity} [affinity] If specified, the pod's
   * scheduling constraints
   */
  affinity?: V1Affinity;
  /**
   * @member {boolean} [automountServiceAccountToken]
   * AutomountServiceAccountToken indicates whether a service account token
   * should be automatically mounted.
   */
  automountServiceAccountToken?: boolean;
  /**
   * @member {V1Container[]} containers List of containers
   * belonging to the pod. Containers cannot currently be added or removed.
   * There must be at least one container in a Pod. Cannot be updated.
   */
  containers: V1Container[];
  /**
   * @member {V1PodDNSConfig} [dnsConfig] Specifies the DNS
   * parameters of a pod. Parameters specified here will be merged to the
   * generated DNS configuration based on DNSPolicy.
   */
  dnsConfig?: V1PodDNSConfig;
  /**
   * @member {string} [dnsPolicy] Set DNS policy for the pod. Defaults to
   * "ClusterFirst". Valid values are 'ClusterFirstWithHostNet',
   * 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
   * will be merged with the policy selected with DNSPolicy. To have DNS
   * options set along with hostNetwork, you have to specify DNS policy
   * explicitly to 'ClusterFirstWithHostNet'.
   */
  dnsPolicy?: string;
  /**
   * @member {V1HostAlias[]} [hostAliases] HostAliases is an
   * optional list of hosts and IPs that will be injected into the pod's hosts
   * file if specified. This is only valid for non-hostNetwork pods.
   */
  hostAliases?: V1HostAlias[];
  /**
   * @member {boolean} [hostIPC] Use the host's ipc namespace. Optional:
   * Default to false.
   */
  hostIPC?: boolean;
  /**
   * @member {boolean} [hostNetwork] Host networking requested for this pod.
   * Use the host's network namespace. If this option is set, the ports that
   * will be used must be specified. Default to false.
   */
  hostNetwork?: boolean;
  /**
   * @member {boolean} [hostPID] Use the host's pid namespace. Optional:
   * Default to false.
   */
  hostPID?: boolean;
  /**
   * @member {string} [hostname] Specifies the hostname of the Pod If not
   * specified, the pod's hostname will be set to a system-defined value.
   */
  hostname?: string;
  /**
   * @member {V1LocalObjectReference[]} [imagePullSecrets]
   * ImagePullSecrets is an optional list of references to secrets in the same
   * namespace to use for pulling any of the images used by this PodSpec. If
   * specified, these secrets will be passed to individual puller
   * implementations for them to use. For example, in the case of docker, only
   * DockerConfig type secrets are honored. More info:
   * https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
   */
  imagePullSecrets?: V1LocalObjectReference[];
  /**
   * @member {V1Container[]} [initContainers] List of
   * initialization containers belonging to the pod. Init containers are
   * executed in order prior to containers being started. If any init container
   * fails, the pod is considered to have failed and is handled according to
   * its restartPolicy. The name for an init container or normal container must
   * be unique among all containers. Init containers may not have Lifecycle
   * actions, Readiness probes, or Liveness probes. The resourceRequirements of
   * an init container are taken into account during scheduling by finding the
   * highest request/limit for each resource type, and then using the max of of
   * that value or the sum of the normal containers. Limits are applied to init
   * containers in a similar fashion. Init containers cannot currently be added
   * or removed. Cannot be updated. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
   */
  initContainers?: V1Container[];
  /**
   * @member {string} [nodeName] NodeName is a request to schedule this pod
   * onto a specific node. If it is non-empty, the scheduler simply schedules
   * this pod onto that node, assuming that it fits resource requirements.
   */
  nodeName?: string;
  /**
   * @member {{ [propertyName: string]: string }} [nodeSelector] NodeSelector
   * is a selector which must be true for the pod to fit on a node. Selector
   * which must match a node's labels for the pod to be scheduled on that node.
   * More info:
   * https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
   */
  nodeSelector?: { [propertyName: string]: string };
  /**
   * @member {number} [priority] The priority value. Various system components
   * use this field to find the priority of the pod. When Priority Admission
   * Controller is enabled, it prevents users from setting this field. The
   * admission controller populates this field from PriorityClassName. The
   * higher the value, the higher the priority.
   */
  priority?: number;
  /**
   * @member {string} [priorityClassName] If specified, indicates the pod's
   * priority. "system-node-critical" and "system-cluster-critical" are two
   * special keywords which indicate the highest priorities with the former
   * being the highest priority. Any other name must be defined by creating a
   * PriorityClass object with that name. If not specified, the pod priority
   * will be default or zero if there is no default.
   */
  priorityClassName?: string;
  /**
   * @member {V1PodReadinessGate[]} [readinessGates] If specified,
   * all readiness gates will be evaluated for pod readiness. A pod is ready
   * when all its containers are ready AND all conditions specified in the
   * readiness gates have status equal to "True" More info:
   * https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md
   */
  readinessGates?: V1PodReadinessGate[];
  /**
   * @member {string} [restartPolicy] Restart policy for all containers within
   * the pod. One of Always, OnFailure, Never. Default to Always. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
   */
  restartPolicy?: string;
  /**
   * @member {string} [schedulerName] If specified, the pod will be dispatched
   * by specified scheduler. If not specified, the pod will be dispatched by
   * default scheduler.
   */
  schedulerName?: string;
  /**
   * @member {V1PodSecurityContext} [securityContext]
   * SecurityContext holds pod-level security attributes and common container
   * settings. Optional: Defaults to empty.  See type description for default
   * values of each field.
   */
  securityContext?: V1PodSecurityContext;
  /**
   * @member {string} [serviceAccount] DeprecatedServiceAccount is a
   * depreciated alias for ServiceAccountName. Deprecated: Use
   * serviceAccountName instead.
   */
  serviceAccount?: string;
  /**
   * @member {string} [serviceAccountName] ServiceAccountName is the name of
   * the ServiceAccount to use to run this pod. More info:
   * https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
   */
  serviceAccountName?: string;
  /**
   * @member {boolean} [shareProcessNamespace] Share a single process namespace
   * between all of the containers in a pod. When this is set containers will
   * be able to view and signal processes from other containers in the same
   * pod, and the first process in each container will not be assigned PID 1.
   * HostPID and ShareProcessNamespace cannot both be set. Optional: Default to
   * false. This field is alpha-level and is honored only by servers that
   * enable the PodShareProcessNamespace feature.
   */
  shareProcessNamespace?: boolean;
  /**
   * @member {string} [subdomain] If specified, the fully qualified Pod
   * hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster
   * domain>". If not specified, the pod will not have a domainname at all.
   */
  subdomain?: string;
  /**
   * @member {number} [terminationGracePeriodSeconds] Optional duration in
   * seconds the pod needs to terminate gracefully. May be decreased in delete
   * request. Value must be non-negative integer. The value zero indicates
   * delete immediately. If this value is nil, the default grace period will be
   * used instead. The grace period is the duration in seconds after the
   * processes running in the pod are sent a termination signal and the time
   * when the processes are forcibly halted with a kill signal. Set this value
   * longer than the expected cleanup time for your process. Defaults to 30
   * seconds.
   */
  terminationGracePeriodSeconds?: number;
  /**
   * @member {V1Toleration[]} [tolerations] If specified, the pod's
   * tolerations.
   */
  tolerations?: V1Toleration[];
  /**
   * @member {V1Volume[]} [volumes] List of volumes that can be
   * mounted by containers belonging to the pod. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes
   */
  volumes?: V1Volume[];
}

/**
 * @interface
 * An interface representing V1PodTemplateSpec.
 * PodTemplateSpec describes the data a pod should have when created from a
 * template
 *
 */
export interface V1PodTemplateSpec {
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1PodSpec} [spec] Specification of the desired
   * behavior of the pod. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1PodSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams.
 * DeploymentTriggerImageChangeParams represents the parameters to the
 * ImageChange trigger.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams {
  /**
   * @member {boolean} [automatic] Automatic means that the detection of a new
   * tag value should result in an image update inside the pod template.
   */
  automatic?: boolean;
  /**
   * @member {string[]} [containerNames] ContainerNames is used to restrict tag
   * updates to the specified set of container names in a pod. If multiple
   * triggers point to the same containers, the resulting behavior is
   * undefined. Future API versions will make this a validation error. If
   * ContainerNames does not point to a valid container, the trigger will be
   * ignored. Future API versions will make this a validation error.
   */
  containerNames?: string[];
  /**
   * @member {V1ObjectReference} from From is a reference to an
   * image stream tag to watch for changes. From.Name is the only required
   * subfield - if From.Namespace is blank, the namespace of the current
   * deployment trigger will be used.
   */
  from: V1ObjectReference;
  /**
   * @member {string} [lastTriggeredImage] LastTriggeredImage is the last image
   * to be triggered.
   */
  lastTriggeredImage?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentTriggerPolicy.
 * DeploymentTriggerPolicy describes a policy for a single trigger that results
 * in a new deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentTriggerPolicy {
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams}
   * [imageChangeParams] ImageChangeParams represents the parameters for the
   * ImageChange trigger.
   */
  imageChangeParams?: Comgithubopenshiftapiappsv1DeploymentTriggerImageChangeParams;
  /**
   * @member {string} [type] Type of the trigger
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfigSpec.
 * DeploymentConfigSpec represents the desired state of the deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfigSpec {
  /**
   * @member {number} [minReadySeconds] MinReadySeconds is the minimum number
   * of seconds for which a newly created pod should be ready without any of
   * its container crashing, for it to be considered available. Defaults to 0
   * (pod will be considered available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {boolean} [paused] Paused indicates that the deployment config is
   * paused resulting in no new deployments on template changes or changes in
   * the template caused by other triggers.
   */
  paused?: boolean;
  /**
   * @member {number} [replicas] Replicas is the number of desired replicas.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] RevisionHistoryLimit is the number
   * of old ReplicationControllers to retain to allow for rollbacks. This field
   * is a pointer to allow for differentiation between an explicit zero and not
   * specified. Defaults to 10. (This only applies to DeploymentConfigs created
   * via the new group API resource, not the legacy resource.)
   */
  revisionHistoryLimit?: number;
  /**
   * @member {{ [propertyName: string]: string }} [selector] Selector is a
   * label query over pods that should match the Replicas count.
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentStrategy} [strategy]
   * Strategy describes how a deployment is executed.
   */
  strategy?: Comgithubopenshiftapiappsv1DeploymentStrategy;
  /**
   * @member {V1PodTemplateSpec} [template] Template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected.
   */
  template?: V1PodTemplateSpec;
  /**
   * @member {boolean} [test] Test ensures that this deployment config will
   * have zero replicas except while a deployment is running. This allows the
   * deployment config to be used as a continuous deployment test - triggering
   * on images, running the deployment, and then succeeding or failing. Post
   * strategy hooks and After actions can be used to integrate successful
   * deployment with an action.
   */
  test?: boolean;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentTriggerPolicy[]} [triggers]
   * Triggers determine how updates to a DeploymentConfig result in new
   * deployments. If no triggers are defined, a new deployment can only occur
   * as a result of an explicit client update to the DeploymentConfig with a
   * new LatestVersion. If null, defaults to having a config change trigger.
   */
  triggers?: Comgithubopenshiftapiappsv1DeploymentTriggerPolicy[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentDetails.
 * DeploymentDetails captures information about the causes of a deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentDetails {
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentCause[]} causes Causes are
   * extended data associated with all the causes for creating a new deployment
   */
  causes: Comgithubopenshiftapiappsv1DeploymentCause[];
  /**
   * @member {string} [message] Message is the user specified change message,
   * if this deployment was triggered manually by the user
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfigStatus.
 * DeploymentConfigStatus represents the current deployment state.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfigStatus {
  /**
   * @member {number} availableReplicas AvailableReplicas is the total number
   * of available pods targeted by this deployment config.
   */
  availableReplicas: number;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentCondition[]} [conditions]
   * Conditions represents the latest available observations of a deployment
   * config's current state.
   */
  conditions?: Comgithubopenshiftapiappsv1DeploymentCondition[];
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentDetails} [details] Details
   * are the reasons for the update to this deployment config. This could be
   * based on a change made by the user or caused by an automatic trigger
   */
  details?: Comgithubopenshiftapiappsv1DeploymentDetails;
  /**
   * @member {number} latestVersion LatestVersion is used to determine whether
   * the current deployment associated with a deployment config is out of sync.
   */
  latestVersion: number;
  /**
   * @member {number} observedGeneration ObservedGeneration is the most recent
   * generation observed by the deployment config controller.
   */
  observedGeneration: number;
  /**
   * @member {number} [readyReplicas] Total number of ready pods targeted by
   * this deployment.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas Replicas is the total number of pods targeted by
   * this deployment config.
   */
  replicas: number;
  /**
   * @member {number} unavailableReplicas UnavailableReplicas is the total
   * number of unavailable pods targeted by this deployment config.
   */
  unavailableReplicas: number;
  /**
   * @member {number} updatedReplicas UpdatedReplicas is the total number of
   * non-terminated pods targeted by this deployment config that have the
   * desired template spec.
   */
  updatedReplicas: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfig.
 * Deployment Configs define the template for a pod and manages deploying new
 * images or configuration changes. A single deployment configuration is
 * usually analogous to a single micro-service. Can support many different
 * deployment patterns, including full restart, customizable rolling updates,
 * and  fully custom behaviors, as well as pre- and post- deployment hooks.
 * Each individual deployment is represented as a replication controller.
 *
 * A deployment is "triggered" when its configuration is changed or a tag in an
 * Image Stream is changed. Triggers can be disabled to allow manual control
 * over a deployment. The "strategy" determines how the deployment is carried
 * out and may be changed at any time. The `latestVersion` field is updated
 * when a new deployment is triggered by any means.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfig {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentConfigSpec} spec Spec
   * represents a desired deployment state and how to deploy to it.
   */
  spec: Comgithubopenshiftapiappsv1DeploymentConfigSpec;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentConfigStatus} [status]
   * Status represents the current deployment state.
   */
  status?: Comgithubopenshiftapiappsv1DeploymentConfigStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfigList.
 * DeploymentConfigList is a collection of deployment configs.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfigList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentConfig[]} items Items is a
   * list of deployment configs
   */
  items: Comgithubopenshiftapiappsv1DeploymentConfig[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec.
 * DeploymentConfigRollbackSpec represents the options for rollback generation.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec {
  /**
   * @member {V1ObjectReference} from From points to a
   * ReplicationController which is a deployment.
   */
  from: V1ObjectReference;
  /**
   * @member {boolean} includeReplicationMeta IncludeReplicationMeta specifies
   * whether to include the replica count and selector.
   */
  includeReplicationMeta: boolean;
  /**
   * @member {boolean} includeStrategy IncludeStrategy specifies whether to
   * include the deployment Strategy.
   */
  includeStrategy: boolean;
  /**
   * @member {boolean} includeTemplate IncludeTemplate specifies whether to
   * include the PodTemplateSpec.
   */
  includeTemplate: boolean;
  /**
   * @member {boolean} includeTriggers IncludeTriggers specifies whether to
   * include config Triggers.
   */
  includeTriggers: boolean;
  /**
   * @member {number} [revision] Revision to rollback to. If set to 0, rollback
   * to the last revision.
   */
  revision?: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentConfigRollback.
 * DeploymentConfigRollback provides the input to rollback generation.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentConfigRollback {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} name Name of the deployment config that will be rolled
   * back.
   */
  name: string;
  /**
   * @member {Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec} spec
   * Spec defines the options to rollback generation.
   */
  spec: Comgithubopenshiftapiappsv1DeploymentConfigRollbackSpec;
  /**
   * @member {{ [propertyName: string]: string }} [updatedAnnotations]
   * UpdatedAnnotations is a set of new annotations that will be added in the
   * deployment config.
   */
  updatedAnnotations?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentLog.
 * DeploymentLog represents the logs for a deployment
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentLog {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiappsv1DeploymentRequest.
 * DeploymentRequest is a request to a deployment config for a new deployment.
 *
 */
export interface Comgithubopenshiftapiappsv1DeploymentRequest {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} [excludeTriggers] ExcludeTriggers instructs the
   * instantiator to avoid processing the specified triggers. This field
   * overrides the triggers from latest and allows clients to control specific
   * logic. This field is ignored if not specified.
   */
  excludeTriggers?: string[];
  /**
   * @member {boolean} force Force will try to force a new deployment to run.
   * If the deployment config is paused, then setting this to true will return
   * an Invalid error.
   */
  force: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {boolean} latest Latest will update the deployment config with the
   * latest state from all triggers.
   */
  latest: boolean;
  /**
   * @member {string} name Name of the deployment config for requesting a new
   * deployment.
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1AggregationRule.
 * AggregationRule describes how to locate ClusterRoles to aggregate into the
 * ClusterRole
 *
 */
export interface Iok8sapirbacv1AggregationRule {
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector[]}
   * [clusterRoleSelectors] ClusterRoleSelectors holds a list of selectors
   * which will be used to find ClusterRoles and create the rules. If any of
   * the selectors match, then the ClusterRole's permissions will be added
   */
  clusterRoleSelectors?: Iok8sapimachinerypkgapismetav1LabelSelector[];
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgruntimeRawExtension.
 * RawExtension is used to hold extensions in external versions.
 *
 * To use this, make a field which has RawExtension as its type in your
 * external, versioned struct, and Object in your internal struct. You also
 * need to register your various plugin types.
 *
 * // Internal package: type MyAPIObject struct {
 * runtime.TypeMeta `json:",inline"`
 * MyPlugin runtime.Object `json:"myPlugin"`
 * } type PluginA struct {
 * AOption string `json:"aOption"`
 * }
 *
 * // External package: type MyAPIObject struct {
 * runtime.TypeMeta `json:",inline"`
 * MyPlugin runtime.RawExtension `json:"myPlugin"`
 * } type PluginA struct {
 * AOption string `json:"aOption"`
 * }
 *
 * // On the wire, the JSON will look something like this: {
 * "kind":"MyAPIObject",
 * "apiVersion":"v1",
 * "myPlugin": {
 * "kind":"PluginA",
 * "aOption":"foo",
 * },
 * }
 *
 * So what happens? Decode first uses json or yaml to unmarshal the serialized
 * data into your external MyAPIObject. That causes the raw JSON to be stored,
 * but not unpacked. The next step is to copy (using pkg/conversion) into the
 * internal struct. The runtime package's DefaultScheme has conversion
 * functions installed which will unpack the JSON stored in RawExtension,
 * turning it into the correct object type, and storing it in the Object.
 * (TODO: In the case where the object is of an unknown type, a runtime.Unknown
 * object will be created and stored.)
 *
 */
export interface Iok8sapimachinerypkgruntimeRawExtension {
  /**
   * @member {Uint8Array} raw Raw is the underlying serialization of this
   * object.
   */
  raw: Uint8Array;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1PolicyRule.
 * PolicyRule holds information that describes a policy rule, but does not
 * contain information about who the rule applies to or which namespace the
 * rule applies to.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1PolicyRule {
  /**
   * @member {string[]} apiGroups APIGroups is the name of the APIGroup that
   * contains the resources.  If this field is empty, then both kubernetes and
   * origin API groups are assumed. That means that if an action is requested
   * against one of the enumerated resources in either the kubernetes or the
   * origin API group, the request will be allowed
   */
  apiGroups: string[];
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [attributeRestrictions]
   * AttributeRestrictions will vary depending on what the
   * Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer
   * does not recognize how to handle the AttributeRestrictions, the Authorizer
   * should report an error.
   */
  attributeRestrictions?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string[]} [nonResourceURLs] NonResourceURLsSlice is a set of
   * partial urls that a user should have access to.  *s are allowed, but only
   * as the full, final step in the path This name is intentionally different
   * than the internal type so that the DefaultConvert works nicely and because
   * the ordering may be different.
   */
  nonResourceURLs?: string[];
  /**
   * @member {string[]} [resourceNames] ResourceNames is an optional white list
   * of names that the rule applies to.  An empty set means that everything is
   * allowed.
   */
  resourceNames?: string[];
  /**
   * @member {string[]} resources Resources is a list of resources this rule
   * applies to.  ResourceAll represents all resources.
   */
  resources: string[];
  /**
   * @member {string[]} verbs Verbs is a list of Verbs that apply to ALL the
   * ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll
   * represents all kinds.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ClusterRole.
 * ClusterRole is a logical grouping of PolicyRules that can be referenced as a
 * unit by ClusterRoleBindings.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ClusterRole {
  /**
   * @member {Iok8sapirbacv1AggregationRule} [aggregationRule] AggregationRule
   * is an optional field that describes how to build the Rules for this
   * ClusterRole. If AggregationRule is set, then the Rules are controller
   * managed and direct changes to Rules will be stomped by the controller.
   */
  aggregationRule?: Iok8sapirbacv1AggregationRule;
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1PolicyRule[]} rules Rules
   * holds all the PolicyRules for this ClusterRole
   */
  rules: Comgithubopenshiftapiauthorizationv1PolicyRule[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ClusterRoleBinding.
 * ClusterRoleBinding references a ClusterRole, but not contain it.  It can
 * reference any ClusterRole in the same namespace or in the global namespace.
 * It adds who information via (Users and Groups) OR Subjects and namespace
 * information by which namespace it exists in. ClusterRoleBindings in a given
 * namespace only have effect in that namespace (excepting the master namespace
 * which has power in all namespaces).
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ClusterRoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} groupNames GroupNames holds all the groups directly
   * bound to the role. This field should only be specified when supporting
   * legacy clients and servers. See Subjects for further details.
   */
  groupNames: string[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ObjectReference} roleRef RoleRef can only reference
   * the current namespace and the global namespace. If the ClusterRoleRef
   * cannot be resolved, the Authorizer must return an error. Since Policy is a
   * singleton, this is sufficient knowledge to locate a role.
   */
  roleRef: V1ObjectReference;
  /**
   * @member {V1ObjectReference[]} subjects Subjects hold object
   * references to authorize with this rule. This field is ignored if UserNames
   * or GroupNames are specified to support legacy clients and servers. Thus
   * newer clients that do not need to support backwards compatibility should
   * send only fully qualified Subjects and should omit the UserNames and
   * GroupNames fields. Clients that need to support backwards compatibility
   * can use this field to build the UserNames and GroupNames.
   */
  subjects: V1ObjectReference[];
  /**
   * @member {string[]} userNames UserNames holds all the usernames directly
   * bound to the role. This field should only be specified when supporting
   * legacy clients and servers. See Subjects for further details.
   */
  userNames: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList.
 * ClusterRoleBindingList is a collection of ClusterRoleBindings
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1ClusterRoleBinding[]} items
   * Items is a list of ClusterRoleBindings
   */
  items: Comgithubopenshiftapiauthorizationv1ClusterRoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ClusterRoleList.
 * ClusterRoleList is a collection of ClusterRoles
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ClusterRoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1ClusterRole[]} items Items is
   * a list of ClusterRoles
   */
  items: Comgithubopenshiftapiauthorizationv1ClusterRole[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1GroupRestriction.
 * GroupRestriction matches a group either by a string match on the group name
 * or a label selector applied to group labels.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1GroupRestriction {
  /**
   * @member {string[]} groups Groups is a list of groups used to match against
   * an individual user's groups. If the user is a member of one of the
   * whitelisted groups, the user is allowed to be bound to a role.
   */
  groups: string[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector[]} labels Selectors
   * specifies a list of label selectors over group labels.
   */
  labels: Iok8sapimachinerypkgapismetav1LabelSelector[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview.
 * LocalResourceAccessReview is a means to request a list of which users and
 * groups are authorized to perform the action specified by spec in a
 * particular namespace
 *
 */
export interface Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [content] Content is the
   * actual content of the request for create and update
   */
  content?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {boolean} isNonResourceURL IsNonResourceURL is true if this is a
   * request for a non-resource URL (outside of the resource hieraarchy)
   */
  isNonResourceURL: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} namespace Namespace is the namespace of the action being
   * requested.  Currently, there is no distinction between no namespace and
   * all namespaces
   */
  namespace: string;
  /**
   * @member {string} path Path is the path of a non resource URL
   */
  path: string;
  /**
   * @member {string} resource Resource is one of the existing resource types
   */
  resource: string;
  /**
   * @member {string} resourceAPIGroup Group is the API group of the resource
   * Serialized as resourceAPIGroup to avoid confusion with the 'groups' field
   * when inlined
   */
  resourceAPIGroup: string;
  /**
   * @member {string} resourceAPIVersion Version is the API version of the
   * resource Serialized as resourceAPIVersion to avoid confusion with
   * TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined
   */
  resourceAPIVersion: string;
  /**
   * @member {string} resourceName ResourceName is the name of the resource
   * being requested for a "get" or deleted for a "delete"
   */
  resourceName: string;
  /**
   * @member {string} verb Verb is one of: get, list, watch, create, update,
   * delete
   */
  verb: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview.
 * LocalSubjectAccessReview is an object for requesting information about
 * whether a user or group can perform an action in a particular namespace
 *
 */
export interface Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [content] Content is the
   * actual content of the request for create and update
   */
  content?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string[]} groups Groups is optional.  Groups is the list of
   * groups to which the User belongs.
   */
  groups: string[];
  /**
   * @member {boolean} isNonResourceURL IsNonResourceURL is true if this is a
   * request for a non-resource URL (outside of the resource hieraarchy)
   */
  isNonResourceURL: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} namespace Namespace is the namespace of the action being
   * requested.  Currently, there is no distinction between no namespace and
   * all namespaces
   */
  namespace: string;
  /**
   * @member {string} path Path is the path of a non resource URL
   */
  path: string;
  /**
   * @member {string} resource Resource is one of the existing resource types
   */
  resource: string;
  /**
   * @member {string} resourceAPIGroup Group is the API group of the resource
   * Serialized as resourceAPIGroup to avoid confusion with the 'groups' field
   * when inlined
   */
  resourceAPIGroup: string;
  /**
   * @member {string} resourceAPIVersion Version is the API version of the
   * resource Serialized as resourceAPIVersion to avoid confusion with
   * TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined
   */
  resourceAPIVersion: string;
  /**
   * @member {string} resourceName ResourceName is the name of the resource
   * being requested for a "get" or deleted for a "delete"
   */
  resourceName: string;
  /**
   * @member {string[]} scopes Scopes to use for the evaluation.  Empty means
   * "use the unscoped (full) permissions of the user/groups". Nil for a
   * self-SAR, means "use the scopes on this request". Nil for a regular SAR,
   * means the same as empty.
   */
  scopes: string[];
  /**
   * @member {string} user User is optional.  If both User and Groups are
   * empty, the current authenticated user is used.
   */
  user: string;
  /**
   * @member {string} verb Verb is one of: get, list, watch, create, update,
   * delete
   */
  verb: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ResourceAccessReview.
 * ResourceAccessReview is a means to request a list of which users and groups
 * are authorized to perform the action specified by spec
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ResourceAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [content] Content is the
   * actual content of the request for create and update
   */
  content?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {boolean} isNonResourceURL IsNonResourceURL is true if this is a
   * request for a non-resource URL (outside of the resource hieraarchy)
   */
  isNonResourceURL: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} namespace Namespace is the namespace of the action being
   * requested.  Currently, there is no distinction between no namespace and
   * all namespaces
   */
  namespace: string;
  /**
   * @member {string} path Path is the path of a non resource URL
   */
  path: string;
  /**
   * @member {string} resource Resource is one of the existing resource types
   */
  resource: string;
  /**
   * @member {string} resourceAPIGroup Group is the API group of the resource
   * Serialized as resourceAPIGroup to avoid confusion with the 'groups' field
   * when inlined
   */
  resourceAPIGroup: string;
  /**
   * @member {string} resourceAPIVersion Version is the API version of the
   * resource Serialized as resourceAPIVersion to avoid confusion with
   * TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined
   */
  resourceAPIVersion: string;
  /**
   * @member {string} resourceName ResourceName is the name of the resource
   * being requested for a "get" or deleted for a "delete"
   */
  resourceName: string;
  /**
   * @member {string} verb Verb is one of: get, list, watch, create, update,
   * delete
   */
  verb: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1Role.
 * Role is a logical grouping of PolicyRules that can be referenced as a unit
 * by RoleBindings.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1Role {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1PolicyRule[]} rules Rules
   * holds all the PolicyRules for this Role
   */
  rules: Comgithubopenshiftapiauthorizationv1PolicyRule[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleBinding.
 * RoleBinding references a Role, but not contain it.  It can reference any
 * Role in the same namespace or in the global namespace. It adds who
 * information via (Users and Groups) OR Subjects and namespace information by
 * which namespace it exists in. RoleBindings in a given namespace only have
 * effect in that namespace (excepting the master namespace which has power in
 * all namespaces).
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} groupNames GroupNames holds all the groups directly
   * bound to the role. This field should only be specified when supporting
   * legacy clients and servers. See Subjects for further details.
   */
  groupNames: string[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ObjectReference} roleRef RoleRef can only reference
   * the current namespace and the global namespace. If the RoleRef cannot be
   * resolved, the Authorizer must return an error. Since Policy is a
   * singleton, this is sufficient knowledge to locate a role.
   */
  roleRef: V1ObjectReference;
  /**
   * @member {V1ObjectReference[]} subjects Subjects hold object
   * references to authorize with this rule. This field is ignored if UserNames
   * or GroupNames are specified to support legacy clients and servers. Thus
   * newer clients that do not need to support backwards compatibility should
   * send only fully qualified Subjects and should omit the UserNames and
   * GroupNames fields. Clients that need to support backwards compatibility
   * can use this field to build the UserNames and GroupNames.
   */
  subjects: V1ObjectReference[];
  /**
   * @member {string[]} userNames UserNames holds all the usernames directly
   * bound to the role. This field should only be specified when supporting
   * legacy clients and servers. See Subjects for further details.
   */
  userNames: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleBindingList.
 * RoleBindingList is a collection of RoleBindings
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1RoleBinding[]} items Items is
   * a list of RoleBindings
   */
  items: Comgithubopenshiftapiauthorizationv1RoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ServiceAccountReference.
 * ServiceAccountReference specifies a service account and namespace by their
 * names.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ServiceAccountReference {
  /**
   * @member {string} name Name is the name of the service account.
   */
  name: string;
  /**
   * @member {string} namespace Namespace is the namespace of the service
   * account.  Service accounts from inside the whitelisted namespaces are
   * allowed to be bound to roles.  If Namespace is empty, then the namespace
   * of the RoleBindingRestriction in which the ServiceAccountReference is
   * embedded is used.
   */
  namespace: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction.
 * ServiceAccountRestriction matches a service account by a string match on
 * either the service-account name or the name of the service account's
 * namespace.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction {
  /**
   * @member {string[]} namespaces Namespaces specifies a list of literal
   * namespace names.
   */
  namespaces: string[];
  /**
   * @member {Comgithubopenshiftapiauthorizationv1ServiceAccountReference[]}
   * serviceaccounts ServiceAccounts specifies a list of literal
   * service-account names.
   */
  serviceaccounts: Comgithubopenshiftapiauthorizationv1ServiceAccountReference[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1UserRestriction.
 * UserRestriction matches a user either by a string match on the user name, a
 * string match on the name of a group to which the user belongs, or a label
 * selector applied to the user labels.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1UserRestriction {
  /**
   * @member {string[]} groups Groups specifies a list of literal group names.
   */
  groups: string[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector[]} labels Selectors
   * specifies a list of label selectors over user labels.
   */
  labels: Iok8sapimachinerypkgapismetav1LabelSelector[];
  /**
   * @member {string[]} users Users specifies a list of literal user names.
   */
  users: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec.
 * RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one
 * field must be non-nil.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec {
  /**
   * @member {Comgithubopenshiftapiauthorizationv1GroupRestriction}
   * grouprestriction GroupRestriction matches against group subjects.
   */
  grouprestriction: Comgithubopenshiftapiauthorizationv1GroupRestriction;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction}
   * serviceaccountrestriction ServiceAccountRestriction matches against
   * service-account subjects.
   */
  serviceaccountrestriction: Comgithubopenshiftapiauthorizationv1ServiceAccountRestriction;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1UserRestriction}
   * userrestriction UserRestriction matches against user subjects.
   */
  userrestriction: Comgithubopenshiftapiauthorizationv1UserRestriction;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleBindingRestriction.
 * RoleBindingRestriction is an object that can be matched against a subject
 * (user, group, or service account) to determine whether rolebindings on that
 * subject are allowed in the namespace to which the RoleBindingRestriction
 * belongs.  If any one of those RoleBindingRestriction objects matches a
 * subject, rolebindings on that subject in the namespace are allowed.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleBindingRestriction {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} metadata Standard
   * object's metadata.
   */
  metadata: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec}
   * spec Spec defines the matcher.
   */
  spec: Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList.
 * RoleBindingRestrictionList is a collection of RoleBindingRestriction
 * objects.
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1RoleBindingRestriction[]}
   * items Items is a list of RoleBindingRestriction objects.
   */
  items: Comgithubopenshiftapiauthorizationv1RoleBindingRestriction[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1RoleList.
 * RoleList is a collection of Roles
 *
 */
export interface Comgithubopenshiftapiauthorizationv1RoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1Role[]} items Items is a list
   * of Roles
   */
  items: Comgithubopenshiftapiauthorizationv1Role[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec.
 * SelfSubjectRulesReviewSpec adds information about how to conduct the check
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec {
  /**
   * @member {string[]} scopes Scopes to use for the evaluation.  Empty means
   * "use the unscoped (full) permissions of the user/groups". Nil means "use
   * the scopes on this request".
   */
  scopes: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus.
 * SubjectRulesReviewStatus is contains the result of a rules check
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus {
  /**
   * @member {string} [evaluationError] EvaluationError can appear in
   * combination with Rules.  It means some error happened during evaluation
   * that may have prevented additional rules from being populated.
   */
  evaluationError?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1PolicyRule[]} rules Rules is
   * the list of rules (no particular sort) that are allowed for the subject
   */
  rules: Comgithubopenshiftapiauthorizationv1PolicyRule[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview.
 * SelfSubjectRulesReview is a resource you can create to determine which
 * actions you can perform in a namespace
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec}
   * spec Spec adds information about how to conduct the check
   */
  spec: Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReviewSpec;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus}
   * [status] Status is completed by the server to tell which permissions you
   * have
   */
  status?: Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SubjectAccessReview.
 * SubjectAccessReview is an object for requesting information about whether a
 * user or group can perform an action
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [content] Content is the
   * actual content of the request for create and update
   */
  content?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string[]} groups GroupsSlice is optional. Groups is the list of
   * groups to which the User belongs.
   */
  groups: string[];
  /**
   * @member {boolean} isNonResourceURL IsNonResourceURL is true if this is a
   * request for a non-resource URL (outside of the resource hieraarchy)
   */
  isNonResourceURL: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} namespace Namespace is the namespace of the action being
   * requested.  Currently, there is no distinction between no namespace and
   * all namespaces
   */
  namespace: string;
  /**
   * @member {string} path Path is the path of a non resource URL
   */
  path: string;
  /**
   * @member {string} resource Resource is one of the existing resource types
   */
  resource: string;
  /**
   * @member {string} resourceAPIGroup Group is the API group of the resource
   * Serialized as resourceAPIGroup to avoid confusion with the 'groups' field
   * when inlined
   */
  resourceAPIGroup: string;
  /**
   * @member {string} resourceAPIVersion Version is the API version of the
   * resource Serialized as resourceAPIVersion to avoid confusion with
   * TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined
   */
  resourceAPIVersion: string;
  /**
   * @member {string} resourceName ResourceName is the name of the resource
   * being requested for a "get" or deleted for a "delete"
   */
  resourceName: string;
  /**
   * @member {string[]} scopes Scopes to use for the evaluation.  Empty means
   * "use the unscoped (full) permissions of the user/groups". Nil for a
   * self-SAR, means "use the scopes on this request". Nil for a regular SAR,
   * means the same as empty.
   */
  scopes: string[];
  /**
   * @member {string} user User is optional. If both User and Groups are empty,
   * the current authenticated user is used.
   */
  user: string;
  /**
   * @member {string} verb Verb is one of: get, list, watch, create, update,
   * delete
   */
  verb: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec.
 * SubjectRulesReviewSpec adds information about how to conduct the check
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec {
  /**
   * @member {string[]} groups Groups is optional.  Groups is the list of
   * groups to which the User belongs.  At least one of User and Groups must be
   * specified.
   */
  groups: string[];
  /**
   * @member {string[]} scopes Scopes to use for the evaluation.  Empty means
   * "use the unscoped (full) permissions of the user/groups".
   */
  scopes: string[];
  /**
   * @member {string} user User is optional.  At least one of User and Groups
   * must be specified.
   */
  user: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiauthorizationv1SubjectRulesReview.
 * SubjectRulesReview is a resource you can create to determine which actions
 * another user can perform in a namespace
 *
 */
export interface Comgithubopenshiftapiauthorizationv1SubjectRulesReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec} spec
   * Spec adds information about how to conduct the check
   */
  spec: Comgithubopenshiftapiauthorizationv1SubjectRulesReviewSpec;
  /**
   * @member {Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus}
   * [status] Status is completed by the server to tell which permissions you
   * have
   */
  status?: Comgithubopenshiftapiauthorizationv1SubjectRulesReviewStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BinaryBuildSource.
 * BinaryBuildSource describes a binary file to be used for the Docker and
 * Source build strategies, where the file will be extracted and used as the
 * build source.
 *
 */
export interface Comgithubopenshiftapibuildv1BinaryBuildSource {
  /**
   * @member {string} [asFile] asFile indicates that the provided binary input
   * should be considered a single file within the build input. For example,
   * specifying "webapp.war" would place the provided binary as `/webapp.war`
   * for the builder. If left empty, the Docker and Source build strategies
   * assume this file is a zip, tar, or tar.gz file and extract it as the
   * source. The custom strategy receives this binary as standard input. This
   * filename may not contain slashes or be '..' or '.'.
   */
  asFile?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SourceControlUser.
 * SourceControlUser defines the identity of a user of source control
 *
 */
export interface Comgithubopenshiftapibuildv1SourceControlUser {
  /**
   * @member {string} [email] email of the source control user
   */
  email?: string;
  /**
   * @member {string} [name] name of the source control user
   */
  name?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1GitSourceRevision.
 * GitSourceRevision is the commit information from a git source for a build
 *
 */
export interface Comgithubopenshiftapibuildv1GitSourceRevision {
  /**
   * @member {Comgithubopenshiftapibuildv1SourceControlUser} [author] author is
   * the author of a specific commit
   */
  author?: Comgithubopenshiftapibuildv1SourceControlUser;
  /**
   * @member {string} [commit] commit is the commit hash identifying a specific
   * commit
   */
  commit?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceControlUser} [committer]
   * committer is the committer of a specific commit
   */
  committer?: Comgithubopenshiftapibuildv1SourceControlUser;
  /**
   * @member {string} [message] message is the description of a specific commit
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SourceRevision.
 * SourceRevision is the revision or commit information from the source for the
 * build
 *
 */
export interface Comgithubopenshiftapibuildv1SourceRevision {
  /**
   * @member {Comgithubopenshiftapibuildv1GitSourceRevision} [git] Git contains
   * information about git-based build source
   */
  git?: Comgithubopenshiftapibuildv1GitSourceRevision;
  /**
   * @member {string} type type of the build source, may be one of 'Source',
   * 'Dockerfile', 'Binary', or 'Images'
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BitbucketWebHookCause.
 * BitbucketWebHookCause has information about a Bitbucket webhook that
 * triggered a build.
 *
 */
export interface Comgithubopenshiftapibuildv1BitbucketWebHookCause {
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] Revision
   * is the git source revision information of the trigger.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [secret] Secret is the obfuscated webhook secret that
   * triggered a build.
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ImageLabel.
 * ImageLabel represents a label applied to the resulting image.
 *
 */
export interface Comgithubopenshiftapibuildv1ImageLabel {
  /**
   * @member {string} name name defines the name of the label. It must have
   * non-zero length.
   */
  name: string;
  /**
   * @member {string} [value] value defines the literal value of the label.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildOutput.
 * BuildOutput is input to a build strategy and describes the container image
 * that the strategy should produce.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildOutput {
  /**
   * @member {Comgithubopenshiftapibuildv1ImageLabel[]} [imageLabels]
   * imageLabels define a list of labels that are applied to the resulting
   * image. If there are multiple labels with the same name then the last one
   * in the list is used.
   */
  imageLabels?: Comgithubopenshiftapibuildv1ImageLabel[];
  /**
   * @member {V1LocalObjectReference} [pushSecret] PushSecret is
   * the name of a Secret that would be used for setting up the authentication
   * for executing the Docker push to authentication enabled Docker Registry
   * (or Docker Hub).
   */
  pushSecret?: V1LocalObjectReference;
  /**
   * @member {V1ObjectReference} [to] to defines an optional
   * location to push the output of this build to. Kind must be one of
   * 'ImageStreamTag' or 'DockerImage'. This value will be used to look up a
   * container image repository to push to. In the case of an ImageStreamTag,
   * the ImageStreamTag will be looked for in the namespace of the build unless
   * Namespace is specified.
   */
  to?: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildPostCommitSpec.
 * A BuildPostCommitSpec holds a build post commit hook specification. The hook
 * executes a command in a temporary container running the build output image,
 * immediately after the last layer of the image is committed and before the
 * image is pushed to a registry. The command is executed with the current
 * working directory ($PWD) set to the image's WORKDIR.
 *
 * The build will be marked as failed if the hook execution fails. It will fail
 * if the script or command return a non-zero exit code, or if there is any
 * other error related to starting the temporary container.
 *
 * There are five different ways to configure the hook. As an example, all
 * forms below are equivalent and will execute `rake test --verbose`.
 *
 * 1. Shell script:
 *
 * "postCommit": {
 * "script": "rake test --verbose",
 * }
 *
 * The above is a convenient form which is equivalent to:
 *
 * "postCommit": {
 * "command": ["/bin/sh", "-ic"],
 * "args":    ["rake test --verbose"]
 * }
 *
 * 2. A command as the image entrypoint:
 *
 * "postCommit": {
 * "commit": ["rake", "test", "--verbose"]
 * }
 *
 * Command overrides the image entrypoint in the exec form, as documented in
 * Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.
 *
 * 3. Pass arguments to the default entrypoint:
 *
 * "postCommit": {
 * "args": ["rake", "test", "--verbose"]
 * }
 *
 * This form is only useful if the image entrypoint can handle arguments.
 *
 * 4. Shell script with arguments:
 *
 * "postCommit": {
 * "script": "rake test $1",
 * "args":   ["--verbose"]
 * }
 *
 * This form is useful if you need to pass arguments that would otherwise be
 * hard to quote properly in the shell script. In the script, $0 will be
 * "/bin/sh" and $1, $2, etc, are the positional arguments from Args.
 *
 * 5. Command with arguments:
 *
 * "postCommit": {
 * "command": ["rake", "test"],
 * "args":    ["--verbose"]
 * }
 *
 * This form is equivalent to appending the arguments to the Command slice.
 *
 * It is invalid to provide both Script and Command simultaneously. If none of
 * the fields are specified, the hook is not executed.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildPostCommitSpec {
  /**
   * @member {string[]} [args] args is a list of arguments that are provided to
   * either Command, Script or the container image's default entrypoint. The
   * arguments are placed immediately after the command to be run.
   */
  args?: string[];
  /**
   * @member {string[]} [command] command is the command to run. It may not be
   * specified with Script. This might be needed if the image doesn't have
   * `/bin/sh`, or if you do not want to use a shell. In all other cases, using
   * Script might be more convenient.
   */
  command?: string[];
  /**
   * @member {string} [script] script is a shell script to be run with `/bin/sh
   * -ic`. It may not be specified with Command. Use Script when a shell script
   * is appropriate to execute the post build hook, for example for running
   * unit tests with `rake test`. If you need control over the image
   * entrypoint, or if the image does not have `/bin/sh`, use Command and/or
   * Args. The `-i` flag is needed to support CentOS and RHEL images that use
   * Software Collections (SCL), in order to have the appropriate collections
   * enabled in the shell. E.g., in the Ruby image, this is necessary to make
   * `ruby`, `bundle` and other binaries available in the PATH.
   */
  script?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ConfigMapBuildSource.
 * ConfigMapBuildSource describes a configmap and its destination directory
 * that will be used only at the build time. The content of the configmap
 * referenced here will be copied into the destination directory instead of
 * mounting.
 *
 */
export interface Comgithubopenshiftapibuildv1ConfigMapBuildSource {
  /**
   * @member {V1LocalObjectReference} configMap configMap is a
   * reference to an existing configmap that you want to use in your build.
   */
  configMap: V1LocalObjectReference;
  /**
   * @member {string} [destinationDir] destinationDir is the directory where
   * the files from the configmap should be available for the build time. For
   * the Source build strategy, these will be injected into a container where
   * the assemble script runs. For the container image build strategy, these
   * will be copied into the build directory, where the Dockerfile is located,
   * so users can ADD or COPY them during container image build.
   */
  destinationDir?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1GitBuildSource.
 * GitBuildSource defines the parameters of a Git SCM
 *
 */
export interface Comgithubopenshiftapibuildv1GitBuildSource {
  /**
   * @member {string} [httpProxy] httpProxy is a proxy used to reach the git
   * repository over http
   */
  httpProxy?: string;
  /**
   * @member {string} [httpsProxy] httpsProxy is a proxy used to reach the git
   * repository over https
   */
  httpsProxy?: string;
  /**
   * @member {string} [noProxy] noProxy is the list of domains for which the
   * proxy should not be used
   */
  noProxy?: string;
  /**
   * @member {string} [ref] ref is the branch/tag/ref to build.
   */
  ref?: string;
  /**
   * @member {string} uri uri points to the source that will be built. The
   * structure of the source will depend on the type of build to run
   */
  uri: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ImageSourcePath.
 * ImageSourcePath describes a path to be copied from a source image and its
 * destination within the build directory.
 *
 */
export interface Comgithubopenshiftapibuildv1ImageSourcePath {
  /**
   * @member {string} destinationDir destinationDir is the relative directory
   * within the build directory where files copied from the image are placed.
   */
  destinationDir: string;
  /**
   * @member {string} sourcePath sourcePath is the absolute path of the file or
   * directory inside the image to copy to the build directory.  If the source
   * path ends in /. then the content of the directory will be copied, but the
   * directory itself will not be created at the destination.
   */
  sourcePath: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ImageSource.
 * ImageSource is used to describe build source that will be extracted from an
 * image or used during a multi stage build. A reference of type
 * ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret
 * can be specified to pull the image from an external registry or override the
 * default service account secret if pulling from the internal registry. Image
 * sources can either be used to extract content from an image and place it
 * into the build context along with the repository source, or used directly
 * during a multi-stage container image build to allow content to be copied
 * without overwriting the contents of the repository source (see the 'paths'
 * and 'as' fields).
 *
 */
export interface Comgithubopenshiftapibuildv1ImageSource {
  /**
   * @member {string[]} [as] A list of image names that this source will be
   * used in place of during a multi-stage container image build. For instance,
   * a Dockerfile that uses "COPY --from=nginx:latest" will first check for an
   * image source that has "nginx:latest" in this field before attempting to
   * pull directly. If the Dockerfile does not reference an image source it is
   * ignored. This field and paths may both be set, in which case the contents
   * will be used twice.
   */
  as?: string[];
  /**
   * @member {V1ObjectReference} from from is a reference to an
   * ImageStreamTag, ImageStreamImage, or DockerImage to copy source from.
   */
  from: V1ObjectReference;
  /**
   * @member {Comgithubopenshiftapibuildv1ImageSourcePath[]} [paths] paths is a
   * list of source and destination paths to copy from the image. This content
   * will be copied into the build context prior to starting the build. If no
   * paths are set, the build context will not be altered.
   */
  paths?: Comgithubopenshiftapibuildv1ImageSourcePath[];
  /**
   * @member {V1LocalObjectReference} [pullSecret] pullSecret is a
   * reference to a secret to be used to pull the image from a registry If the
   * image is pulled from the OpenShift registry, this field does not need to
   * be set.
   */
  pullSecret?: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SecretBuildSource.
 * SecretBuildSource describes a secret and its destination directory that will
 * be used only at the build time. The content of the secret referenced here
 * will be copied into the destination directory instead of mounting.
 *
 */
export interface Comgithubopenshiftapibuildv1SecretBuildSource {
  /**
   * @member {string} [destinationDir] destinationDir is the directory where
   * the files from the secret should be available for the build time. For the
   * Source build strategy, these will be injected into a container where the
   * assemble script runs. Later, when the script finishes, all files injected
   * will be truncated to zero length. For the container image build strategy,
   * these will be copied into the build directory, where the Dockerfile is
   * located, so users can ADD or COPY them during container image build.
   */
  destinationDir?: string;
  /**
   * @member {V1LocalObjectReference} secret secret is a reference
   * to an existing secret that you want to use in your build.
   */
  secret: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildSource.
 * BuildSource is the SCM used for the build.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildSource {
  /**
   * @member {Comgithubopenshiftapibuildv1BinaryBuildSource} [binary] binary
   * builds accept a binary as their input. The binary is generally assumed to
   * be a tar, gzipped tar, or zip file depending on the strategy. For
   * container image builds, this is the build context and an optional
   * Dockerfile may be specified to override any Dockerfile in the build
   * context. For Source builds, this is assumed to be an archive as described
   * above. For Source and container image builds, if binary.asFile is set the
   * build will receive a directory with a single file. contextDir may be used
   * when an archive is provided. Custom builds will receive this binary as
   * input on STDIN.
   */
  binary?: Comgithubopenshiftapibuildv1BinaryBuildSource;
  /**
   * @member {Comgithubopenshiftapibuildv1ConfigMapBuildSource[]} [configMaps]
   * configMaps represents a list of configMaps and their destinations that
   * will be used for the build.
   */
  configMaps?: Comgithubopenshiftapibuildv1ConfigMapBuildSource[];
  /**
   * @member {string} [contextDir] contextDir specifies the sub-directory where
   * the source code for the application exists. This allows to have buildable
   * sources in directory other than root of repository.
   */
  contextDir?: string;
  /**
   * @member {string} [dockerfile] dockerfile is the raw contents of a
   * Dockerfile which should be built. When this option is specified, the FROM
   * may be modified based on your strategy base image and additional ENV
   * stanzas from your strategy environment will be added after the FROM, but
   * before the rest of your Dockerfile stanzas. The Dockerfile source type may
   * be used with other options like git - in those cases the Git repo will
   * have any innate Dockerfile replaced in the context dir.
   */
  dockerfile?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1GitBuildSource} [git] git contains
   * optional information about git build source
   */
  git?: Comgithubopenshiftapibuildv1GitBuildSource;
  /**
   * @member {Comgithubopenshiftapibuildv1ImageSource[]} [images] images
   * describes a set of images to be used to provide source for the build
   */
  images?: Comgithubopenshiftapibuildv1ImageSource[];
  /**
   * @member {Comgithubopenshiftapibuildv1SecretBuildSource[]} [secrets]
   * secrets represents a list of secrets and their destinations that will be
   * used only for the build.
   */
  secrets?: Comgithubopenshiftapibuildv1SecretBuildSource[];
  /**
   * @member {V1LocalObjectReference} [sourceSecret] sourceSecret
   * is the name of a Secret that would be used for setting up the
   * authentication for cloning private repository. The secret contains valid
   * credentials for remote repository, where the data's key represent the
   * authentication method to be used and value is the base64 encoded
   * credentials. Supported auth methods are: ssh-privatekey.
   */
  sourceSecret?: V1LocalObjectReference;
  /**
   * @member {string} type type of build input to accept
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SecretSpec.
 * SecretSpec specifies a secret to be included in a build pod and its
 * corresponding mount point
 *
 */
export interface Comgithubopenshiftapibuildv1SecretSpec {
  /**
   * @member {string} mountPath mountPath is the path at which to mount the
   * secret
   */
  mountPath: string;
  /**
   * @member {V1LocalObjectReference} secretSource secretSource is
   * a reference to the secret
   */
  secretSource: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1CustomBuildStrategy.
 * CustomBuildStrategy defines input parameters specific to Custom build.
 *
 */
export interface Comgithubopenshiftapibuildv1CustomBuildStrategy {
  /**
   * @member {string} [buildAPIVersion] buildAPIVersion is the requested API
   * version for the Build object serialized and passed to the custom builder
   */
  buildAPIVersion?: string;
  /**
   * @member {V1EnvVar[]} [env] env contains additional environment
   * variables you want to pass into a builder container.
   */
  env?: V1EnvVar[];
  /**
   * @member {boolean} [exposeDockerSocket] exposeDockerSocket will allow
   * running Docker commands (and build container images) from inside the
   * container.
   */
  exposeDockerSocket?: boolean;
  /**
   * @member {boolean} [forcePull] forcePull describes if the controller should
   * configure the build pod to always pull the images for the builder or only
   * pull if it is not present locally
   */
  forcePull?: boolean;
  /**
   * @member {V1ObjectReference} from from is reference to an
   * DockerImage, ImageStreamTag, or ImageStreamImage from which the container
   * image should be pulled
   */
  from: V1ObjectReference;
  /**
   * @member {V1LocalObjectReference} [pullSecret] pullSecret is
   * the name of a Secret that would be used for setting up the authentication
   * for pulling the container images from the private Docker registries
   */
  pullSecret?: V1LocalObjectReference;
  /**
   * @member {Comgithubopenshiftapibuildv1SecretSpec[]} [secrets] secrets is a
   * list of additional secrets that will be included in the build pod
   */
  secrets?: Comgithubopenshiftapibuildv1SecretSpec[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1DockerBuildStrategy.
 * DockerBuildStrategy defines input parameters specific to container image
 * build.
 *
 */
export interface Comgithubopenshiftapibuildv1DockerBuildStrategy {
  /**
   * @member {V1EnvVar[]} [buildArgs] buildArgs contains build
   * arguments that will be resolved in the Dockerfile.  See
   * https://docs.docker.com/engine/reference/builder/#/arg for more details.
   */
  buildArgs?: V1EnvVar[];
  /**
   * @member {string} [dockerfilePath] dockerfilePath is the path of the
   * Dockerfile that will be used to build the container image, relative to the
   * root of the context (contextDir).
   */
  dockerfilePath?: string;
  /**
   * @member {V1EnvVar[]} [env] env contains additional environment
   * variables you want to pass into a builder container.
   */
  env?: V1EnvVar[];
  /**
   * @member {boolean} [forcePull] forcePull describes if the builder should
   * pull the images from registry prior to building.
   */
  forcePull?: boolean;
  /**
   * @member {V1ObjectReference} [from] from is reference to an
   * DockerImage, ImageStreamTag, or ImageStreamImage from which the container
   * image should be pulled the resulting image will be used in the FROM line
   * of the Dockerfile for this build.
   */
  from?: V1ObjectReference;
  /**
   * @member {string} [imageOptimizationPolicy] imageOptimizationPolicy
   * describes what optimizations the system can use when building images to
   * reduce the final size or time spent building the image. The default policy
   * is 'None' which means the final build image will be equivalent to an image
   * created by the container image build API. The experimental policy
   * 'SkipLayers' will avoid commiting new layers in between each image step,
   * and will fail if the Dockerfile cannot provide compatibility with the
   * 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is
   * the same as 'SkipLayers' but simply warns if compatibility cannot be
   * preserved.
   */
  imageOptimizationPolicy?: string;
  /**
   * @member {boolean} [noCache] noCache if set to true indicates that the
   * container image build must be executed with the --no-cache=true flag
   */
  noCache?: boolean;
  /**
   * @member {V1LocalObjectReference} [pullSecret] pullSecret is
   * the name of a Secret that would be used for setting up the authentication
   * for pulling the container images from the private Docker registries
   */
  pullSecret?: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy.
 * JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline
 * build.
 *
 */
export interface Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy {
  /**
   * @member {V1EnvVar[]} [env] env contains additional environment
   * variables you want to pass into a build pipeline.
   */
  env?: V1EnvVar[];
  /**
   * @member {string} [jenkinsfile] Jenkinsfile defines the optional raw
   * contents of a Jenkinsfile which defines a Jenkins pipeline build.
   */
  jenkinsfile?: string;
  /**
   * @member {string} [jenkinsfilePath] JenkinsfilePath is the optional path of
   * the Jenkinsfile that will be used to configure the pipeline relative to
   * the root of the context (contextDir). If both JenkinsfilePath &
   * Jenkinsfile are both not specified, this defaults to Jenkinsfile in the
   * root of the specified contextDir.
   */
  jenkinsfilePath?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SourceBuildStrategy.
 * SourceBuildStrategy defines input parameters specific to an Source build.
 *
 */
export interface Comgithubopenshiftapibuildv1SourceBuildStrategy {
  /**
   * @member {V1EnvVar[]} [env] env contains additional environment
   * variables you want to pass into a builder container.
   */
  env?: V1EnvVar[];
  /**
   * @member {boolean} [forcePull] forcePull describes if the builder should
   * pull the images from registry prior to building.
   */
  forcePull?: boolean;
  /**
   * @member {V1ObjectReference} from from is reference to an
   * DockerImage, ImageStreamTag, or ImageStreamImage from which the container
   * image should be pulled
   */
  from: V1ObjectReference;
  /**
   * @member {boolean} [incremental] incremental flag forces the Source build
   * to do incremental builds if true.
   */
  incremental?: boolean;
  /**
   * @member {V1LocalObjectReference} [pullSecret] pullSecret is
   * the name of a Secret that would be used for setting up the authentication
   * for pulling the container images from the private Docker registries
   */
  pullSecret?: V1LocalObjectReference;
  /**
   * @member {string} [scripts] scripts is the location of Source scripts
   */
  scripts?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildStrategy.
 * BuildStrategy contains the details of how to perform a build.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildStrategy {
  /**
   * @member {Comgithubopenshiftapibuildv1CustomBuildStrategy} [customStrategy]
   * customStrategy holds the parameters to the Custom build strategy
   */
  customStrategy?: Comgithubopenshiftapibuildv1CustomBuildStrategy;
  /**
   * @member {Comgithubopenshiftapibuildv1DockerBuildStrategy} [dockerStrategy]
   * dockerStrategy holds the parameters to the container image build strategy.
   */
  dockerStrategy?: Comgithubopenshiftapibuildv1DockerBuildStrategy;
  /**
   * @member {Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy}
   * [jenkinsPipelineStrategy] JenkinsPipelineStrategy holds the parameters to
   * the Jenkins Pipeline build strategy.
   */
  jenkinsPipelineStrategy?: Comgithubopenshiftapibuildv1JenkinsPipelineBuildStrategy;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceBuildStrategy} [sourceStrategy]
   * sourceStrategy holds the parameters to the Source build strategy.
   */
  sourceStrategy?: Comgithubopenshiftapibuildv1SourceBuildStrategy;
  /**
   * @member {string} type type is the kind of build strategy.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1GenericWebHookCause.
 * GenericWebHookCause holds information about a generic WebHook that triggered
 * a build.
 *
 */
export interface Comgithubopenshiftapibuildv1GenericWebHookCause {
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] revision
   * is an optional field that stores the git source revision information of
   * the generic webhook trigger when it is available.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [secret] secret is the obfuscated webhook secret that
   * triggered a build.
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1GitHubWebHookCause.
 * GitHubWebHookCause has information about a GitHub webhook that triggered a
 * build.
 *
 */
export interface Comgithubopenshiftapibuildv1GitHubWebHookCause {
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] revision
   * is the git revision information of the trigger.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [secret] secret is the obfuscated webhook secret that
   * triggered a build.
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1GitLabWebHookCause.
 * GitLabWebHookCause has information about a GitLab webhook that triggered a
 * build.
 *
 */
export interface Comgithubopenshiftapibuildv1GitLabWebHookCause {
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] Revision
   * is the git source revision information of the trigger.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [secret] Secret is the obfuscated webhook secret that
   * triggered a build.
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ImageChangeCause.
 * ImageChangeCause contains information about the image that triggered a build
 *
 */
export interface Comgithubopenshiftapibuildv1ImageChangeCause {
  /**
   * @member {V1ObjectReference} [fromRef] fromRef contains
   * detailed information about an image that triggered a build.
   */
  fromRef?: V1ObjectReference;
  /**
   * @member {string} [imageID] imageID is the ID of the image that triggered a
   * a new build.
   */
  imageID?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildTriggerCause.
 * BuildTriggerCause holds information about a triggered build. It is used for
 * displaying build trigger data for each build and build configuration in oc
 * describe. It is also used to describe which triggers led to the most recent
 * update in the build configuration.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildTriggerCause {
  /**
   * @member {Comgithubopenshiftapibuildv1BitbucketWebHookCause}
   * [bitbucketWebHook] BitbucketWebHook represents data for a Bitbucket
   * webhook that fired a specific build.
   */
  bitbucketWebHook?: Comgithubopenshiftapibuildv1BitbucketWebHookCause;
  /**
   * @member {Comgithubopenshiftapibuildv1GenericWebHookCause} [genericWebHook]
   * genericWebHook holds data about a builds generic webhook trigger.
   */
  genericWebHook?: Comgithubopenshiftapibuildv1GenericWebHookCause;
  /**
   * @member {Comgithubopenshiftapibuildv1GitHubWebHookCause} [githubWebHook]
   * gitHubWebHook represents data for a GitHub webhook that fired a specific
   * build.
   */
  githubWebHook?: Comgithubopenshiftapibuildv1GitHubWebHookCause;
  /**
   * @member {Comgithubopenshiftapibuildv1GitLabWebHookCause} [gitlabWebHook]
   * GitLabWebHook represents data for a GitLab webhook that fired a specific
   * build.
   */
  gitlabWebHook?: Comgithubopenshiftapibuildv1GitLabWebHookCause;
  /**
   * @member {Comgithubopenshiftapibuildv1ImageChangeCause} [imageChangeBuild]
   * imageChangeBuild stores information about an imagechange event that
   * triggered a new build.
   */
  imageChangeBuild?: Comgithubopenshiftapibuildv1ImageChangeCause;
  /**
   * @member {string} [message] message is used to store a human readable
   * message for why the build was triggered. E.g.: "Manually triggered by
   * user", "Configuration change",etc.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildSpec.
 * BuildSpec has the information to represent a build and also additional
 * information about a build
 *
 */
export interface Comgithubopenshiftapibuildv1BuildSpec {
  /**
   * @member {number} [completionDeadlineSeconds] completionDeadlineSeconds is
   * an optional duration in seconds, counted from the time when a build pod
   * gets scheduled in the system, that the build may be active on a node
   * before the system actively tries to terminate the build; value must be
   * positive integer
   */
  completionDeadlineSeconds?: number;
  /**
   * @member {{ [propertyName: string]: string }} nodeSelector nodeSelector is
   * a selector which must be true for the build pod to fit on a node If nil,
   * it can be overridden by default build nodeselector values for the cluster.
   * If set to an empty map or a map with any values, default build
   * nodeselector values are ignored.
   */
  nodeSelector: { [propertyName: string]: string };
  /**
   * @member {Comgithubopenshiftapibuildv1BuildOutput} [output] output
   * describes the container image the Strategy should produce.
   */
  output?: Comgithubopenshiftapibuildv1BuildOutput;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildPostCommitSpec} [postCommit]
   * postCommit is a build hook executed after the build output image is
   * committed, before it is pushed to a registry.
   */
  postCommit?: Comgithubopenshiftapibuildv1BuildPostCommitSpec;
  /**
   * @member {V1ResourceRequirements} [resources] resources
   * computes resource requirements to execute the build.
   */
  resources?: V1ResourceRequirements;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] revision
   * is the information from the source for a specific repo snapshot. This is
   * optional.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [serviceAccount] serviceAccount is the name of the
   * ServiceAccount to use to run the pod created by this build. The pod will
   * be allowed to use secrets referenced by the ServiceAccount
   */
  serviceAccount?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildSource} [source] source
   * describes the SCM in use.
   */
  source?: Comgithubopenshiftapibuildv1BuildSource;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildStrategy} strategy strategy
   * defines how to perform a build.
   */
  strategy: Comgithubopenshiftapibuildv1BuildStrategy;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildTriggerCause[]} triggeredBy
   * triggeredBy describes which triggers started the most recent update to the
   * build configuration and contains information about those triggers.
   */
  triggeredBy: Comgithubopenshiftapibuildv1BuildTriggerCause[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildStatusOutputTo.
 * BuildStatusOutputTo describes the status of the built image with regards to
 * image registry to which it was supposed to be pushed.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildStatusOutputTo {
  /**
   * @member {string} [imageDigest] imageDigest is the digest of the built
   * container image. The digest uniquely identifies the image in the registry
   * to which it was pushed.
   *
   * Please note that this field may not always be set even if the push
   * completes successfully - e.g. when the registry returns no digest or
   * returns it in a format that the builder doesn't understand.
   */
  imageDigest?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildStatusOutput.
 * BuildStatusOutput contains the status of the built image.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildStatusOutput {
  /**
   * @member {Comgithubopenshiftapibuildv1BuildStatusOutputTo} [to] to
   * describes the status of the built image being pushed to a registry.
   */
  to?: Comgithubopenshiftapibuildv1BuildStatusOutputTo;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1StepInfo.
 * StepInfo contains details about a build step.
 *
 */
export interface Comgithubopenshiftapibuildv1StepInfo {
  /**
   * @member {number} [durationMilliseconds] durationMilliseconds identifies
   * how long the step took to complete in milliseconds.
   */
  durationMilliseconds?: number;
  /**
   * @member {string} [name] name is a unique identifier for each build step.
   */
  name?: string;
  /**
   * @member {Date} [startTime] startTime is a timestamp representing the
   * server time when this Step started. it is represented in RFC3339 form and
   * is in UTC.
   */
  startTime?: Date;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1StageInfo.
 * StageInfo contains details about a build stage.
 *
 */
export interface Comgithubopenshiftapibuildv1StageInfo {
  /**
   * @member {number} [durationMilliseconds] durationMilliseconds identifies
   * how long the stage took to complete in milliseconds. Note: the duration of
   * a stage can exceed the sum of the duration of the steps within the stage
   * as not all actions are accounted for in explicit build steps.
   */
  durationMilliseconds?: number;
  /**
   * @member {string} [name] name is a unique identifier for each build stage
   * that occurs.
   */
  name?: string;
  /**
   * @member {Date} [startTime] startTime is a timestamp representing the
   * server time when this Stage started. It is represented in RFC3339 form and
   * is in UTC.
   */
  startTime?: Date;
  /**
   * @member {Comgithubopenshiftapibuildv1StepInfo[]} [steps] steps contains
   * details about each step that occurs during a build stage including start
   * time and duration in milliseconds.
   */
  steps?: Comgithubopenshiftapibuildv1StepInfo[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildStatus.
 * BuildStatus contains the status of a build
 *
 */
export interface Comgithubopenshiftapibuildv1BuildStatus {
  /**
   * @member {boolean} [cancelled] cancelled describes if a cancel event was
   * triggered for the build.
   */
  cancelled?: boolean;
  /**
   * @member {Date} [completionTimestamp] completionTimestamp is a timestamp
   * representing the server time when this Build was finished, whether that
   * build failed or succeeded.  It reflects the time at which the Pod running
   * the Build terminated. It is represented in RFC3339 form and is in UTC.
   */
  completionTimestamp?: Date;
  /**
   * @member {V1ObjectReference} [config] config is an
   * ObjectReference to the BuildConfig this Build is based on.
   */
  config?: V1ObjectReference;
  /**
   * @member {number} [duration] duration contains time.Duration object
   * describing build time.
   */
  duration?: number;
  /**
   * @member {string} [logSnippet] logSnippet is the last few lines of the
   * build log.  This value is only set for builds that failed.
   */
  logSnippet?: string;
  /**
   * @member {string} [message] message is a human-readable message indicating
   * details about why the build has this status.
   */
  message?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildStatusOutput} [output] output
   * describes the container image the build has produced.
   */
  output?: Comgithubopenshiftapibuildv1BuildStatusOutput;
  /**
   * @member {string} [outputDockerImageReference] outputDockerImageReference
   * contains a reference to the container image that will be built by this
   * build. Its value is computed from Build.Spec.Output.To, and should include
   * the registry address, so that it can be used to push and pull the image.
   */
  outputDockerImageReference?: string;
  /**
   * @member {string} phase phase is the point in the build lifecycle. Possible
   * values are "New", "Pending", "Running", "Complete", "Failed", "Error", and
   * "Cancelled".
   */
  phase: string;
  /**
   * @member {string} [reason] reason is a brief CamelCase string that
   * describes any failure and is meant for machine parsing and tidy display in
   * the CLI.
   */
  reason?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1StageInfo[]} [stages] stages contains
   * details about each stage that occurs during the build including start
   * time, duration (in milliseconds), and the steps that occured within each
   * stage.
   */
  stages?: Comgithubopenshiftapibuildv1StageInfo[];
  /**
   * @member {Date} [startTimestamp] startTimestamp is a timestamp representing
   * the server time when this Build started running in a Pod. It is
   * represented in RFC3339 form and is in UTC.
   */
  startTimestamp?: Date;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1Build.
 * Build encapsulates the inputs needed to produce a new deployable image, as
 * well as the status of the execution and a reference to the Pod which
 * executed the build.
 *
 */
export interface Comgithubopenshiftapibuildv1Build {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildSpec} [spec] spec is all the
   * inputs used to execute the build.
   */
  spec?: Comgithubopenshiftapibuildv1BuildSpec;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildStatus} [status] status is the
   * current status of the build.
   */
  status?: Comgithubopenshiftapibuildv1BuildStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SecretLocalReference.
 * SecretLocalReference contains information that points to the local secret
 * being used
 *
 */
export interface Comgithubopenshiftapibuildv1SecretLocalReference {
  /**
   * @member {string} name Name is the name of the resource in the same
   * namespace being referenced
   */
  name: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1WebHookTrigger.
 * WebHookTrigger is a trigger that gets invoked using a webhook type of post
 *
 */
export interface Comgithubopenshiftapibuildv1WebHookTrigger {
  /**
   * @member {boolean} [allowEnv] allowEnv determines whether the webhook can
   * set environment variables; can only be set to true for GenericWebHook.
   */
  allowEnv?: boolean;
  /**
   * @member {string} [secret] secret used to validate requests. Deprecated:
   * use SecretReference instead.
   */
  secret?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1SecretLocalReference}
   * [secretReference] secretReference is a reference to a secret in the same
   * namespace, containing the value to be validated when the webhook is
   * invoked. The secret being referenced must contain a key named
   * "WebHookSecretKey", the value of which will be checked against the value
   * supplied in the webhook invocation.
   */
  secretReference?: Comgithubopenshiftapibuildv1SecretLocalReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1ImageChangeTrigger.
 * ImageChangeTrigger allows builds to be triggered when an ImageStream changes
 *
 */
export interface Comgithubopenshiftapibuildv1ImageChangeTrigger {
  /**
   * @member {V1ObjectReference} [from] from is a reference to an
   * ImageStreamTag that will trigger a build when updated It is optional. If
   * no From is specified, the From image from the build strategy will be used.
   * Only one ImageChangeTrigger with an empty From reference is allowed in a
   * build configuration.
   */
  from?: V1ObjectReference;
  /**
   * @member {string} [lastTriggeredImageID] lastTriggeredImageID is used
   * internally by the ImageChangeController to save last used image ID for
   * build
   */
  lastTriggeredImageID?: string;
  /**
   * @member {boolean} [paused] paused is true if this trigger is temporarily
   * disabled. Optional.
   */
  paused?: boolean;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildTriggerPolicy.
 * BuildTriggerPolicy describes a policy for a single trigger that results in a
 * new Build.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildTriggerPolicy {
  /**
   * @member {Comgithubopenshiftapibuildv1WebHookTrigger} [bitbucket]
   * BitbucketWebHook contains the parameters for a Bitbucket webhook type of
   * trigger
   */
  bitbucket?: Comgithubopenshiftapibuildv1WebHookTrigger;
  /**
   * @member {Comgithubopenshiftapibuildv1WebHookTrigger} [generic] generic
   * contains the parameters for a Generic webhook type of trigger
   */
  generic?: Comgithubopenshiftapibuildv1WebHookTrigger;
  /**
   * @member {Comgithubopenshiftapibuildv1WebHookTrigger} [github] github
   * contains the parameters for a GitHub webhook type of trigger
   */
  github?: Comgithubopenshiftapibuildv1WebHookTrigger;
  /**
   * @member {Comgithubopenshiftapibuildv1WebHookTrigger} [gitlab]
   * GitLabWebHook contains the parameters for a GitLab webhook type of trigger
   */
  gitlab?: Comgithubopenshiftapibuildv1WebHookTrigger;
  /**
   * @member {Comgithubopenshiftapibuildv1ImageChangeTrigger} [imageChange]
   * imageChange contains parameters for an ImageChange type of trigger
   */
  imageChange?: Comgithubopenshiftapibuildv1ImageChangeTrigger;
  /**
   * @member {string} type type is the type of build trigger
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildConfigSpec.
 * BuildConfigSpec describes when and how builds are created
 *
 */
export interface Comgithubopenshiftapibuildv1BuildConfigSpec {
  /**
   * @member {number} [completionDeadlineSeconds] completionDeadlineSeconds is
   * an optional duration in seconds, counted from the time when a build pod
   * gets scheduled in the system, that the build may be active on a node
   * before the system actively tries to terminate the build; value must be
   * positive integer
   */
  completionDeadlineSeconds?: number;
  /**
   * @member {number} [failedBuildsHistoryLimit] failedBuildsHistoryLimit is
   * the number of old failed builds to retain. If not specified, all failed
   * builds are retained.
   */
  failedBuildsHistoryLimit?: number;
  /**
   * @member {{ [propertyName: string]: string }} nodeSelector nodeSelector is
   * a selector which must be true for the build pod to fit on a node If nil,
   * it can be overridden by default build nodeselector values for the cluster.
   * If set to an empty map or a map with any values, default build
   * nodeselector values are ignored.
   */
  nodeSelector: { [propertyName: string]: string };
  /**
   * @member {Comgithubopenshiftapibuildv1BuildOutput} [output] output
   * describes the container image the Strategy should produce.
   */
  output?: Comgithubopenshiftapibuildv1BuildOutput;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildPostCommitSpec} [postCommit]
   * postCommit is a build hook executed after the build output image is
   * committed, before it is pushed to a registry.
   */
  postCommit?: Comgithubopenshiftapibuildv1BuildPostCommitSpec;
  /**
   * @member {V1ResourceRequirements} [resources] resources
   * computes resource requirements to execute the build.
   */
  resources?: V1ResourceRequirements;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] revision
   * is the information from the source for a specific repo snapshot. This is
   * optional.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {string} [runPolicy] RunPolicy describes how the new build created
   * from this build configuration will be scheduled for execution. This is
   * optional, if not specified we default to "Serial".
   */
  runPolicy?: string;
  /**
   * @member {string} [serviceAccount] serviceAccount is the name of the
   * ServiceAccount to use to run the pod created by this build. The pod will
   * be allowed to use secrets referenced by the ServiceAccount
   */
  serviceAccount?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildSource} [source] source
   * describes the SCM in use.
   */
  source?: Comgithubopenshiftapibuildv1BuildSource;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildStrategy} strategy strategy
   * defines how to perform a build.
   */
  strategy: Comgithubopenshiftapibuildv1BuildStrategy;
  /**
   * @member {number} [successfulBuildsHistoryLimit]
   * successfulBuildsHistoryLimit is the number of old successful builds to
   * retain. If not specified, all successful builds are retained.
   */
  successfulBuildsHistoryLimit?: number;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildTriggerPolicy[]} triggers
   * triggers determine how new Builds can be launched from a BuildConfig. If
   * no triggers are defined, a new build can only occur as a result of an
   * explicit client build creation.
   */
  triggers: Comgithubopenshiftapibuildv1BuildTriggerPolicy[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildConfigStatus.
 * BuildConfigStatus contains current state of the build config object.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildConfigStatus {
  /**
   * @member {number} lastVersion lastVersion is used to inform about number of
   * last triggered build.
   */
  lastVersion: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildConfig.
 * Build configurations define a build process for new container images. There
 * are three types of builds possible - a container image build using a
 * Dockerfile, a Source-to-Image build that uses a specially prepared base
 * image that accepts source code that it can make runnable, and a custom build
 * that can run // arbitrary container images as a base and accept the build
 * parameters. Builds run on the cluster and on completion are pushed to the
 * container image registry specified in the "output" section. A build can be
 * triggered via a webhook, when the base image changes, or when a user
 * manually requests a new build be // created.
 *
 * Each build created by a build configuration is numbered and refers back to
 * its parent configuration. Multiple builds can be triggered at once. Builds
 * that do not have "output" set can be used to test code or run a verification
 * build.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildConfig {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] metadata for
   * BuildConfig.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildConfigSpec} spec spec holds all
   * the input necessary to produce a new build, and the conditions when to
   * trigger them.
   */
  spec: Comgithubopenshiftapibuildv1BuildConfigSpec;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildConfigStatus} status status
   * holds any relevant information about a build config
   */
  status: Comgithubopenshiftapibuildv1BuildConfigStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildConfigList.
 * BuildConfigList is a collection of BuildConfigs.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildConfigList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildConfig[]} items items is a list
   * of build configs
   */
  items: Comgithubopenshiftapibuildv1BuildConfig[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] metadata for
   * BuildConfigList.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildList.
 * BuildList is a collection of Builds.
 *
 */
export interface Comgithubopenshiftapibuildv1BuildList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1Build[]} items items is a list of
   * builds
   */
  items: Comgithubopenshiftapibuildv1Build[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] metadata for
   * BuildList.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildLog.
 * BuildLog is the (unused) resource associated with the build log redirector
 *
 */
export interface Comgithubopenshiftapibuildv1BuildLog {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1DockerStrategyOptions.
 * DockerStrategyOptions contains extra strategy options for container image
 * builds
 *
 */
export interface Comgithubopenshiftapibuildv1DockerStrategyOptions {
  /**
   * @member {V1EnvVar[]} [buildArgs] Args contains any build
   * arguments that are to be passed to Docker.  See
   * https://docs.docker.com/engine/reference/builder/#/arg for more details
   */
  buildArgs?: V1EnvVar[];
  /**
   * @member {boolean} [noCache] noCache overrides the docker-strategy noCache
   * option in the build config
   */
  noCache?: boolean;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1SourceStrategyOptions.
 * SourceStrategyOptions contains extra strategy options for Source builds
 *
 */
export interface Comgithubopenshiftapibuildv1SourceStrategyOptions {
  /**
   * @member {boolean} [incremental] incremental overrides the source-strategy
   * incremental option in the build config
   */
  incremental?: boolean;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapibuildv1BuildRequest.
 * BuildRequest is the resource used to pass parameters to build generator
 *
 */
export interface Comgithubopenshiftapibuildv1BuildRequest {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapibuildv1BinaryBuildSource} [binary] binary
   * indicates a request to build from a binary provided to the builder
   */
  binary?: Comgithubopenshiftapibuildv1BinaryBuildSource;
  /**
   * @member {Comgithubopenshiftapibuildv1DockerStrategyOptions}
   * [dockerStrategyOptions] DockerStrategyOptions contains additional
   * docker-strategy specific options for the build
   */
  dockerStrategyOptions?: Comgithubopenshiftapibuildv1DockerStrategyOptions;
  /**
   * @member {V1EnvVar[]} [env] env contains additional environment
   * variables you want to pass into a builder container.
   */
  env?: V1EnvVar[];
  /**
   * @member {V1ObjectReference} [from] from is the reference to
   * the ImageStreamTag that triggered the build.
   */
  from?: V1ObjectReference;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {number} [lastVersion] lastVersion (optional) is the LastVersion
   * of the BuildConfig that was used to generate the build. If the BuildConfig
   * in the generator doesn't match, a build will not be generated.
   */
  lastVersion?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] metadata for
   * BuildRequest.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceRevision} [revision] revision
   * is the information from the source for a specific repo snapshot.
   */
  revision?: Comgithubopenshiftapibuildv1SourceRevision;
  /**
   * @member {Comgithubopenshiftapibuildv1SourceStrategyOptions}
   * [sourceStrategyOptions] SourceStrategyOptions contains additional
   * source-strategy specific options for the build
   */
  sourceStrategyOptions?: Comgithubopenshiftapibuildv1SourceStrategyOptions;
  /**
   * @member {Comgithubopenshiftapibuildv1BuildTriggerCause[]} triggeredBy
   * triggeredBy describes which triggers started the most recent update to the
   * build configuration and contains information about those triggers.
   */
  triggeredBy: Comgithubopenshiftapibuildv1BuildTriggerCause[];
  /**
   * @member {V1ObjectReference} [triggeredByImage]
   * triggeredByImage is the Image that triggered this build.
   */
  triggeredByImage?: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageLayer.
 * ImageLayer represents a single layer of the image. Some images may have
 * multiple layers. Some may have none.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageLayer {
  /**
   * @member {string} mediaType MediaType of the referenced object.
   */
  mediaType: string;
  /**
   * @member {string} name Name of the layer as defined by the underlying
   * store.
   */
  name: string;
  /**
   * @member {number} size Size of the layer in bytes as defined by the
   * underlying store.
   */
  size: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1SignatureCondition.
 * SignatureCondition describes an image signature condition of particular kind
 * at particular probe time.
 *
 */
export interface Comgithubopenshiftapiimagev1SignatureCondition {
  /**
   * @member {Date} [lastProbeTime] Last time the condition was checked.
   */
  lastProbeTime?: Date;
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transit from
   * one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason for the condition's last
   * transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of signature condition, Complete or Failed.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1SignatureIssuer.
 * SignatureIssuer holds information about an issuer of signing certificate or
 * key.
 *
 */
export interface Comgithubopenshiftapiimagev1SignatureIssuer {
  /**
   * @member {string} [commonName] Common name (e.g.
   * openshift-signing-service).
   */
  commonName?: string;
  /**
   * @member {string} [organization] Organization name.
   */
  organization?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1SignatureSubject.
 * SignatureSubject holds information about a person or entity who created the
 * signature.
 *
 */
export interface Comgithubopenshiftapiimagev1SignatureSubject {
  /**
   * @member {string} [commonName] Common name (e.g.
   * openshift-signing-service).
   */
  commonName?: string;
  /**
   * @member {string} [organization] Organization name.
   */
  organization?: string;
  /**
   * @member {string} publicKeyID If present, it is a human readable key id of
   * public key belonging to the subject used to verify image signature. It
   * should contain at least 64 lowest bits of public key's fingerprint (e.g.
   * 0x685ebe62bf278440).
   */
  publicKeyID: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageSignature.
 * ImageSignature holds a signature of an image. It allows to verify image
 * identity and possibly other claims as long as the signature is trusted.
 * Based on this information it is possible to restrict runnable images to
 * those matching cluster-wide policy. Mandatory fields should be parsed by
 * clients doing image verification. The others are parsed from signature's
 * content by the server. They serve just an informative purpose.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageSignature {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1SignatureCondition[]} [conditions]
   * Conditions represent the latest available observations of a signature's
   * current state.
   */
  conditions?: Comgithubopenshiftapiimagev1SignatureCondition[];
  /**
   * @member {Uint8Array} content Required: An opaque binary string which is an
   * image's signature.
   */
  content: Uint8Array;
  /**
   * @member {Date} [created] If specified, it is the time of signature's
   * creation.
   */
  created?: Date;
  /**
   * @member {string} [imageIdentity] A human readable string representing
   * image's identity. It could be a product name and version, or an image pull
   * spec (e.g. "registry.access.redhat.com/rhel7/rhel:7.2").
   */
  imageIdentity?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1SignatureIssuer} [issuedBy] If
   * specified, it holds information about an issuer of signing certificate or
   * key (a person or entity who signed the signing certificate or key).
   */
  issuedBy?: Comgithubopenshiftapiimagev1SignatureIssuer;
  /**
   * @member {Comgithubopenshiftapiimagev1SignatureSubject} [issuedTo] If
   * specified, it holds information about a subject of signing certificate or
   * key (a person or entity who signed the image).
   */
  issuedTo?: Comgithubopenshiftapiimagev1SignatureSubject;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {{ [propertyName: string]: string }} [signedClaims] Contains
   * claims from the signature.
   */
  signedClaims?: { [propertyName: string]: string };
  /**
   * @member {string} type Required: Describes a type of stored blob.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1Image.
 * Image is an immutable representation of a container image and metadata at a
 * point in time.
 *
 */
export interface Comgithubopenshiftapiimagev1Image {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [dockerImageConfig] DockerImageConfig is a JSON blob that
   * the runtime uses to set up the container. This is a part of manifest
   * schema v2.
   */
  dockerImageConfig?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageLayer[]} dockerImageLayers
   * DockerImageLayers represents the layers in the image. May not be set if
   * the image does not define that data.
   */
  dockerImageLayers: Comgithubopenshiftapiimagev1ImageLayer[];
  /**
   * @member {string} [dockerImageManifest] DockerImageManifest is the raw JSON
   * of the manifest
   */
  dockerImageManifest?: string;
  /**
   * @member {string} [dockerImageManifestMediaType]
   * DockerImageManifestMediaType specifies the mediaType of manifest. This is
   * a part of manifest schema v2.
   */
  dockerImageManifestMediaType?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [dockerImageMetadata]
   * DockerImageMetadata contains metadata about this image
   */
  dockerImageMetadata?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string} [dockerImageMetadataVersion] DockerImageMetadataVersion
   * conveys the version of the object, which if empty defaults to "1.0"
   */
  dockerImageMetadataVersion?: string;
  /**
   * @member {string} [dockerImageReference] DockerImageReference is the string
   * that can be used to pull this image.
   */
  dockerImageReference?: string;
  /**
   * @member {Uint8Array[]} [dockerImageSignatures] DockerImageSignatures
   * provides the signatures as opaque blobs. This is a part of manifest schema
   * v1.
   */
  dockerImageSignatures?: Uint8Array[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageSignature[]} [signatures]
   * Signatures holds all signatures of the image.
   */
  signatures?: Comgithubopenshiftapiimagev1ImageSignature[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageBlobReferences.
 * ImageBlobReferences describes the blob references within an image.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageBlobReferences {
  /**
   * @member {string} [config] config, if set, is the blob that contains the
   * image config. Some images do not have separate config blobs and this field
   * will be set to nil if so.
   */
  config?: string;
  /**
   * @member {boolean} [imageMissing] imageMissing is true if the image is
   * referenced by the image stream but the image object has been deleted from
   * the API by an administrator. When this field is set, layers and config
   * fields may be empty and callers that depend on the image metadata should
   * consider the image to be unavailable for download or viewing.
   */
  imageMissing?: boolean;
  /**
   * @member {string[]} [layers] layers is the list of blobs that compose this
   * image, from base layer to top layer. All layers referenced by this array
   * will be defined in the blobs map. Some images may have zero layers.
   */
  layers?: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1TagImportPolicy.
 * TagImportPolicy controls how images related to this tag will be imported.
 *
 */
export interface Comgithubopenshiftapiimagev1TagImportPolicy {
  /**
   * @member {boolean} [insecure] Insecure is true if the server may bypass
   * certificate verification or connect directly over HTTP during image
   * import.
   */
  insecure?: boolean;
  /**
   * @member {boolean} [scheduled] Scheduled indicates to the server that this
   * tag should be periodically checked to ensure it is up to date, and
   * imported
   */
  scheduled?: boolean;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1TagReferencePolicy.
 * TagReferencePolicy describes how pull-specs for images in this image stream
 * tag are generated when image change triggers in deployment configs or builds
 * are resolved. This allows the image stream author to control how images are
 * accessed.
 *
 */
export interface Comgithubopenshiftapiimagev1TagReferencePolicy {
  /**
   * @member {string} type Type determines how the image pull spec should be
   * transformed when the image stream tag is used in deployment config
   * triggers or new builds. The default value is `Source`, indicating the
   * original location of the image should be used (if imported). The user may
   * also specify `Local`, indicating that the pull spec should point to the
   * integrated container image registry and leverage the registry's ability to
   * proxy the pull to an upstream registry. `Local` allows the credentials
   * used to pull this image to be managed from the image stream's namespace,
   * so others on the platform can access a remote image but have no access to
   * the remote secret. It also allows the image layers to be mirrored into the
   * local registry which the images can still be pulled even if the upstream
   * registry is unavailable.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageImportSpec.
 * ImageImportSpec describes a request to import a specific image.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageImportSpec {
  /**
   * @member {V1ObjectReference} from From is the source of an
   * image to import; only kind DockerImage is allowed
   */
  from: V1ObjectReference;
  /**
   * @member {Comgithubopenshiftapiimagev1TagImportPolicy} [importPolicy]
   * ImportPolicy is the policy controlling how the image is imported
   */
  importPolicy?: Comgithubopenshiftapiimagev1TagImportPolicy;
  /**
   * @member {boolean} [includeManifest] IncludeManifest determines if the
   * manifest for each image is returned in the response
   */
  includeManifest?: boolean;
  /**
   * @member {Comgithubopenshiftapiimagev1TagReferencePolicy} [referencePolicy]
   * ReferencePolicy defines how other components should consume the image
   */
  referencePolicy?: Comgithubopenshiftapiimagev1TagReferencePolicy;
  /**
   * @member {V1LocalObjectReference} [to] To is a tag in the
   * current image stream to assign the imported image to, if name is not
   * specified the default tag from from.name will be used
   */
  to?: V1LocalObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageImportStatus.
 * ImageImportStatus describes the result of an image import.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageImportStatus {
  /**
   * @member {Comgithubopenshiftapiimagev1Image} [image] Image is the metadata
   * of that image, if the image was located
   */
  image?: Comgithubopenshiftapiimagev1Image;
  /**
   * @member {Iok8sapimachinerypkgapismetav1Status} status Status is the status
   * of the image import, including errors encountered while retrieving the
   * image
   */
  status: Iok8sapimachinerypkgapismetav1Status;
  /**
   * @member {string} [tag] Tag is the tag this image was located under, if any
   */
  tag?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageLayerData.
 * ImageLayerData contains metadata about an image layer.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageLayerData {
  /**
   * @member {string} mediaType MediaType of the referenced object.
   */
  mediaType: string;
  /**
   * @member {number} size Size of the layer in bytes as defined by the
   * underlying store. This field is optional if the necessary information
   * about size is not available.
   */
  size: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageList.
 * ImageList is a list of Image objects.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1Image[]} items Items is a list of
   * images
   */
  items: Comgithubopenshiftapiimagev1Image[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageLookupPolicy.
 * ImageLookupPolicy describes how an image stream can be used to override the
 * image references used by pods, builds, and other resources in a namespace.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageLookupPolicy {
  /**
   * @member {boolean} local local will change the docker short image
   * references (like "mysql" or "php:latest") on objects in this namespace to
   * the image ID whenever they match this image stream, instead of reaching
   * out to a remote registry. The name will be fully qualified to an image ID
   * if found. The tag's referencePolicy is taken into account on the replaced
   * value. Only works within the current namespace.
   */
  local: boolean;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1TagReference.
 * TagReference specifies optional annotations for images using this tag and an
 * optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage
 * this tag should track.
 *
 */
export interface Comgithubopenshiftapiimagev1TagReference {
  /**
   * @member {{ [propertyName: string]: string }} [annotations] Optional; if
   * specified, annotations that are applied to images retrieved via
   * ImageStreamTags.
   */
  annotations?: { [propertyName: string]: string };
  /**
   * @member {V1ObjectReference} [from] Optional; if specified, a
   * reference to another image that this tag should point to. Valid values are
   * ImageStreamTag, ImageStreamImage, and DockerImage.  ImageStreamTag
   * references can only reference a tag within this same ImageStream.
   */
  from?: V1ObjectReference;
  /**
   * @member {number} [generation] Generation is a counter that tracks
   * mutations to the spec tag (user intent). When a tag reference is changed
   * the generation is set to match the current stream generation (which is
   * incremented every time spec is changed). Other processes in the system
   * like the image importer observe that the generation of spec tag is newer
   * than the generation recorded in the status and use that as a trigger to
   * import the newest remote tag. To trigger a new import, clients may set
   * this value to zero which will reset the generation to the latest stream
   * generation. Legacy clients will send this value as nil which will be
   * merged with the current tag generation.
   */
  generation?: number;
  /**
   * @member {Comgithubopenshiftapiimagev1TagImportPolicy} [importPolicy]
   * ImportPolicy is information that controls how images may be imported by
   * the server.
   */
  importPolicy?: Comgithubopenshiftapiimagev1TagImportPolicy;
  /**
   * @member {string} name Name of the tag
   */
  name: string;
  /**
   * @member {boolean} [reference] Reference states if the tag will be
   * imported. Default value is false, which means the tag will be imported.
   */
  reference?: boolean;
  /**
   * @member {Comgithubopenshiftapiimagev1TagReferencePolicy} [referencePolicy]
   * ReferencePolicy defines how other components should consume the image.
   */
  referencePolicy?: Comgithubopenshiftapiimagev1TagReferencePolicy;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamSpec.
 * ImageStreamSpec represents options for ImageStreams.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamSpec {
  /**
   * @member {string} [dockerImageRepository] dockerImageRepository is
   * optional, if specified this stream is backed by a container repository on
   * this server Deprecated: This field is deprecated as of v3.7 and will be
   * removed in a future release. Specify the source for the tags to be
   * imported in each tag via the spec.tags.from reference instead.
   */
  dockerImageRepository?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageLookupPolicy} [lookupPolicy]
   * lookupPolicy controls how other resources reference images within this
   * namespace.
   */
  lookupPolicy?: Comgithubopenshiftapiimagev1ImageLookupPolicy;
  /**
   * @member {Comgithubopenshiftapiimagev1TagReference[]} [tags] tags map
   * arbitrary string values to specific image locators
   */
  tags?: Comgithubopenshiftapiimagev1TagReference[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1TagEventCondition.
 * TagEventCondition contains condition information for a tag event.
 *
 */
export interface Comgithubopenshiftapiimagev1TagEventCondition {
  /**
   * @member {number} generation Generation is the spec tag generation that
   * this status corresponds to
   */
  generation: number;
  /**
   * @member {Date} [lastTransitionTime] LastTransitionTIme is the time the
   * condition transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Message is a human readable description of the
   * details about last transition, complementing reason.
   */
  message?: string;
  /**
   * @member {string} [reason] Reason is a brief machine readable explanation
   * for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of tag event condition, currently only
   * ImportSuccess
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1TagEvent.
 * TagEvent is used by ImageStreamStatus to keep a historical record of images
 * associated with a tag.
 *
 */
export interface Comgithubopenshiftapiimagev1TagEvent {
  /**
   * @member {Date} created Created holds the time the TagEvent was created
   */
  created: Date;
  /**
   * @member {string} dockerImageReference DockerImageReference is the string
   * that can be used to pull this image
   */
  dockerImageReference: string;
  /**
   * @member {number} generation Generation is the spec tag generation that
   * resulted in this tag being updated
   */
  generation: number;
  /**
   * @member {string} image Image is the image
   */
  image: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1NamedTagEventList.
 * NamedTagEventList relates a tag to its image history.
 *
 */
export interface Comgithubopenshiftapiimagev1NamedTagEventList {
  /**
   * @member {Comgithubopenshiftapiimagev1TagEventCondition[]} [conditions]
   * Conditions is an array of conditions that apply to the tag event list.
   */
  conditions?: Comgithubopenshiftapiimagev1TagEventCondition[];
  /**
   * @member {Comgithubopenshiftapiimagev1TagEvent[]} items Standard object's
   * metadata.
   */
  items: Comgithubopenshiftapiimagev1TagEvent[];
  /**
   * @member {string} tag Tag is the tag for which the history is recorded
   */
  tag: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamStatus.
 * ImageStreamStatus contains information about the state of this image stream.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamStatus {
  /**
   * @member {string} dockerImageRepository DockerImageRepository represents
   * the effective location this stream may be accessed at. May be empty until
   * the server determines where the repository is located
   */
  dockerImageRepository: string;
  /**
   * @member {string} [publicDockerImageRepository] PublicDockerImageRepository
   * represents the public location from where the image can be pulled outside
   * the cluster. This field may be empty if the administrator has not exposed
   * the integrated registry externally.
   */
  publicDockerImageRepository?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1NamedTagEventList[]} [tags] Tags are
   * a historical record of images associated with each tag. The first entry in
   * the TagEvent array is the currently tagged image.
   */
  tags?: Comgithubopenshiftapiimagev1NamedTagEventList[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStream.
 * ImageStream stores a mapping of tags to images, metadata overrides that are
 * applied when images are tagged in a stream, and an optional reference to a
 * container image repository on a registry.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStream {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStreamSpec} spec Spec describes
   * the desired state of this stream
   */
  spec: Comgithubopenshiftapiimagev1ImageStreamSpec;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStreamStatus} [status] Status
   * describes the current state of this stream
   */
  status?: Comgithubopenshiftapiimagev1ImageStreamStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamImage.
 * ImageStreamImage represents an Image that is retrieved by image name from an
 * ImageStream.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamImage {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1Image} image Image associated with
   * the ImageStream and image name.
   */
  image: Comgithubopenshiftapiimagev1Image;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1RepositoryImportSpec.
 * RepositoryImportSpec describes a request to import images from a container
 * image repository.
 *
 */
export interface Comgithubopenshiftapiimagev1RepositoryImportSpec {
  /**
   * @member {V1ObjectReference} from From is the source for the
   * image repository to import; only kind DockerImage and a name of a
   * container image repository is allowed
   */
  from: V1ObjectReference;
  /**
   * @member {Comgithubopenshiftapiimagev1TagImportPolicy} [importPolicy]
   * ImportPolicy is the policy controlling how the image is imported
   */
  importPolicy?: Comgithubopenshiftapiimagev1TagImportPolicy;
  /**
   * @member {boolean} [includeManifest] IncludeManifest determines if the
   * manifest for each image is returned in the response
   */
  includeManifest?: boolean;
  /**
   * @member {Comgithubopenshiftapiimagev1TagReferencePolicy} [referencePolicy]
   * ReferencePolicy defines how other components should consume the image
   */
  referencePolicy?: Comgithubopenshiftapiimagev1TagReferencePolicy;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamImportSpec.
 * ImageStreamImportSpec defines what images should be imported.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamImportSpec {
  /**
   * @member {Comgithubopenshiftapiimagev1ImageImportSpec[]} [images] Images
   * are a list of individual images to import.
   */
  images?: Comgithubopenshiftapiimagev1ImageImportSpec[];
  /**
   * @member {boolean} importProperty Import indicates whether to perform an
   * import - if so, the specified tags are set on the spec and status of the
   * image stream defined by the type meta.
   */
  importProperty: boolean;
  /**
   * @member {Comgithubopenshiftapiimagev1RepositoryImportSpec} [repository]
   * Repository is an optional import of an entire container image repository.
   * A maximum limit on the number of tags imported this way is imposed by the
   * server.
   */
  repository?: Comgithubopenshiftapiimagev1RepositoryImportSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1RepositoryImportStatus.
 * RepositoryImportStatus describes the result of an image repository import
 *
 */
export interface Comgithubopenshiftapiimagev1RepositoryImportStatus {
  /**
   * @member {string[]} [additionalTags] AdditionalTags are tags that exist in
   * the repository but were not imported because a maximum limit of automatic
   * imports was applied.
   */
  additionalTags?: string[];
  /**
   * @member {Comgithubopenshiftapiimagev1ImageImportStatus[]} [images] Images
   * is a list of images successfully retrieved by the import of the
   * repository.
   */
  images?: Comgithubopenshiftapiimagev1ImageImportStatus[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1Status} [status] Status reflects
   * whether any failure occurred during import
   */
  status?: Iok8sapimachinerypkgapismetav1Status;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamImportStatus.
 * ImageStreamImportStatus contains information about the status of an image
 * stream import.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamImportStatus {
  /**
   * @member {Comgithubopenshiftapiimagev1ImageImportStatus[]} [images] Images
   * is set with the result of importing spec.images
   */
  images?: Comgithubopenshiftapiimagev1ImageImportStatus[];
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStream} [importProperty] Import
   * is the image stream that was successfully updated or created when 'to' was
   * set.
   */
  importProperty?: Comgithubopenshiftapiimagev1ImageStream;
  /**
   * @member {Comgithubopenshiftapiimagev1RepositoryImportStatus} [repository]
   * Repository is set if spec.repository was set to the outcome of the import
   */
  repository?: Comgithubopenshiftapiimagev1RepositoryImportStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamImport.
 * The image stream import resource provides an easy way for a user to find and
 * import container images from other container image registries into the
 * server. Individual images or an entire image repository may be imported, and
 * users may choose to see the results of the import prior to tagging the
 * resulting images into the specified image stream.
 *
 * This API is intended for end-user tools that need to see the metadata of the
 * image prior to import (for instance, to generate an application from it).
 * Clients that know the desired image can continue to create spec.tags
 * directly into their image streams.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamImport {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStreamImportSpec} spec Spec is a
   * description of the images that the user wishes to import
   */
  spec: Comgithubopenshiftapiimagev1ImageStreamImportSpec;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStreamImportStatus} status
   * Status is the the result of importing the image
   */
  status: Comgithubopenshiftapiimagev1ImageStreamImportStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamLayers.
 * ImageStreamLayers describes information about the layers referenced by
 * images in this image stream.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamLayers {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {{ [propertyName: string]:
   * Comgithubopenshiftapiimagev1ImageLayerData }} blobs blobs is a map of blob
   * name to metadata about the blob.
   */
  blobs: { [propertyName: string]: Comgithubopenshiftapiimagev1ImageLayerData };
  /**
   * @member {{ [propertyName: string]:
   * Comgithubopenshiftapiimagev1ImageBlobReferences }} images images is a map
   * between an image name and the names of the blobs and config that comprise
   * the image.
   */
  images: { [propertyName: string]: Comgithubopenshiftapiimagev1ImageBlobReferences };
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamList.
 * ImageStreamList is a list of ImageStream objects.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStream[]} items Items is a list
   * of imageStreams
   */
  items: Comgithubopenshiftapiimagev1ImageStream[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamMapping.
 * ImageStreamMapping represents a mapping from a single tag to a container
 * image as well as the reference to the container image stream the image came
 * from.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamMapping {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1Image} image Image is a container
   * image.
   */
  image: Comgithubopenshiftapiimagev1Image;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} tag Tag is a string value this image can be located with
   * inside the stream.
   */
  tag: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamTag.
 * ImageStreamTag represents an Image that is retrieved by tag name from an
 * ImageStream.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamTag {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1TagEventCondition[]} [conditions]
   * conditions is an array of conditions that apply to the image stream tag.
   */
  conditions?: Comgithubopenshiftapiimagev1TagEventCondition[];
  /**
   * @member {number} generation generation is the current generation of the
   * tagged image - if tag is provided and this value is not equal to the tag
   * generation, a user has requested an import that has not completed, or
   * conditions will be filled out indicating any error.
   */
  generation: number;
  /**
   * @member {Comgithubopenshiftapiimagev1Image} image image associated with
   * the ImageStream and tag.
   */
  image: Comgithubopenshiftapiimagev1Image;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageLookupPolicy} lookupPolicy
   * lookupPolicy indicates whether this tag will handle image references in
   * this namespace.
   */
  lookupPolicy: Comgithubopenshiftapiimagev1ImageLookupPolicy;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiimagev1TagReference} tag tag is the spec tag
   * associated with this image stream tag, and it may be null if only pushes
   * have occurred to this image stream.
   */
  tag: Comgithubopenshiftapiimagev1TagReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiimagev1ImageStreamTagList.
 * ImageStreamTagList is a list of ImageStreamTag objects.
 *
 */
export interface Comgithubopenshiftapiimagev1ImageStreamTagList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiimagev1ImageStreamTag[]} items Items is the
   * list of image stream tags
   */
  items: Comgithubopenshiftapiimagev1ImageStreamTag[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1ClusterNetworkEntry.
 * ClusterNetworkEntry defines an individual cluster network. The CIDRs cannot
 * overlap with other cluster network CIDRs, CIDRs reserved for external ips,
 * CIDRs reserved for service networks, and CIDRs reserved for ingress ips.
 *
 */
export interface Comgithubopenshiftapinetworkv1ClusterNetworkEntry {
  /**
   * @member {string} cIDR CIDR defines the total range of a cluster networks
   * address space.
   */
  cIDR: string;
  /**
   * @member {number} hostSubnetLength HostSubnetLength is the number of bits
   * of the accompanying CIDR address to allocate to each node. eg, 8 would
   * mean that each node would have a /24 slice of the overlay network for its
   * pods.
   */
  hostSubnetLength: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1ClusterNetwork.
 * ClusterNetwork describes the cluster network. There is normally only one
 * object of this type, named "default", which is created by the SDN network
 * plugin based on the master configuration when the cluster is brought up for
 * the first time.
 *
 */
export interface Comgithubopenshiftapinetworkv1ClusterNetwork {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapinetworkv1ClusterNetworkEntry[]}
   * clusterNetworks ClusterNetworks is a list of ClusterNetwork objects that
   * defines the global overlay network's L3 space by specifying a set of CIDR
   * and netmasks that the SDN can allocate addressed from.
   */
  clusterNetworks: Comgithubopenshiftapinetworkv1ClusterNetworkEntry[];
  /**
   * @member {number} [hostsubnetlength] HostSubnetLength is the number of bits
   * of network to allocate to each node. eg, 8 would mean that each node would
   * have a /24 slice of the overlay network for its pods
   */
  hostsubnetlength?: number;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} [network] Network is a CIDR string specifying the global
   * overlay network's L3 space
   */
  network?: string;
  /**
   * @member {string} [pluginName] PluginName is the name of the network plugin
   * being used
   */
  pluginName?: string;
  /**
   * @member {string} serviceNetwork ServiceNetwork is the CIDR range that
   * Service IP addresses are allocated from
   */
  serviceNetwork: string;
  /**
   * @member {number} [vxlanPort] VXLANPort sets the VXLAN destination port
   * used by the cluster. It is set by the master configuration file on startup
   * and cannot be edited manually. Valid values for VXLANPort are integers
   * 1-65535 inclusive and if unset defaults to 4789. Changing VXLANPort allows
   * users to resolve issues between openshift SDN and other software trying to
   * use the same VXLAN destination port.
   */
  vxlanPort?: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1ClusterNetworkList.
 * ClusterNetworkList is a collection of ClusterNetworks
 *
 */
export interface Comgithubopenshiftapinetworkv1ClusterNetworkList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapinetworkv1ClusterNetwork[]} items Items is
   * the list of cluster networks
   */
  items: Comgithubopenshiftapinetworkv1ClusterNetwork[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer.
 * EgressNetworkPolicyPeer specifies a target to apply egress network policy to
 *
 */
export interface Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer {
  /**
   * @member {string} [cidrSelector] cidrSelector is the CIDR range to
   * allow/deny traffic to. If this is set, dnsName must be unset
   */
  cidrSelector?: string;
  /**
   * @member {string} [dnsName] dnsName is the domain name to allow/deny
   * traffic to. If this is set, cidrSelector must be unset
   */
  dnsName?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule.
 * EgressNetworkPolicyRule contains a single egress network policy rule
 *
 */
export interface Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule {
  /**
   * @member {Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer} to to is
   * the target that traffic is allowed/denied to
   */
  to: Comgithubopenshiftapinetworkv1EgressNetworkPolicyPeer;
  /**
   * @member {string} type type marks this as an "Allow" or "Deny" rule
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec.
 * EgressNetworkPolicySpec provides a list of policies on outgoing network
 * traffic
 *
 */
export interface Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec {
  /**
   * @member {Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule[]} egress
   * egress contains the list of egress policy rules
   */
  egress: Comgithubopenshiftapinetworkv1EgressNetworkPolicyRule[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1EgressNetworkPolicy.
 * EgressNetworkPolicy describes the current egress network policy for a
 * Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin,
 * traffic from a pod to an IP address outside the cluster will be checked
 * against each EgressNetworkPolicyRule in the pod's namespace's
 * EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy
 * is present) then the traffic will be allowed by default.
 *
 */
export interface Comgithubopenshiftapinetworkv1EgressNetworkPolicy {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] metadata for
   * EgressNetworkPolicy
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec} spec spec
   * is the specification of the current egress network policy
   */
  spec: Comgithubopenshiftapinetworkv1EgressNetworkPolicySpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1EgressNetworkPolicyList.
 * EgressNetworkPolicyList is a collection of EgressNetworkPolicy
 *
 */
export interface Comgithubopenshiftapinetworkv1EgressNetworkPolicyList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapinetworkv1EgressNetworkPolicy[]} items items
   * is the list of policies
   */
  items: Comgithubopenshiftapinetworkv1EgressNetworkPolicy[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] metadata for
   * EgressNetworkPolicyList
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1HostSubnet.
 * HostSubnet describes the container subnet network on a node. The HostSubnet
 * object must have the same name as the Node object it corresponds to.
 *
 */
export interface Comgithubopenshiftapinetworkv1HostSubnet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} [egressCIDRs] EgressCIDRs is the list of CIDR ranges
   * available for automatically assigning egress IPs to this node from. If
   * this field is set then EgressIPs should be treated as read-only.
   */
  egressCIDRs?: string[];
  /**
   * @member {string[]} [egressIPs] EgressIPs is the list of automatic egress
   * IP addresses currently hosted by this node. If EgressCIDRs is empty, this
   * can be set by hand; if EgressCIDRs is set then the master will overwrite
   * the value here with its own allocation of egress IPs.
   */
  egressIPs?: string[];
  /**
   * @member {string} host Host is the name of the node. (This is the same as
   * the object's name, but both fields must be set.)
   */
  host: string;
  /**
   * @member {string} hostIP HostIP is the IP address to be used as a VTEP by
   * other nodes in the overlay network
   */
  hostIP: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} subnet Subnet is the CIDR range of the overlay network
   * assigned to the node for its pods
   */
  subnet: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1HostSubnetList.
 * HostSubnetList is a collection of HostSubnets
 *
 */
export interface Comgithubopenshiftapinetworkv1HostSubnetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapinetworkv1HostSubnet[]} items Items is the
   * list of host subnets
   */
  items: Comgithubopenshiftapinetworkv1HostSubnet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1NetNamespace.
 * NetNamespace describes a single isolated network. When using the
 * redhat/openshift-ovs-multitenant plugin, every Namespace will have a
 * corresponding NetNamespace object with the same name. (When using
 * redhat/openshift-ovs-subnet, NetNamespaces are not used.)
 *
 */
export interface Comgithubopenshiftapinetworkv1NetNamespace {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} [egressIPs] EgressIPs is a list of reserved IPs that
   * will be used as the source for external traffic coming from pods in this
   * namespace. (If empty, external traffic will be masqueraded to Node IPs.)
   */
  egressIPs?: string[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} netid NetID is the network identifier of the network
   * namespace assigned to each overlay network packet. This can be manipulated
   * with the "oc adm pod-network" commands.
   */
  netid: number;
  /**
   * @member {string} netname NetName is the name of the network namespace.
   * (This is the same as the object's name, but both fields must be set.)
   */
  netname: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapinetworkv1NetNamespaceList.
 * NetNamespaceList is a collection of NetNamespaces
 *
 */
export interface Comgithubopenshiftapinetworkv1NetNamespaceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapinetworkv1NetNamespace[]} items Items is the
   * list of net namespaces
   */
  items: Comgithubopenshiftapinetworkv1NetNamespace[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction.
 * ClusterRoleScopeRestriction describes restrictions on cluster role scopes
 *
 */
export interface Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction {
  /**
   * @member {boolean} allowEscalation AllowEscalation indicates whether you
   * can request roles and their escalating resources
   */
  allowEscalation: boolean;
  /**
   * @member {string[]} namespaces Namespaces is the list of namespaces that
   * can be referenced.  * means any of them (including *)
   */
  namespaces: string[];
  /**
   * @member {string[]} roleNames RoleNames is the list of cluster roles that
   * can referenced.  * means anything
   */
  roleNames: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthAccessToken.
 * OAuthAccessToken describes an OAuth access token
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthAccessToken {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [authorizeToken] AuthorizeToken contains the token that
   * authorized this token
   */
  authorizeToken?: string;
  /**
   * @member {string} [clientName] ClientName references the client that
   * created this token.
   */
  clientName?: string;
  /**
   * @member {number} [expiresIn] ExpiresIn is the seconds from CreationTime
   * before this token expires.
   */
  expiresIn?: number;
  /**
   * @member {number} [inactivityTimeoutSeconds] InactivityTimeoutSeconds is
   * the value in seconds, from the CreationTimestamp, after which this token
   * can no longer be used. The value is automatically incremented when the
   * token is used.
   */
  inactivityTimeoutSeconds?: number;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} [redirectURI] RedirectURI is the redirection associated
   * with the token.
   */
  redirectURI?: string;
  /**
   * @member {string} [refreshToken] RefreshToken is the value by which this
   * token can be renewed. Can be blank.
   */
  refreshToken?: string;
  /**
   * @member {string[]} [scopes] Scopes is an array of the requested scopes.
   */
  scopes?: string[];
  /**
   * @member {string} [userName] UserName is the user name associated with this
   * token
   */
  userName?: string;
  /**
   * @member {string} [userUID] UserUID is the unique UID associated with this
   * token
   */
  userUID?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthAccessTokenList.
 * OAuthAccessTokenList is a collection of OAuth access tokens
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthAccessTokenList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapioauthv1OAuthAccessToken[]} items Items is
   * the list of OAuth access tokens
   */
  items: Comgithubopenshiftapioauthv1OAuthAccessToken[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthAuthorizeToken.
 * OAuthAuthorizeToken describes an OAuth authorization token
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthAuthorizeToken {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [clientName] ClientName references the client that
   * created this token.
   */
  clientName?: string;
  /**
   * @member {string} [codeChallenge] CodeChallenge is the optional
   * code_challenge associated with this authorization code, as described in
   * rfc7636
   */
  codeChallenge?: string;
  /**
   * @member {string} [codeChallengeMethod] CodeChallengeMethod is the optional
   * code_challenge_method associated with this authorization code, as
   * described in rfc7636
   */
  codeChallengeMethod?: string;
  /**
   * @member {number} [expiresIn] ExpiresIn is the seconds from CreationTime
   * before this token expires.
   */
  expiresIn?: number;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} [redirectURI] RedirectURI is the redirection associated
   * with the token.
   */
  redirectURI?: string;
  /**
   * @member {string[]} [scopes] Scopes is an array of the requested scopes.
   */
  scopes?: string[];
  /**
   * @member {string} [state] State data from request
   */
  state?: string;
  /**
   * @member {string} [userName] UserName is the user name associated with this
   * token
   */
  userName?: string;
  /**
   * @member {string} [userUID] UserUID is the unique UID associated with this
   * token. UserUID and UserName must both match for this token to be valid.
   */
  userUID?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList.
 * OAuthAuthorizeTokenList is a collection of OAuth authorization tokens
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapioauthv1OAuthAuthorizeToken[]} items Items is
   * the list of OAuth authorization tokens
   */
  items: Comgithubopenshiftapioauthv1OAuthAuthorizeToken[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1ScopeRestriction.
 * ScopeRestriction describe one restriction on scopes.  Exactly one option
 * must be non-nil.
 *
 */
export interface Comgithubopenshiftapioauthv1ScopeRestriction {
  /**
   * @member {Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction}
   * [clusterRole] ClusterRole describes a set of restrictions for cluster role
   * scoping.
   */
  clusterRole?: Comgithubopenshiftapioauthv1ClusterRoleScopeRestriction;
  /**
   * @member {string[]} [literals] ExactValues means the scope has to match a
   * particular set of strings exactly
   */
  literals?: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthClient.
 * OAuthClient describes an OAuth client
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthClient {
  /**
   * @member {number} [accessTokenInactivityTimeoutSeconds]
   * AccessTokenInactivityTimeoutSeconds overrides the default token inactivity
   * timeout for tokens granted to this client. The value represents the
   * maximum amount of time that can occur between consecutive uses of the
   * token. Tokens become invalid if they are not used within this temporal
   * window. The user will need to acquire a new token to regain access once a
   * token times out. This value needs to be set only if the default set in
   * configuration is not appropriate for this client. Valid values are: - 0:
   * Tokens for this client never time out - X: Tokens time out if there is no
   * activity for X seconds The current minimum allowed value for X is 300 (5
   * minutes)
   */
  accessTokenInactivityTimeoutSeconds?: number;
  /**
   * @member {number} [accessTokenMaxAgeSeconds] AccessTokenMaxAgeSeconds
   * overrides the default access token max age for tokens granted to this
   * client. 0 means no expiration.
   */
  accessTokenMaxAgeSeconds?: number;
  /**
   * @member {string[]} [additionalSecrets] AdditionalSecrets holds other
   * secrets that may be used to identify the client.  This is useful for
   * rotation and for service account token validation
   */
  additionalSecrets?: string[];
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [grantMethod] GrantMethod determines how to handle grants
   * for this client. If no method is provided, the cluster default grant
   * handling method will be used. Valid grant handling methods are:
   * - auto:   always approves grant requests, useful for trusted clients
   * - prompt: prompts the end user for approval of grant requests, useful for
   * third-party clients
   * - deny:   always denies grant requests, useful for black-listed clients
   */
  grantMethod?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string[]} [redirectURIs] RedirectURIs is the valid redirection
   * URIs associated with a client
   */
  redirectURIs?: string[];
  /**
   * @member {boolean} [respondWithChallenges] RespondWithChallenges indicates
   * whether the client wants authentication needed responses made in the form
   * of challenges instead of redirects
   */
  respondWithChallenges?: boolean;
  /**
   * @member {Comgithubopenshiftapioauthv1ScopeRestriction[]}
   * [scopeRestrictions] ScopeRestrictions describes which scopes this client
   * can request.  Each requested scope is checked against each restriction.
   * If any restriction matches, then the scope is allowed. If no restriction
   * matches, then the scope is denied.
   */
  scopeRestrictions?: Comgithubopenshiftapioauthv1ScopeRestriction[];
  /**
   * @member {string} [secret] Secret is the unique secret associated with a
   * client
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthClientAuthorization.
 * OAuthClientAuthorization describes an authorization created by an OAuth
 * client
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthClientAuthorization {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [clientName] ClientName references the client that
   * created this authorization
   */
  clientName?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string[]} [scopes] Scopes is an array of the granted scopes.
   */
  scopes?: string[];
  /**
   * @member {string} [userName] UserName is the user name that authorized this
   * client
   */
  userName?: string;
  /**
   * @member {string} [userUID] UserUID is the unique UID associated with this
   * authorization. UserUID and UserName must both match for this authorization
   * to be valid.
   */
  userUID?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthClientAuthorizationList.
 * OAuthClientAuthorizationList is a collection of OAuth client authorizations
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthClientAuthorizationList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapioauthv1OAuthClientAuthorization[]} items
   * Items is the list of OAuth client authorizations
   */
  items: Comgithubopenshiftapioauthv1OAuthClientAuthorization[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapioauthv1OAuthClientList.
 * OAuthClientList is a collection of OAuth clients
 *
 */
export interface Comgithubopenshiftapioauthv1OAuthClientList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapioauthv1OAuthClient[]} items Items is the
   * list of OAuth clients
   */
  items: Comgithubopenshiftapioauthv1OAuthClient[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiprojectv1ProjectSpec.
 * ProjectSpec describes the attributes on a Project
 *
 */
export interface Comgithubopenshiftapiprojectv1ProjectSpec {
  /**
   * @member {string[]} [finalizers] Finalizers is an opaque list of values
   * that must be empty to permanently remove object from storage
   */
  finalizers?: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiprojectv1ProjectStatus.
 * ProjectStatus is information about the current status of a Project
 *
 */
export interface Comgithubopenshiftapiprojectv1ProjectStatus {
  /**
   * @member {string} [phase] Phase is the current lifecycle phase of the
   * project
   */
  phase?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiprojectv1Project.
 * Projects are the unit of isolation and collaboration in OpenShift. A project
 * has one or more members, a quota on the resources that the project may
 * consume, and the security controls on the resources in the project. Within a
 * project, members may have different roles - project administrators can set
 * membership, editors can create and manage the resources, and viewers can see
 * but not access running containers. In a normal cluster project
 * administrators are not able to alter their quotas - that is restricted to
 * cluster administrators.
 *
 * Listing or watching projects will return only projects the user has the
 * reader role on.
 *
 * An OpenShift project is an alternative representation of a Kubernetes
 * namespace. Projects are exposed as editable to end users while namespaces
 * are not. Direct creation of a project is typically restricted to
 * administrators, while end users should use the requestproject resource.
 *
 */
export interface Comgithubopenshiftapiprojectv1Project {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiprojectv1ProjectSpec} [spec] Spec defines
   * the behavior of the Namespace.
   */
  spec?: Comgithubopenshiftapiprojectv1ProjectSpec;
  /**
   * @member {Comgithubopenshiftapiprojectv1ProjectStatus} [status] Status
   * describes the current status of a Namespace
   */
  status?: Comgithubopenshiftapiprojectv1ProjectStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiprojectv1ProjectList.
 * ProjectList is a list of Project objects.
 *
 */
export interface Comgithubopenshiftapiprojectv1ProjectList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiprojectv1Project[]} items Items is the list
   * of projects
   */
  items: Comgithubopenshiftapiprojectv1Project[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiprojectv1ProjectRequest.
 * ProjecRequest is the set of options necessary to fully qualify a project
 * request
 *
 */
export interface Comgithubopenshiftapiprojectv1ProjectRequest {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [description] Description is the description to apply to
   * a project
   */
  description?: string;
  /**
   * @member {string} [displayName] DisplayName is the display name to apply to
   * a project
   */
  displayName?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing V1ScopedResourceSelectorRequirement.
 * A scoped-resource selector requirement is a selector that contains values, a
 * scope name, and an operator that relates the scope name and values.
 *
 */
export interface V1ScopedResourceSelectorRequirement {
  /**
   * @member {string} operator Represents a scope's relationship to a set of
   * values. Valid operators are In, NotIn, Exists, DoesNotExist.
   */
  operator: string;
  /**
   * @member {string} scopeName The name of the scope that the selector applies
   * to.
   */
  scopeName: string;
  /**
   * @member {string[]} [values] An array of string values. If the operator is
   * In or NotIn, the values array must be non-empty. If the operator is Exists
   * or DoesNotExist, the values array must be empty. This array is replaced
   * during a strategic merge patch.
   */
  values?: string[];
}

/**
 * @interface
 * An interface representing V1ScopeSelector.
 * A scope selector represents the AND of the selectors represented by the
 * scoped-resource selector requirements.
 *
 */
export interface V1ScopeSelector {
  /**
   * @member {V1ScopedResourceSelectorRequirement[]}
   * [matchExpressions] A list of scope selector requirements by scope of the
   * resources.
   */
  matchExpressions?: V1ScopedResourceSelectorRequirement[];
}

/**
 * @interface
 * An interface representing V1ResourceQuotaSpec.
 * ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
 *
 */
export interface V1ResourceQuotaSpec {
  /**
   * @member {{ [propertyName: string]: string }} [hard] hard is the set of
   * desired hard limits for each named resource. More info:
   * https://kubernetes.io/docs/concepts/policy/resource-quotas/
   */
  hard?: { [propertyName: string]: string };
  /**
   * @member {V1ScopeSelector} [scopeSelector] scopeSelector is
   * also a collection of filters like scopes that must match each object
   * tracked by a quota but expressed using ScopeSelectorOperator in
   * combination with possible values. For a resource to match, both scopes AND
   * scopeSelector (if specified in spec), must be matched.
   */
  scopeSelector?: V1ScopeSelector;
  /**
   * @member {string[]} [scopes] A collection of filters that must match each
   * object tracked by a quota. If not specified, the quota matches all
   * objects.
   */
  scopes?: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector.
 * ClusterResourceQuotaSelector is used to select projects.  At least one of
 * LabelSelector or AnnotationSelector must present.  If only one is present,
 * it is the only selection criteria.  If both are specified, the project must
 * match both restrictions.
 *
 */
export interface Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector {
  /**
   * @member {{ [propertyName: string]: string }} annotations
   * AnnotationSelector is used to select projects by annotation.
   */
  annotations: { [propertyName: string]: string };
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} labels LabelSelector
   * is used to select projects by label.
   */
  labels: Iok8sapimachinerypkgapismetav1LabelSelector;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec.
 * ClusterResourceQuotaSpec defines the desired quota restrictions
 *
 */
export interface Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec {
  /**
   * @member {V1ResourceQuotaSpec} quota Quota defines the desired
   * quota
   */
  quota: V1ResourceQuotaSpec;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector}
   * selector Selector is the selector used to match projects. It should only
   * select active projects on the scale of dozens (though it can select many
   * more less active projects).  These projects will contend on object
   * creation through this resource.
   */
  selector: Comgithubopenshiftapiquotav1ClusterResourceQuotaSelector;
}

/**
 * @interface
 * An interface representing V1ResourceQuotaStatus.
 * ResourceQuotaStatus defines the enforced hard limits and observed use.
 *
 */
export interface V1ResourceQuotaStatus {
  /**
   * @member {{ [propertyName: string]: string }} [hard] Hard is the set of
   * enforced hard limits for each named resource. More info:
   * https://kubernetes.io/docs/concepts/policy/resource-quotas/
   */
  hard?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [used] Used is the current
   * observed total usage of the resource in the namespace.
   */
  used?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace.
 * ResourceQuotaStatusByNamespace gives status for a particular project
 *
 */
export interface Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace {
  /**
   * @member {string} namespace Namespace the project this status applies to
   */
  namespace: string;
  /**
   * @member {V1ResourceQuotaStatus} status Status indicates how
   * many resources have been consumed by this project
   */
  status: V1ResourceQuotaStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus.
 * ClusterResourceQuotaStatus defines the actual enforced quota and its current
 * usage
 *
 */
export interface Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus {
  /**
   * @member {Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace[]}
   * namespaces Namespaces slices the usage by project.  This division allows
   * for quick resolution of deletion reconciliation inside of a single project
   * without requiring a recalculation across all projects.  This can be used
   * to pull the deltas for a given project.
   */
  namespaces: Comgithubopenshiftapiquotav1ResourceQuotaStatusByNamespace[];
  /**
   * @member {V1ResourceQuotaStatus} total Total defines the actual
   * enforced quota and its current usage across all projects
   */
  total: V1ResourceQuotaStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1AppliedClusterResourceQuota.
 * AppliedClusterResourceQuota mirrors ClusterResourceQuota at a project scope,
 * for projection into a project.  It allows a project-admin to know which
 * ClusterResourceQuotas are applied to his project and their associated usage.
 *
 */
export interface Comgithubopenshiftapiquotav1AppliedClusterResourceQuota {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} metadata Standard
   * object's metadata.
   */
  metadata: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec} spec Spec
   * defines the desired quota
   */
  spec: Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus} [status]
   * Status defines the actual enforced quota and its current usage
   */
  status?: Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList.
 * AppliedClusterResourceQuotaList is a collection of
 * AppliedClusterResourceQuotas
 *
 */
export interface Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiquotav1AppliedClusterResourceQuota[]} items
   * Items is a list of AppliedClusterResourceQuota
   */
  items: Comgithubopenshiftapiquotav1AppliedClusterResourceQuota[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ClusterResourceQuota.
 * ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object
 * is easily convertible to synthetic ResourceQuota object to allow quota
 * evaluation re-use.
 *
 */
export interface Comgithubopenshiftapiquotav1ClusterResourceQuota {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} metadata Standard
   * object's metadata.
   */
  metadata: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec} spec Spec
   * defines the desired quota
   */
  spec: Comgithubopenshiftapiquotav1ClusterResourceQuotaSpec;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus} [status]
   * Status defines the actual enforced quota and its current usage
   */
  status?: Comgithubopenshiftapiquotav1ClusterResourceQuotaStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiquotav1ClusterResourceQuotaList.
 * ClusterResourceQuotaList is a collection of ClusterResourceQuotas
 *
 */
export interface Comgithubopenshiftapiquotav1ClusterResourceQuotaList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiquotav1ClusterResourceQuota[]} items Items
   * is a list of ClusterResourceQuotas
   */
  items: Comgithubopenshiftapiquotav1ClusterResourceQuota[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteTargetReference.
 * RouteTargetReference specifies the target that resolve into endpoints. Only
 * the 'Service' kind is allowed. Use 'weight' field to emphasize one over
 * others.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteTargetReference {
  /**
   * @member {string} kind The kind of target that the route is referring to.
   * Currently, only 'Service' is allowed
   */
  kind: string;
  /**
   * @member {string} name name of the service/target that is being referred
   * to. e.g. name of the service
   */
  name: string;
  /**
   * @member {number} weight weight as an integer between 0 and 256, default 1,
   * that specifies the target's relative weight against other target reference
   * objects. 0 suppresses requests to this backend.
   */
  weight: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RoutePort.
 * RoutePort defines a port mapping from a router to an endpoint in the service
 * endpoints.
 *
 */
export interface Comgithubopenshiftapiroutev1RoutePort {
  /**
   * @member {string} targetPort The target port on pods selected by the
   * service this route points to. If this is a string, it will be looked up as
   * a named port in the target endpoints port list. Required
   */
  targetPort: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1TLSConfig.
 * TLSConfig defines config used to secure a route and provide termination
 *
 */
export interface Comgithubopenshiftapiroutev1TLSConfig {
  /**
   * @member {string} [caCertificate] caCertificate provides the cert authority
   * certificate contents
   */
  caCertificate?: string;
  /**
   * @member {string} [certificate] certificate provides certificate contents
   */
  certificate?: string;
  /**
   * @member {string} [destinationCACertificate] destinationCACertificate
   * provides the contents of the ca certificate of the final destination.
   * When using reencrypt termination this file should be provided in order to
   * have routers use it for health checks on the secure connection. If this
   * field is not specified, the router may provide its own destination CA and
   * perform hostname validation using the short service name
   * (service.namespace.svc), which allows infrastructure generated
   * certificates to automatically verify.
   */
  destinationCACertificate?: string;
  /**
   * @member {string} [insecureEdgeTerminationPolicy]
   * insecureEdgeTerminationPolicy indicates the desired behavior for insecure
   * connections to a route. While each router may make its own decisions on
   * which ports to expose, this is normally port 80.
   *
   * * Allow - traffic is sent to the server on the insecure port (default) *
   * Disable - no traffic is allowed on the insecure port. * Redirect - clients
   * are redirected to the secure port.
   */
  insecureEdgeTerminationPolicy?: string;
  /**
   * @member {string} [key] key provides key file contents
   */
  key?: string;
  /**
   * @member {string} termination termination indicates termination type.
   */
  termination: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteSpec.
 * RouteSpec describes the hostname or path the route exposes, any security
 * information, and one to four backends (services) the route points to.
 * Requests are distributed among the backends depending on the weights
 * assigned to each backend. When using roundrobin scheduling the portion of
 * requests that go to each backend is the backend weight divided by the sum of
 * all of the backend weights. When the backend has more than one endpoint the
 * requests that end up on the backend are roundrobin distributed among the
 * endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no
 * requests to the backend. If all weights are zero the route will be
 * considered to have no backends and return a standard 503 response.
 *
 * The `tls` field is optional and allows specific certificates or behavior for
 * the route. Routers typically configure a default certificate on a wildcard
 * domain to terminate routes without explicit certificates, but custom
 * hostnames usually must choose passthrough (send traffic directly to the
 * backend via the TLS Server-Name- Indication field) or provide a certificate.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteSpec {
  /**
   * @member {Comgithubopenshiftapiroutev1RouteTargetReference[]}
   * [alternateBackends] alternateBackends allows up to 3 additional backends
   * to be assigned to the route. Only the Service kind is allowed, and it will
   * be defaulted to Service. Use the weight field in RouteTargetReference
   * object to specify relative preference.
   */
  alternateBackends?: Comgithubopenshiftapiroutev1RouteTargetReference[];
  /**
   * @member {string} host host is an alias/DNS that points to the service.
   * Optional. If not specified a route name will typically be automatically
   * chosen. Must follow DNS952 subdomain conventions.
   */
  host: string;
  /**
   * @member {string} [path] Path that the router watches for, to route traffic
   * for to the service. Optional
   */
  path?: string;
  /**
   * @member {Comgithubopenshiftapiroutev1RoutePort} [port] If specified, the
   * port to be used by the router. Most routers will use all endpoints exposed
   * by the service by default - set this value to instruct routers which port
   * to use.
   */
  port?: Comgithubopenshiftapiroutev1RoutePort;
  /**
   * @member {Comgithubopenshiftapiroutev1TLSConfig} [tls] The tls field
   * provides the ability to configure certificates and termination for the
   * route.
   */
  tls?: Comgithubopenshiftapiroutev1TLSConfig;
  /**
   * @member {Comgithubopenshiftapiroutev1RouteTargetReference} to to is an
   * object the route should use as the primary backend. Only the Service kind
   * is allowed, and it will be defaulted to Service. If the weight field
   * (0-256 default 1) is set to zero, no traffic will be sent to this backend.
   */
  to: Comgithubopenshiftapiroutev1RouteTargetReference;
  /**
   * @member {string} [wildcardPolicy] Wildcard policy if any for the route.
   * Currently only 'Subdomain' or 'None' is allowed.
   */
  wildcardPolicy?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteIngressCondition.
 * RouteIngressCondition contains details for the current condition of this
 * route on a particular router.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteIngressCondition {
  /**
   * @member {Date} [lastTransitionTime] RFC 3339 date and time when this
   * condition last transitioned
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason for the condition's last
   * transition, and is usually a machine and human readable constant
   */
  reason?: string;
  /**
   * @member {string} status Status is the status of the condition. Can be
   * True, False, Unknown.
   */
  status: string;
  /**
   * @member {string} type Type is the type of the condition. Currently only
   * Ready.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteIngress.
 * RouteIngress holds information about the places where a route is exposed.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteIngress {
  /**
   * @member {Comgithubopenshiftapiroutev1RouteIngressCondition[]} [conditions]
   * Conditions is the state of the route, may be empty.
   */
  conditions?: Comgithubopenshiftapiroutev1RouteIngressCondition[];
  /**
   * @member {string} [host] Host is the host string under which the route is
   * exposed; this value is required
   */
  host?: string;
  /**
   * @member {string} [routerCanonicalHostname] CanonicalHostname is the
   * external host name for the router that can be used as a CNAME for the host
   * requested for this route. This value is optional and may not be set in all
   * cases.
   */
  routerCanonicalHostname?: string;
  /**
   * @member {string} [routerName] Name is a name chosen by the router to
   * identify itself; this value is required
   */
  routerName?: string;
  /**
   * @member {string} [wildcardPolicy] Wildcard policy is the wildcard policy
   * that was allowed where this route is exposed.
   */
  wildcardPolicy?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteStatus.
 * RouteStatus provides relevant info about the status of a route, including
 * which routers acknowledge it.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteStatus {
  /**
   * @member {Comgithubopenshiftapiroutev1RouteIngress[]} ingress ingress
   * describes the places where the route may be exposed. The list of ingress
   * points may contain duplicate Host or RouterName values. Routes are
   * considered live once they are `Ready`
   */
  ingress: Comgithubopenshiftapiroutev1RouteIngress[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1Route.
 * A route allows developers to expose services through an HTTP(S) aware load
 * balancing and proxy layer via a public DNS entry. The route may further
 * specify TLS options and a certificate, or specify a public CNAME that the
 * router should also accept for HTTP and HTTPS traffic. An administrator
 * typically configures their router to be visible outside the cluster
 * firewall, and may also add additional security, caching, or traffic controls
 * on the service content. Routers usually talk directly to the service
 * endpoints.
 *
 * Once a route is created, the `host` field may not be changed. Generally,
 * routers use the oldest route with a given host when resolving conflicts.
 *
 * Routers are subject to additional customization and may support additional
 * controls via the annotations field.
 *
 * Because administrators may configure multiple routers, the route status
 * field is used to return information to clients about the names and states of
 * the route under each router. If a client chooses a duplicate name, for
 * instance, the route status conditions are used to indicate the route cannot
 * be chosen.
 *
 */
export interface Comgithubopenshiftapiroutev1Route {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapiroutev1RouteSpec} spec spec is the desired
   * state of the route
   */
  spec: Comgithubopenshiftapiroutev1RouteSpec;
  /**
   * @member {Comgithubopenshiftapiroutev1RouteStatus} status status is the
   * current state of the route
   */
  status: Comgithubopenshiftapiroutev1RouteStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiroutev1RouteList.
 * RouteList is a collection of Routes.
 *
 */
export interface Comgithubopenshiftapiroutev1RouteList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiroutev1Route[]} items items is a list of
   * routes
   */
  items: Comgithubopenshiftapiroutev1Route[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1AllowedFlexVolume.
 * AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
 *
 */
export interface Comgithubopenshiftapisecurityv1AllowedFlexVolume {
  /**
   * @member {string} driver Driver is the name of the Flexvolume driver.
   */
  driver: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1IDRange.
 * IDRange provides a min/max of an allowed range of IDs.
 *
 */
export interface Comgithubopenshiftapisecurityv1IDRange {
  /**
   * @member {number} [max] Max is the end of the range, inclusive.
   */
  max?: number;
  /**
   * @member {number} [min] Min is the start of the range, inclusive.
   */
  min?: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1FSGroupStrategyOptions.
 * FSGroupStrategyOptions defines the strategy type and options used to create
 * the strategy.
 *
 */
export interface Comgithubopenshiftapisecurityv1FSGroupStrategyOptions {
  /**
   * @member {Comgithubopenshiftapisecurityv1IDRange[]} [ranges] Ranges are the
   * allowed ranges of fs groups.  If you would like to force a single fs group
   * then supply a single range with the same start and end.
   */
  ranges?: Comgithubopenshiftapisecurityv1IDRange[];
  /**
   * @member {string} [type] Type is the strategy that will dictate what
   * FSGroup is used in the SecurityContext.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec.
 * PodSecurityPolicyReviewSpec defines specification for
 * PodSecurityPolicyReview
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec {
  /**
   * @member {string[]} [serviceAccountNames] serviceAccountNames is an
   * optional set of ServiceAccounts to run the check with. If
   * serviceAccountNames is empty, the template.spec.serviceAccountName is
   * used, unless it's empty, in which case "default" is used instead. If
   * serviceAccountNames is specified, template.spec.serviceAccountName is
   * ignored.
   */
  serviceAccountNames?: string[];
  /**
   * @member {V1PodTemplateSpec} template template is the
   * PodTemplateSpec to check. The template.spec.serviceAccountName field is
   * used if serviceAccountNames is empty, unless the
   * template.spec.serviceAccountName is empty, in which case "default" is
   * used. If serviceAccountNames is specified,
   * template.spec.serviceAccountName is ignored.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus.
 * ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name
 * and related review status
 *
 */
export interface Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus {
  /**
   * @member {V1ObjectReference} [allowedBy] allowedBy is a
   * reference to the rule that allows the PodTemplateSpec. A rule can be a
   * SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that
   * it was denied.
   */
  allowedBy?: V1ObjectReference;
  /**
   * @member {string} name name contains the allowed and the denied
   * ServiceAccount name
   */
  name: string;
  /**
   * @member {string} [reason] A machine-readable description of why this
   * operation is in the "Failure" status. If this value is empty there is no
   * information available.
   */
  reason?: string;
  /**
   * @member {V1PodTemplateSpec} [template] template is the
   * PodTemplateSpec after the defaulting is applied.
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus.
 * PodSecurityPolicyReviewStatus represents the status of
 * PodSecurityPolicyReview.
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus {
  /**
   * @member
   * {Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus[]}
   * allowedServiceAccounts allowedServiceAccounts returns the list of service
   * accounts in *this* namespace that have the power to create the
   * PodTemplateSpec.
   */
  allowedServiceAccounts: Comgithubopenshiftapisecurityv1ServiceAccountPodSecurityPolicyReviewStatus[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicyReview.
 * PodSecurityPolicyReview checks which service accounts (not users, since that
 * would be cluster-wide) can create the `PodTemplateSpec` in question.
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicyReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec} spec
   * spec is the PodSecurityPolicy to check.
   */
  spec: Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewSpec;
  /**
   * @member {Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus}
   * [status] status represents the current information/status for the
   * PodSecurityPolicyReview.
   */
  status?: Comgithubopenshiftapisecurityv1PodSecurityPolicyReviewStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec.
 * PodSecurityPolicySelfSubjectReviewSpec contains specification for
 * PodSecurityPolicySelfSubjectReview.
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec {
  /**
   * @member {V1PodTemplateSpec} template template is the
   * PodTemplateSpec to check.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus.
 * PodSecurityPolicySubjectReviewStatus contains information/status for
 * PodSecurityPolicySubjectReview.
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus {
  /**
   * @member {V1ObjectReference} [allowedBy] allowedBy is a
   * reference to the rule that allows the PodTemplateSpec. A rule can be a
   * SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that
   * it was denied.
   */
  allowedBy?: V1ObjectReference;
  /**
   * @member {string} [reason] A machine-readable description of why this
   * operation is in the "Failure" status. If this value is empty there is no
   * information available.
   */
  reason?: string;
  /**
   * @member {V1PodTemplateSpec} [template] template is the
   * PodTemplateSpec after the defaulting is applied.
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview.
 * PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can
 * create the PodTemplateSpec
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member
   * {Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec}
   * spec spec defines specification the PodSecurityPolicySelfSubjectReview.
   */
  spec: Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReviewSpec;
  /**
   * @member
   * {Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus}
   * [status] status represents the current information/status for the
   * PodSecurityPolicySelfSubjectReview.
   */
  status?: Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec.
 * PodSecurityPolicySubjectReviewSpec defines specification for
 * PodSecurityPolicySubjectReview
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec {
  /**
   * @member {string[]} [groups] groups is the groups you're testing for.
   */
  groups?: string[];
  /**
   * @member {V1PodTemplateSpec} template template is the
   * PodTemplateSpec to check. If template.spec.serviceAccountName is empty it
   * will not be defaulted. If its non-empty, it will be checked.
   */
  template: V1PodTemplateSpec;
  /**
   * @member {string} [user] user is the user you're testing for. If you
   * specify "user" but not "group", then is it interpreted as "What if user
   * were not a member of any groups. If user and groups are empty, then the
   * check is performed using *only* the serviceAccountName in the template.
   */
  user?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview.
 * PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can
 * create the PodTemplateSpec.
 *
 */
export interface Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member
   * {Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec} spec
   * spec defines specification for the PodSecurityPolicySubjectReview.
   */
  spec: Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewSpec;
  /**
   * @member
   * {Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus}
   * [status] status represents the current information/status for the
   * PodSecurityPolicySubjectReview.
   */
  status?: Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReviewStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1RangeAllocation.
 * RangeAllocation is used so we can easily expose a RangeAllocation typed for
 * security group
 *
 */
export interface Comgithubopenshiftapisecurityv1RangeAllocation {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Uint8Array} data data is a byte array representing the serialized
   * state of a range allocation.  It is a bitmap with each bit set to one to
   * represent a range is taken.
   */
  data: Uint8Array;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} range range is a string representing a unique label for a
   * range of uids, "1000000000-2000000000/10000".
   */
  range: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1RangeAllocationList.
 * RangeAllocationList is a list of RangeAllocations objects
 *
 */
export interface Comgithubopenshiftapisecurityv1RangeAllocationList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapisecurityv1RangeAllocation[]} items List of
   * RangeAllocations.
   */
  items: Comgithubopenshiftapisecurityv1RangeAllocation[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions.
 * RunAsUserStrategyOptions defines the strategy type and any options used to
 * create the strategy.
 *
 */
export interface Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions {
  /**
   * @member {string} [type] Type is the strategy that will dictate what
   * RunAsUser is used in the SecurityContext.
   */
  type?: string;
  /**
   * @member {number} [uid] UID is the user id that containers must run as.
   * Required for the MustRunAs strategy if not using namespace/service account
   * allocated uids.
   */
  uid?: number;
  /**
   * @member {number} [uidRangeMax] UIDRangeMax defines the max value for a
   * strategy that allocates by range.
   */
  uidRangeMax?: number;
  /**
   * @member {number} [uidRangeMin] UIDRangeMin defines the min value for a
   * strategy that allocates by range.
   */
  uidRangeMin?: number;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions.
 * SELinuxContextStrategyOptions defines the strategy type and any options used
 * to create the strategy.
 *
 */
export interface Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions {
  /**
   * @member {V1SELinuxOptions} [seLinuxOptions] seLinuxOptions
   * required to run as; required for MustRunAs
   */
  seLinuxOptions?: V1SELinuxOptions;
  /**
   * @member {string} [type] Type is the strategy that will dictate what
   * SELinux context is used in the SecurityContext.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions.
 * SupplementalGroupsStrategyOptions defines the strategy type and options used
 * to create the strategy.
 *
 */
export interface Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions {
  /**
   * @member {Comgithubopenshiftapisecurityv1IDRange[]} [ranges] Ranges are the
   * allowed ranges of supplemental groups.  If you would like to force a
   * single supplemental group then supply a single range with the same start
   * and end.
   */
  ranges?: Comgithubopenshiftapisecurityv1IDRange[];
  /**
   * @member {string} [type] Type is the strategy that will dictate what
   * supplemental groups is used in the SecurityContext.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1SecurityContextConstraints.
 * SecurityContextConstraints governs the ability to make requests that affect
 * the SecurityContext that will be applied to a container. For historical
 * reasons SCC was exposed under the core Kubernetes API group. That exposure
 * is deprecated and will be removed in a future release - users should instead
 * use the security.openshift.io group to manage SecurityContextConstraints.
 *
 */
export interface Comgithubopenshiftapisecurityv1SecurityContextConstraints {
  /**
   * @member {boolean} allowHostDirVolumePlugin AllowHostDirVolumePlugin
   * determines if the policy allow containers to use the HostDir volume plugin
   */
  allowHostDirVolumePlugin: boolean;
  /**
   * @member {boolean} allowHostIPC AllowHostIPC determines if the policy
   * allows host ipc in the containers.
   */
  allowHostIPC: boolean;
  /**
   * @member {boolean} allowHostNetwork AllowHostNetwork determines if the
   * policy allows the use of HostNetwork in the pod spec.
   */
  allowHostNetwork: boolean;
  /**
   * @member {boolean} allowHostPID AllowHostPID determines if the policy
   * allows host pid in the containers.
   */
  allowHostPID: boolean;
  /**
   * @member {boolean} allowHostPorts AllowHostPorts determines if the policy
   * allows host ports in the containers.
   */
  allowHostPorts: boolean;
  /**
   * @member {boolean} [allowPrivilegeEscalation] AllowPrivilegeEscalation
   * determines if a pod can request to allow privilege escalation. If
   * unspecified, defaults to true.
   */
  allowPrivilegeEscalation?: boolean;
  /**
   * @member {boolean} allowPrivilegedContainer AllowPrivilegedContainer
   * determines if a container can request to be run as privileged.
   */
  allowPrivilegedContainer: boolean;
  /**
   * @member {string[]} allowedCapabilities AllowedCapabilities is a list of
   * capabilities that can be requested to add to the container. Capabilities
   * in this field maybe added at the pod author's discretion. You must not
   * list a capability in both AllowedCapabilities and
   * RequiredDropCapabilities. To allow all capabilities you may use '*'.
   */
  allowedCapabilities: string[];
  /**
   * @member {Comgithubopenshiftapisecurityv1AllowedFlexVolume[]}
   * [allowedFlexVolumes] AllowedFlexVolumes is a whitelist of allowed
   * Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.
   * This parameter is effective only when the usage of the Flexvolumes is
   * allowed in the "Volumes" field.
   */
  allowedFlexVolumes?: Comgithubopenshiftapisecurityv1AllowedFlexVolume[];
  /**
   * @member {string[]} [allowedUnsafeSysctls] AllowedUnsafeSysctls is a list
   * of explicitly allowed unsafe sysctls, defaults to none. Each entry is
   * either a plain sysctl name or ends in "*" in which case it is considered
   * as a prefix of allowed sysctls. Single * means all unsafe sysctls are
   * allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to
   * avoid rejection.
   *
   * Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * allows "foo.bar", "foo.baz", etc.
   */
  allowedUnsafeSysctls?: string[];
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string[]} defaultAddCapabilities DefaultAddCapabilities is the
   * default set of capabilities that will be added to the container unless the
   * pod spec specifically drops the capability.  You may not list a
   * capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
   */
  defaultAddCapabilities: string[];
  /**
   * @member {boolean} [defaultAllowPrivilegeEscalation]
   * DefaultAllowPrivilegeEscalation controls the default setting for whether a
   * process can gain more privileges than its parent process.
   */
  defaultAllowPrivilegeEscalation?: boolean;
  /**
   * @member {string[]} [forbiddenSysctls] ForbiddenSysctls is a list of
   * explicitly forbidden sysctls, defaults to none. Each entry is either a
   * plain sysctl name or ends in "*" in which case it is considered as a
   * prefix of forbidden sysctls. Single * means all sysctls are forbidden.
   *
   * Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * forbids "foo.bar", "foo.baz", etc.
   */
  forbiddenSysctls?: string[];
  /**
   * @member {Comgithubopenshiftapisecurityv1FSGroupStrategyOptions} [fsGroup]
   * FSGroup is the strategy that will dictate what fs group is used by the
   * SecurityContext.
   */
  fsGroup?: Comgithubopenshiftapisecurityv1FSGroupStrategyOptions;
  /**
   * @member {string[]} [groups] The groups that have permission to use this
   * security context constraints
   */
  groups?: string[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} priority Priority influences the sort order of SCCs when
   * evaluating which SCCs to try first for a given pod request based on access
   * in the Users and Groups fields.  The higher the int, the higher priority.
   * An unset value is considered a 0 priority. If scores for multiple SCCs are
   * equal they will be sorted from most restrictive to least restrictive. If
   * both priorities and restrictions are equal the SCCs will be sorted by
   * name.
   */
  priority: number;
  /**
   * @member {boolean} readOnlyRootFilesystem ReadOnlyRootFilesystem when set
   * to true will force containers to run with a read only root file system.
   * If the container specifically requests to run with a non-read only root
   * file system the SCC should deny the pod. If set to false the container may
   * run with a read only root file system if it wishes but it will not be
   * forced to.
   */
  readOnlyRootFilesystem: boolean;
  /**
   * @member {string[]} requiredDropCapabilities RequiredDropCapabilities are
   * the capabilities that will be dropped from the container.  These are
   * required to be dropped and cannot be added.
   */
  requiredDropCapabilities: string[];
  /**
   * @member {Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions}
   * [runAsUser] RunAsUser is the strategy that will dictate what RunAsUser is
   * used in the SecurityContext.
   */
  runAsUser?: Comgithubopenshiftapisecurityv1RunAsUserStrategyOptions;
  /**
   * @member {Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions}
   * [seLinuxContext] SELinuxContext is the strategy that will dictate what
   * labels will be set in the SecurityContext.
   */
  seLinuxContext?: Comgithubopenshiftapisecurityv1SELinuxContextStrategyOptions;
  /**
   * @member {string[]} [seccompProfiles] SeccompProfiles lists the allowed
   * profiles that may be set for the pod or container's seccomp annotations.
   * An unset (nil) or empty value means that no profiles may be specifid by
   * the pod or container.	The wildcard '*' may be used to allow all profiles.
   * When used to generate a value for a pod the first non-wildcard profile
   * will be used as the default.
   */
  seccompProfiles?: string[];
  /**
   * @member {Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions}
   * [supplementalGroups] SupplementalGroups is the strategy that will dictate
   * what supplemental groups are used by the SecurityContext.
   */
  supplementalGroups?: Comgithubopenshiftapisecurityv1SupplementalGroupsStrategyOptions;
  /**
   * @member {string[]} [users] The users who have permissions to use this
   * security context constraints
   */
  users?: string[];
  /**
   * @member {string[]} volumes Volumes is a white list of allowed volume
   * plugins.  FSType corresponds directly with the field names of a
   * VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you
   * may use "*". To allow no volumes, set to ["none"].
   */
  volumes: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapisecurityv1SecurityContextConstraintsList.
 * SecurityContextConstraintsList is a list of SecurityContextConstraints
 * objects
 *
 */
export interface Comgithubopenshiftapisecurityv1SecurityContextConstraintsList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapisecurityv1SecurityContextConstraints[]}
   * items List of security context constraints.
   */
  items: Comgithubopenshiftapisecurityv1SecurityContextConstraints[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec.
 * BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance.
 *
 */
export interface Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec {
  /**
   * @member {string[]} [bindingIDs] bindingids is a list of 'binding_id's
   * provided during successive bind calls to the template service broker.
   */
  bindingIDs?: string[];
  /**
   * @member {V1ObjectReference} secret secret is a reference to a
   * Secret object residing in a namespace, containing the necessary template
   * parameters.
   */
  secret: V1ObjectReference;
  /**
   * @member {V1ObjectReference} templateInstance templateinstance
   * is a reference to a TemplateInstance object residing in a namespace.
   */
  templateInstance: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1BrokerTemplateInstance.
 * BrokerTemplateInstance holds the service broker-related state associated
 * with a TemplateInstance.  BrokerTemplateInstance is part of an experimental
 * API.
 *
 */
export interface Comgithubopenshiftapitemplatev1BrokerTemplateInstance {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec} spec
   * spec describes the state of this BrokerTemplateInstance.
   */
  spec: Comgithubopenshiftapitemplatev1BrokerTemplateInstanceSpec;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList.
 * BrokerTemplateInstanceList is a list of BrokerTemplateInstance objects.
 *
 */
export interface Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapitemplatev1BrokerTemplateInstance[]} items
   * items is a list of BrokerTemplateInstances
   */
  items: Comgithubopenshiftapitemplatev1BrokerTemplateInstance[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1Parameter.
 * Parameter defines a name/value variable that is to be processed during the
 * Template to Config transformation.
 *
 */
export interface Comgithubopenshiftapitemplatev1Parameter {
  /**
   * @member {string} [description] Description of a parameter. Optional.
   */
  description?: string;
  /**
   * @member {string} [displayName] Optional: The name that will show in UI
   * instead of parameter 'Name'
   */
  displayName?: string;
  /**
   * @member {string} [from] From is an input value for the generator.
   * Optional.
   */
  from?: string;
  /**
   * @member {string} [generate] generate specifies the generator to be used to
   * generate random string from an input value specified by From field. The
   * result string is stored into Value field. If empty, no generator is being
   * used, leaving the result Value untouched. Optional.
   *
   * The only supported generator is "expression", which accepts a "from" value
   * in the form of a simple regular expression containing the range expression
   * "[a-zA-Z0-9]", and the length expression "a{length}".
   *
   * Examples:
   *
   * from             | value ----------------------------- "test[0-9]{1}x"  |
   * "test7x" "[0-1]{8}"       | "01001100" "0x[A-F0-9]{4}"  | "0xB3AF"
   * "[a-zA-Z0-9]{8}" | "hW4yQU5i"
   */
  generate?: string;
  /**
   * @member {string} name Name must be set and it can be referenced in
   * Template Items using ${PARAMETER_NAME}. Required.
   */
  name: string;
  /**
   * @member {boolean} [required] Optional: Indicates the parameter must have a
   * value.  Defaults to false.
   */
  required?: boolean;
  /**
   * @member {string} [value] Value holds the Parameter data. If specified, the
   * generator will be ignored. The value replaces all occurrences of the
   * Parameter ${Name} expression during the Template to Config transformation.
   * Optional.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1Template.
 * Template contains the inputs needed to produce a Config.
 *
 */
export interface Comgithubopenshiftapitemplatev1Template {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {{ [propertyName: string]: string }} [labels] labels is a optional
   * set of labels that are applied to every object during the Template to
   * Config transformation.
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {string} [message] message is an optional instructional message
   * that will be displayed when this template is instantiated. This field
   * should inform the user how to utilize the newly created resources.
   * Parameter substitution will be performed on the message before being
   * displayed so that generated credentials and other parameters can be
   * included in the output.
   */
  message?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension[]} objects objects is an
   * array of resources to include in this template. If a namespace value is
   * hardcoded in the object, it will be removed during template instantiation,
   * however if the namespace value is, or contains, a ${PARAMETER_REFERENCE},
   * the resolved value after parameter substitution will be respected and the
   * object will be created in that namespace.
   */
  objects: Iok8sapimachinerypkgruntimeRawExtension[];
  /**
   * @member {Comgithubopenshiftapitemplatev1Parameter[]} [parameters]
   * parameters is an optional array of Parameters used during the Template to
   * Config transformation.
   */
  parameters?: Comgithubopenshiftapitemplatev1Parameter[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceRequester.
 * TemplateInstanceRequester holds the identity of an agent requesting a
 * template instantiation.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceRequester {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] extra holds
   * additional information provided by the authenticator.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [groups] groups represent the groups this user is a
   * part of.
   */
  groups?: string[];
  /**
   * @member {string} [uid] uid is a unique value that identifies this user
   * across time; if this user is deleted and another user by the same name is
   * added, they will have different UIDs.
   */
  uid?: string;
  /**
   * @member {string} [username] username uniquely identifies this user among
   * all active users.
   */
  username?: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceSpec.
 * TemplateInstanceSpec describes the desired state of a TemplateInstance.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceSpec {
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstanceRequester}
   * requester requester holds the identity of the agent requesting the
   * template instantiation.
   */
  requester: Comgithubopenshiftapitemplatev1TemplateInstanceRequester;
  /**
   * @member {V1LocalObjectReference} [secret] secret is a
   * reference to a Secret object containing the necessary template parameters.
   */
  secret?: V1LocalObjectReference;
  /**
   * @member {Comgithubopenshiftapitemplatev1Template} template template is a
   * full copy of the template for instantiation.
   */
  template: Comgithubopenshiftapitemplatev1Template;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceCondition.
 * TemplateInstanceCondition contains condition information for a
 * TemplateInstance.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceCondition {
  /**
   * @member {Date} lastTransitionTime LastTransitionTime is the last time a
   * condition status transitioned from one state to another.
   */
  lastTransitionTime: Date;
  /**
   * @member {string} message Message is a human readable description of the
   * details of the last transition, complementing reason.
   */
  message: string;
  /**
   * @member {string} reason Reason is a brief machine readable explanation for
   * the condition's last transition.
   */
  reason: string;
  /**
   * @member {string} status Status of the condition, one of True, False or
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of the condition, currently Ready or
   * InstantiateFailure.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceObject.
 * TemplateInstanceObject references an object created by a TemplateInstance.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceObject {
  /**
   * @member {V1ObjectReference} [ref] ref is a reference to the
   * created object.  When used under .spec, only name and namespace are used;
   * these can contain references to parameters which will be substituted
   * following the usual rules.
   */
  ref?: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceStatus.
 * TemplateInstanceStatus describes the current state of a TemplateInstance.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceStatus {
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstanceCondition[]}
   * [conditions] conditions represent the latest available observations of a
   * TemplateInstance's current state.
   */
  conditions?: Comgithubopenshiftapitemplatev1TemplateInstanceCondition[];
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstanceObject[]}
   * [objects] Objects references the objects created by the TemplateInstance.
   */
  objects?: Comgithubopenshiftapitemplatev1TemplateInstanceObject[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstance.
 * TemplateInstance requests and records the instantiation of a Template.
 * TemplateInstance is part of an experimental API.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstance {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstanceSpec} spec spec
   * describes the desired state of this TemplateInstance.
   */
  spec: Comgithubopenshiftapitemplatev1TemplateInstanceSpec;
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstanceStatus} status
   * status describes the current state of this TemplateInstance.
   */
  status: Comgithubopenshiftapitemplatev1TemplateInstanceStatus;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateInstanceList.
 * TemplateInstanceList is a list of TemplateInstance objects.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateInstanceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapitemplatev1TemplateInstance[]} items items is
   * a list of Templateinstances
   */
  items: Comgithubopenshiftapitemplatev1TemplateInstance[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapitemplatev1TemplateList.
 * TemplateList is a list of Template objects.
 *
 */
export interface Comgithubopenshiftapitemplatev1TemplateList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapitemplatev1Template[]} items Items is a list
   * of templates
   */
  items: Comgithubopenshiftapitemplatev1Template[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1Group.
 * Group represents a referenceable set of Users
 *
 */
export interface Comgithubopenshiftapiuserv1Group {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string[]} users Users is the list of users in this group.
   */
  users: string[];
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1GroupList.
 * GroupList is a collection of Groups
 *
 */
export interface Comgithubopenshiftapiuserv1GroupList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiuserv1Group[]} items Items is the list of
   * groups
   */
  items: Comgithubopenshiftapiuserv1Group[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1Identity.
 * Identity records a successful authentication of a user with an identity
 * provider. The information about the source of authentication is stored on
 * the identity, and the identity is then associated with a single user object.
 * Multiple identities can reference a single user. Information retrieved from
 * the authentication provider is stored in the extra field using a schema
 * determined by the provider.
 *
 */
export interface Comgithubopenshiftapiuserv1Identity {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {{ [propertyName: string]: string }} [extra] Extra holds extra
   * information about this identity
   */
  extra?: { [propertyName: string]: string };
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} providerName ProviderName is the source of identity
   * information
   */
  providerName: string;
  /**
   * @member {string} providerUserName ProviderUserName uniquely represents
   * this identity in the scope of the provider
   */
  providerUserName: string;
  /**
   * @member {V1ObjectReference} user User is a reference to the
   * user this identity is associated with Both Name and UID must be set
   */
  user: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1IdentityList.
 * IdentityList is a collection of Identities
 *
 */
export interface Comgithubopenshiftapiuserv1IdentityList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiuserv1Identity[]} items Items is the list of
   * identities
   */
  items: Comgithubopenshiftapiuserv1Identity[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1User.
 * Upon log in, every user of the system receives a User and Identity resource.
 * Administrators may directly manipulate the attributes of the users for their
 * own tracking, or set groups via the API. The user name is unique and is
 * chosen based on the value provided by the identity provider - if a user
 * already exists with the incoming name, the user name may have a number
 * appended to it depending on the configuration of the system.
 *
 */
export interface Comgithubopenshiftapiuserv1User {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [fullName] FullName is the full name of user
   */
  fullName?: string;
  /**
   * @member {string[]} groups Groups specifies group names this user is a
   * member of. This field is deprecated and will be removed in a future
   * release. Instead, create a Group object containing the name of this User.
   */
  groups: string[];
  /**
   * @member {string[]} identities Identities are the identities associated
   * with this user
   */
  identities: string[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1UserIdentityMapping.
 * UserIdentityMapping maps a user to an identity
 *
 */
export interface Comgithubopenshiftapiuserv1UserIdentityMapping {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ObjectReference} [identity] Identity is a reference
   * to an identity
   */
  identity?: V1ObjectReference;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ObjectReference} [user] User is a reference to a
   * user
   */
  user?: V1ObjectReference;
}

/**
 * @interface
 * An interface representing Comgithubopenshiftapiuserv1UserList.
 * UserList is a collection of Users
 *
 */
export interface Comgithubopenshiftapiuserv1UserList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Comgithubopenshiftapiuserv1User[]} items Items is the list of
   * users
   */
  items: Comgithubopenshiftapiuserv1User[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1ServiceReference.
 * ServiceReference holds a reference to Service.legacy.k8s.io
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1ServiceReference {
  /**
   * @member {string} name `name` is the name of the service. Required
   */
  name: string;
  /**
   * @member {string} namespace `namespace` is the namespace of the service.
   * Required
   */
  namespace: string;
  /**
   * @member {string} [path] `path` is an optional URL path which will be sent
   * in any request to this service.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1WebhookClientConfig.
 * WebhookClientConfig contains the information to make a TLS connection with
 * the webhook
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1WebhookClientConfig {
  /**
   * @member {Uint8Array} caBundle `caBundle` is a PEM encoded CA bundle which
   * will be used to validate the webhook's server certificate. Required.
   */
  caBundle: Uint8Array;
  /**
   * @member {Iok8sapiadmissionregistrationv1beta1ServiceReference} [service]
   * `service` is a reference to the service for this webhook. Either `service`
   * or `url` must be specified.
   *
   * If the webhook is running within the cluster, then you should use
   * `service`.
   *
   * Port 443 will be used if it is open, otherwise it is an error.
   */
  service?: Iok8sapiadmissionregistrationv1beta1ServiceReference;
  /**
   * @member {string} [url] `url` gives the location of the webhook, in
   * standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or
   * `service` must be specified.
   *
   * The `host` should not refer to a service running in the cluster; use the
   * `service` field instead. The host might be resolved via external DNS in
   * some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as
   * that would be a layering violation). `host` may also be an IP address.
   *
   * Please note that using `localhost` or `127.0.0.1` as a `host` is risky
   * unless you take great care to run this webhook on all hosts which run an
   * apiserver which might need to make calls to this webhook. Such installs
   * are likely to be non-portable, i.e., not easy to turn up in a new cluster.
   *
   * The scheme must be "https"; the URL must begin with "https://".
   *
   * A path is optional, and if present may be any string permissible in a URL.
   * You may use the path to pass an arbitrary string to the webhook, for
   * example, a cluster identifier.
   *
   * Attempting to use a user or basic auth e.g. "user:password@" is not
   * allowed. Fragments ("#...") and query parameters ("?...") are not allowed,
   * either.
   */
  url?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1RuleWithOperations.
 * RuleWithOperations is a tuple of Operations and Resources. It is recommended
 * to make sure that all the tuple expansions are valid.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1RuleWithOperations {
  /**
   * @member {string[]} [apiGroups] APIGroups is the API groups the resources
   * belong to. '*' is all groups. If '*' is present, the length of the slice
   * must be one. Required.
   */
  apiGroups?: string[];
  /**
   * @member {string[]} [apiVersions] APIVersions is the API versions the
   * resources belong to. '*' is all versions. If '*' is present, the length of
   * the slice must be one. Required.
   */
  apiVersions?: string[];
  /**
   * @member {string[]} [operations] Operations is the operations the admission
   * hook cares about - CREATE, UPDATE, or * for all operations. If '*' is
   * present, the length of the slice must be one. Required.
   */
  operations?: string[];
  /**
   * @member {string[]} [resources] Resources is a list of resources this rule
   * applies to.
   *
   * For example: 'pods' means pods. 'pods/log' means the log subresource of
   * pods. '*' means all resources, but not subresources. 'pods/*' means all
   * subresources of pods. '*\/scale' means all scale subresources. '*\/*' means
   * all resources and their subresources.
   *
   * If wildcard is present, the validation rule will ensure resources do not
   * overlap with each other.
   *
   * Depending on the enclosing object, subresources might not be allowed.
   * Required.
   */
  resources?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1Webhook.
 * Webhook describes an admission webhook and the resources and operations it
 * applies to.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1Webhook {
  /**
   * @member {Iok8sapiadmissionregistrationv1beta1WebhookClientConfig}
   * clientConfig ClientConfig defines how to communicate with the hook.
   * Required
   */
  clientConfig: Iok8sapiadmissionregistrationv1beta1WebhookClientConfig;
  /**
   * @member {string} [failurePolicy] FailurePolicy defines how unrecognized
   * errors from the admission endpoint are handled - allowed values are Ignore
   * or Fail. Defaults to Ignore.
   */
  failurePolicy?: string;
  /**
   * @member {string} name The name of the admission webhook. Name should be
   * fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is
   * the name of the webhook, and kubernetes.io is the name of the
   * organization. Required.
   */
  name: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [namespaceSelector]
   * NamespaceSelector decides whether to run the webhook on an object based on
   * whether the namespace for that object matches the selector. If the object
   * itself is a namespace, the matching is performed on
   * object.metadata.labels. If the object is another cluster scoped resource,
   * it never skips the webhook.
   *
   * For example, to run the webhook on any objects whose namespace is not
   * associated with "runlevel" of "0" or "1";  you will set the selector as
   * follows: "namespaceSelector": {
   * "matchExpressions": [
   * {
   * "key": "runlevel",
   * "operator": "NotIn",
   * "values": [
   * "0",
   * "1"
   * ]
   * }
   * ]
   * }
   *
   * If instead you want to only run the webhook on any objects whose namespace
   * is associated with the "environment" of "prod" or "staging"; you will set
   * the selector as follows: "namespaceSelector": {
   * "matchExpressions": [
   * {
   * "key": "environment",
   * "operator": "In",
   * "values": [
   * "prod",
   * "staging"
   * ]
   * }
   * ]
   * }
   *
   * See
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
   * for more examples of label selectors.
   *
   * Default to the empty LabelSelector, which matches everything.
   */
  namespaceSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapiadmissionregistrationv1beta1RuleWithOperations[]} [rules]
   * Rules describes what operations on what resources/subresources the webhook
   * cares about. The webhook cares about an operation if it matches _any_
   * Rule. However, in order to prevent ValidatingAdmissionWebhooks and
   * MutatingAdmissionWebhooks from putting the cluster in a state which cannot
   * be recovered from without completely disabling the plugin,
   * ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called
   * on admission requests for ValidatingWebhookConfiguration and
   * MutatingWebhookConfiguration objects.
   */
  rules?: Iok8sapiadmissionregistrationv1beta1RuleWithOperations[];
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration.
 * MutatingWebhookConfiguration describes the configuration of and admission
 * webhook that accept or reject and may change the object.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiadmissionregistrationv1beta1Webhook[]} [webhooks]
   * Webhooks is a list of webhooks and the affected resources and operations.
   */
  webhooks?: Iok8sapiadmissionregistrationv1beta1Webhook[];
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList.
 * MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member
   * {Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration[]} items
   * List of MutatingWebhookConfiguration.
   */
  items: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration.
 * ValidatingWebhookConfiguration describes the configuration of and admission
 * webhook that accept or reject and object without changing it.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiadmissionregistrationv1beta1Webhook[]} [webhooks]
   * Webhooks is a list of webhooks and the affected resources and operations.
   */
  webhooks?: Iok8sapiadmissionregistrationv1beta1Webhook[];
}

/**
 * @interface
 * An interface representing Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList.
 * ValidatingWebhookConfigurationList is a list of
 * ValidatingWebhookConfiguration.
 *
 */
export interface Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member
   * {Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration[]}
   * items List of ValidatingWebhookConfiguration.
   */
  items: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ControllerRevision.
 * ControllerRevision implements an immutable snapshot of state data. Clients
 * are responsible for serializing and deserializing the objects that contain
 * their internal state. Once a ControllerRevision has been successfully
 * created, it can not be updated. The API Server will fail validation of all
 * requests that attempt to mutate the Data field. ControllerRevisions may,
 * however, be deleted. Note that, due to its use by both the DaemonSet and
 * StatefulSet controllers for update and rollback, this object is beta.
 * However, it may be subject to name and representation changes in future
 * releases, and clients should not depend on its stability. It is primarily
 * for internal use by controllers.
 *
 */
export interface Iok8sapiappsv1ControllerRevision {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [data] Data is the
   * serialized representation of the state.
   */
  data?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} revision Revision indicates the revision of the state
   * represented by Data.
   */
  revision: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ControllerRevisionList.
 * ControllerRevisionList is a resource containing a list of ControllerRevision
 * objects.
 *
 */
export interface Iok8sapiappsv1ControllerRevisionList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1ControllerRevision[]} items Items is the list of
   * ControllerRevisions
   */
  items: Iok8sapiappsv1ControllerRevision[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1RollingUpdateDaemonSet.
 * Spec to control the desired behavior of daemon set rolling update.
 *
 */
export interface Iok8sapiappsv1RollingUpdateDaemonSet {
  /**
   * @member {string} [maxUnavailable] The maximum number of DaemonSet pods
   * that can be unavailable during the update. Value can be an absolute number
   * (ex: 5) or a percentage of total number of DaemonSet pods at the start of
   * the update (ex: 10%). Absolute number is calculated from percentage by
   * rounding up. This cannot be 0. Default value is 1. Example: when this is
   * set to 30%, at most 30% of the total number of nodes that should be
   * running the daemon pod (i.e. status.desiredNumberScheduled) can have their
   * pods stopped for an update at any given time. The update starts by
   * stopping at most 30% of those DaemonSet pods and then brings up new
   * DaemonSet pods in their place. Once the new pods are available, it then
   * proceeds onto other DaemonSet pods, thus ensuring that at least 70% of
   * original number of DaemonSet pods are available at all times during the
   * update.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSetUpdateStrategy.
 * DaemonSetUpdateStrategy is a struct used to control the update strategy for
 * a DaemonSet.
 *
 */
export interface Iok8sapiappsv1DaemonSetUpdateStrategy {
  /**
   * @member {Iok8sapiappsv1RollingUpdateDaemonSet} [rollingUpdate] Rolling
   * update config params. Present only if type = "RollingUpdate".
   */
  rollingUpdate?: Iok8sapiappsv1RollingUpdateDaemonSet;
  /**
   * @member {string} [type] Type of daemon set update. Can be "RollingUpdate"
   * or "OnDelete". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSetSpec.
 * DaemonSetSpec is the specification of a daemon set.
 *
 */
export interface Iok8sapiappsv1DaemonSetSpec {
  /**
   * @member {number} [minReadySeconds] The minimum number of seconds for which
   * a newly created DaemonSet pod should be ready without any of its container
   * crashing, for it to be considered available. Defaults to 0 (pod will be
   * considered available as soon as it is ready).
   */
  minReadySeconds?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old history to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector A label
   * query over pods that are managed by the daemon set. Must match in order to
   * be controlled. It must match the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} template An object that describes
   * the pod that will be created. The DaemonSet will create exactly one copy
   * of this pod on every node that matches the template's node selector (or on
   * every node if no node selector is specified). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template: V1PodTemplateSpec;
  /**
   * @member {Iok8sapiappsv1DaemonSetUpdateStrategy} [updateStrategy] An update
   * strategy to replace existing DaemonSet pods with new pods.
   */
  updateStrategy?: Iok8sapiappsv1DaemonSetUpdateStrategy;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSetCondition.
 * DaemonSetCondition describes the state of a DaemonSet at a certain point.
 *
 */
export interface Iok8sapiappsv1DaemonSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of DaemonSet condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSetStatus.
 * DaemonSetStatus represents the current status of a daemon set.
 *
 */
export interface Iok8sapiappsv1DaemonSetStatus {
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * DaemonSet. The DaemonSet controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1DaemonSetCondition[]} [conditions] Represents the
   * latest available observations of a DaemonSet's current state.
   */
  conditions?: Iok8sapiappsv1DaemonSetCondition[];
  /**
   * @member {number} currentNumberScheduled The number of nodes that are
   * running at least 1 daemon pod and are supposed to run the daemon pod. More
   * info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  currentNumberScheduled: number;
  /**
   * @member {number} desiredNumberScheduled The total number of nodes that
   * should be running the daemon pod (including nodes correctly running the
   * daemon pod). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  desiredNumberScheduled: number;
  /**
   * @member {number} [numberAvailable] The number of nodes that should be
   * running the daemon pod and have one or more of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberAvailable?: number;
  /**
   * @member {number} numberMisscheduled The number of nodes that are running
   * the daemon pod, but are not supposed to run the daemon pod. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  numberMisscheduled: number;
  /**
   * @member {number} numberReady The number of nodes that should be running
   * the daemon pod and have one or more of the daemon pod running and ready.
   */
  numberReady: number;
  /**
   * @member {number} [numberUnavailable] The number of nodes that should be
   * running the daemon pod and have none of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberUnavailable?: number;
  /**
   * @member {number} [observedGeneration] The most recent generation observed
   * by the daemon set controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [updatedNumberScheduled] The total number of nodes that
   * are running updated daemon pod
   */
  updatedNumberScheduled?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSet.
 * DaemonSet represents the configuration of a daemon set.
 *
 */
export interface Iok8sapiappsv1DaemonSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1DaemonSetSpec} [spec] The desired behavior of this
   * daemon set. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiappsv1DaemonSetSpec;
  /**
   * @member {Iok8sapiappsv1DaemonSetStatus} [status] The current status of
   * this daemon set. This data may be out of date by some window of time.
   * Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiappsv1DaemonSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DaemonSetList.
 * DaemonSetList is a collection of daemon sets.
 *
 */
export interface Iok8sapiappsv1DaemonSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1DaemonSet[]} items A list of daemon sets.
   */
  items: Iok8sapiappsv1DaemonSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1RollingUpdateDeployment.
 * Spec to control the desired behavior of rolling update.
 *
 */
export interface Iok8sapiappsv1RollingUpdateDeployment {
  /**
   * @member {string} [maxSurge] The maximum number of pods that can be
   * scheduled above the desired number of pods. Value can be an absolute
   * number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be
   * 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by
   * rounding up. Defaults to 25%. Example: when this is set to 30%, the new
   * ReplicaSet can be scaled up immediately when the rolling update starts,
   * such that the total number of old and new pods do not exceed 130% of
   * desired pods. Once old pods have been killed, new ReplicaSet can be scaled
   * up further, ensuring that total number of pods running at any time during
   * the update is at most 130% of desired pods.
   */
  maxSurge?: string;
  /**
   * @member {string} [maxUnavailable] The maximum number of pods that can be
   * unavailable during the update. Value can be an absolute number (ex: 5) or
   * a percentage of desired pods (ex: 10%). Absolute number is calculated from
   * percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults
   * to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled
   * down to 70% of desired pods immediately when the rolling update starts.
   * Once new pods are ready, old ReplicaSet can be scaled down further,
   * followed by scaling up the new ReplicaSet, ensuring that the total number
   * of pods available at all times during the update is at least 70% of
   * desired pods.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DeploymentStrategy.
 * DeploymentStrategy describes how to replace existing pods with new ones.
 *
 */
export interface Iok8sapiappsv1DeploymentStrategy {
  /**
   * @member {Iok8sapiappsv1RollingUpdateDeployment} [rollingUpdate] Rolling
   * update config params. Present only if DeploymentStrategyType =
   * RollingUpdate.
   */
  rollingUpdate?: Iok8sapiappsv1RollingUpdateDeployment;
  /**
   * @member {string} [type] Type of deployment. Can be "Recreate" or
   * "RollingUpdate". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DeploymentSpec.
 * DeploymentSpec is the specification of the desired behavior of the
 * Deployment.
 *
 */
export interface Iok8sapiappsv1DeploymentSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {boolean} [paused] Indicates that the deployment is paused.
   */
  paused?: boolean;
  /**
   * @member {number} [progressDeadlineSeconds] The maximum time in seconds for
   * a deployment to make progress before it is considered to be failed. The
   * deployment controller will continue to process failed deployments and a
   * condition with a ProgressDeadlineExceeded reason will be surfaced in the
   * deployment status. Note that progress will not be estimated during the
   * time a deployment is paused. Defaults to 600s.
   */
  progressDeadlineSeconds?: number;
  /**
   * @member {number} [replicas] Number of desired pods. This is a pointer to
   * distinguish between explicit zero and not specified. Defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old ReplicaSets to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector Label
   * selector for pods. Existing ReplicaSets whose pods are selected by this
   * will be the ones affected by this deployment. It must match the pod
   * template's labels.
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapiappsv1DeploymentStrategy} [strategy] The deployment
   * strategy to use to replace existing pods with new ones.
   */
  strategy?: Iok8sapiappsv1DeploymentStrategy;
  /**
   * @member {V1PodTemplateSpec} template Template describes the
   * pods that will be created.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DeploymentCondition.
 * DeploymentCondition describes the state of a deployment at a certain point.
 *
 */
export interface Iok8sapiappsv1DeploymentCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {Date} [lastUpdateTime] The last time this condition was updated.
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of deployment condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DeploymentStatus.
 * DeploymentStatus is the most recently observed status of the Deployment.
 *
 */
export interface Iok8sapiappsv1DeploymentStatus {
  /**
   * @member {number} [availableReplicas] Total number of available pods (ready
   * for at least minReadySeconds) targeted by this deployment.
   */
  availableReplicas?: number;
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * Deployment. The Deployment controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ReplicaSet.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1DeploymentCondition[]} [conditions] Represents the
   * latest available observations of a deployment's current state.
   */
  conditions?: Iok8sapiappsv1DeploymentCondition[];
  /**
   * @member {number} [observedGeneration] The generation observed by the
   * deployment controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] Total number of ready pods targeted by
   * this deployment.
   */
  readyReplicas?: number;
  /**
   * @member {number} [replicas] Total number of non-terminated pods targeted
   * by this deployment (their labels match the selector).
   */
  replicas?: number;
  /**
   * @member {number} [unavailableReplicas] Total number of unavailable pods
   * targeted by this deployment. This is the total number of pods that are
   * still required for the deployment to have 100% available capacity. They
   * may either be pods that are running but not yet available or pods that
   * still have not been created.
   */
  unavailableReplicas?: number;
  /**
   * @member {number} [updatedReplicas] Total number of non-terminated pods
   * targeted by this deployment that have the desired template spec.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1Deployment.
 * Deployment enables declarative updates for Pods and ReplicaSets.
 *
 */
export interface Iok8sapiappsv1Deployment {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1DeploymentSpec} [spec] Specification of the desired
   * behavior of the Deployment.
   */
  spec?: Iok8sapiappsv1DeploymentSpec;
  /**
   * @member {Iok8sapiappsv1DeploymentStatus} [status] Most recently observed
   * status of the Deployment.
   */
  status?: Iok8sapiappsv1DeploymentStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1DeploymentList.
 * DeploymentList is a list of Deployments.
 *
 */
export interface Iok8sapiappsv1DeploymentList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1Deployment[]} items Items is the list of
   * Deployments.
   */
  items: Iok8sapiappsv1Deployment[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ReplicaSetSpec.
 * ReplicaSetSpec is the specification of a ReplicaSet.
 *
 */
export interface Iok8sapiappsv1ReplicaSetSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {number} [replicas] Replicas is the number of desired replicas.
   * This is a pointer to distinguish between explicit zero and unspecified.
   * Defaults to 1. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector Selector is
   * a label query over pods that should match the replica count. Label keys
   * and values that must match in order to be controlled by this replica set.
   * It must match the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} [template] Template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ReplicaSetCondition.
 * ReplicaSetCondition describes the state of a replica set at a certain point.
 *
 */
export interface Iok8sapiappsv1ReplicaSetCondition {
  /**
   * @member {Date} [lastTransitionTime] The last time the condition
   * transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of replica set condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ReplicaSetStatus.
 * ReplicaSetStatus represents the current status of a ReplicaSet.
 *
 */
export interface Iok8sapiappsv1ReplicaSetStatus {
  /**
   * @member {number} [availableReplicas] The number of available replicas
   * (ready for at least minReadySeconds) for this replica set.
   */
  availableReplicas?: number;
  /**
   * @member {Iok8sapiappsv1ReplicaSetCondition[]} [conditions] Represents the
   * latest available observations of a replica set's current state.
   */
  conditions?: Iok8sapiappsv1ReplicaSetCondition[];
  /**
   * @member {number} [fullyLabeledReplicas] The number of pods that have
   * labels matching the labels of the pod template of the replicaset.
   */
  fullyLabeledReplicas?: number;
  /**
   * @member {number} [observedGeneration] ObservedGeneration reflects the
   * generation of the most recently observed ReplicaSet.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] The number of ready replicas for this
   * replica set.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas Replicas is the most recently oberved number of
   * replicas. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ReplicaSet.
 * ReplicaSet ensures that a specified number of pod replicas are running at
 * any given time.
 *
 */
export interface Iok8sapiappsv1ReplicaSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] If the
   * Labels of a ReplicaSet are empty, they are defaulted to be the same as the
   * Pod(s) that the ReplicaSet manages. Standard object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1ReplicaSetSpec} [spec] Spec defines the
   * specification of the desired behavior of the ReplicaSet. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiappsv1ReplicaSetSpec;
  /**
   * @member {Iok8sapiappsv1ReplicaSetStatus} [status] Status is the most
   * recently observed status of the ReplicaSet. This data may be out of date
   * by some window of time. Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiappsv1ReplicaSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1ReplicaSetList.
 * ReplicaSetList is a collection of ReplicaSets.
 *
 */
export interface Iok8sapiappsv1ReplicaSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1ReplicaSet[]} items List of ReplicaSets. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
   */
  items: Iok8sapiappsv1ReplicaSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1RollingUpdateStatefulSetStrategy.
 * RollingUpdateStatefulSetStrategy is used to communicate parameter for
 * RollingUpdateStatefulSetStrategyType.
 *
 */
export interface Iok8sapiappsv1RollingUpdateStatefulSetStrategy {
  /**
   * @member {number} [partition] Partition indicates the ordinal at which the
   * StatefulSet should be partitioned. Default value is 0.
   */
  partition?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSetUpdateStrategy.
 * StatefulSetUpdateStrategy indicates the strategy that the StatefulSet
 * controller will use to perform updates. It includes any additional
 * parameters necessary to perform the update for the indicated strategy.
 *
 */
export interface Iok8sapiappsv1StatefulSetUpdateStrategy {
  /**
   * @member {Iok8sapiappsv1RollingUpdateStatefulSetStrategy} [rollingUpdate]
   * RollingUpdate is used to communicate parameters when Type is
   * RollingUpdateStatefulSetStrategyType.
   */
  rollingUpdate?: Iok8sapiappsv1RollingUpdateStatefulSetStrategy;
  /**
   * @member {string} [type] Type indicates the type of the
   * StatefulSetUpdateStrategy. Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaimSpec.
 * PersistentVolumeClaimSpec describes the common attributes of storage devices
 * and allows a Source for provider-specific attributes
 *
 */
export interface V1PersistentVolumeClaimSpec {
  /**
   * @member {string[]} [accessModes] AccessModes contains the desired access
   * modes the volume should have. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   */
  accessModes?: string[];
  /**
   * @member {V1ResourceRequirements} [resources] Resources
   * represents the minimum resources the volume should have. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
   */
  resources?: V1ResourceRequirements;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] A label
   * query over volumes to consider for binding.
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string} [storageClassName] Name of the StorageClass required by
   * the claim. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   */
  storageClassName?: string;
  /**
   * @member {string} [volumeMode] volumeMode defines what type of volume is
   * required by the claim. Value of Filesystem is implied when not included in
   * claim spec. This is an alpha feature and may change in the future.
   */
  volumeMode?: string;
  /**
   * @member {string} [volumeName] VolumeName is the binding reference to the
   * PersistentVolume backing this claim.
   */
  volumeName?: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaimCondition.
 * PersistentVolumeClaimCondition contails details about state of pvc
 *
 */
export interface V1PersistentVolumeClaimCondition {
  /**
   * @member {Date} [lastProbeTime] Last time we probed the condition.
   */
  lastProbeTime?: Date;
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human-readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] Unique, this should be a short, machine
   * understandable string that gives the reason for condition's last
   * transition. If it reports "ResizeStarted" that means the underlying
   * persistent volume is being resized.
   */
  reason?: string;
  /**
   * @member {string} status
   */
  status: string;
  /**
   * @member {string} type
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaimStatus.
 * PersistentVolumeClaimStatus is the current status of a persistent volume
 * claim.
 *
 */
export interface V1PersistentVolumeClaimStatus {
  /**
   * @member {string[]} [accessModes] AccessModes contains the actual access
   * modes the volume backing the PVC has. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   */
  accessModes?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [capacity] Represents the
   * actual resources of the underlying volume.
   */
  capacity?: { [propertyName: string]: string };
  /**
   * @member {V1PersistentVolumeClaimCondition[]} [conditions]
   * Current Condition of persistent volume claim. If underlying persistent
   * volume is being resized then the Condition will be set to 'ResizeStarted'.
   */
  conditions?: V1PersistentVolumeClaimCondition[];
  /**
   * @member {string} [phase] Phase represents the current phase of
   * PersistentVolumeClaim.
   */
  phase?: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaim.
 * PersistentVolumeClaim is a user's request for and claim to a persistent
 * volume
 *
 */
export interface V1PersistentVolumeClaim {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1PersistentVolumeClaimSpec} [spec] Spec defines the
   * desired characteristics of a volume requested by a pod author. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   */
  spec?: V1PersistentVolumeClaimSpec;
  /**
   * @member {V1PersistentVolumeClaimStatus} [status] Status
   * represents the current information/status of a persistent volume claim.
   * Read-only. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   */
  status?: V1PersistentVolumeClaimStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSetSpec.
 * A StatefulSetSpec is the specification of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1StatefulSetSpec {
  /**
   * @member {string} [podManagementPolicy] podManagementPolicy controls how
   * pods are created during initial scale up, when replacing pods on nodes, or
   * when scaling down. The default policy is `OrderedReady`, where pods are
   * created in increasing order (pod-0, then pod-1, etc) and the controller
   * will wait until each pod is ready before continuing. When scaling down,
   * the pods are removed in the opposite order. The alternative policy is
   * `Parallel` which will create pods in parallel to match the desired scale
   * without waiting, and on scale down will delete all pods at once.
   */
  podManagementPolicy?: string;
  /**
   * @member {number} [replicas] replicas is the desired number of replicas of
   * the given Template. These are replicas in the sense that they are
   * instantiations of the same Template, but individual replicas also have a
   * consistent identity. If unspecified, defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] revisionHistoryLimit is the
   * maximum number of revisions that will be maintained in the StatefulSet's
   * revision history. The revision history consists of all revisions not
   * represented by a currently applied StatefulSetSpec version. The default
   * value is 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector selector is
   * a label query over pods that should match the replica count. It must match
   * the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string} serviceName serviceName is the name of the service that
   * governs this StatefulSet. This service must exist before the StatefulSet,
   * and is responsible for the network identity of the set. Pods get
   * DNS/hostnames that follow the pattern:
   * pod-specific-string.serviceName.default.svc.cluster.local where
   * "pod-specific-string" is managed by the StatefulSet controller.
   */
  serviceName: string;
  /**
   * @member {V1PodTemplateSpec} template template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. Each pod stamped out by the StatefulSet will fulfill this
   * Template, but have a unique identity from the rest of the StatefulSet.
   */
  template: V1PodTemplateSpec;
  /**
   * @member {Iok8sapiappsv1StatefulSetUpdateStrategy} [updateStrategy]
   * updateStrategy indicates the StatefulSetUpdateStrategy that will be
   * employed to update Pods in the StatefulSet when a revision is made to
   * Template.
   */
  updateStrategy?: Iok8sapiappsv1StatefulSetUpdateStrategy;
  /**
   * @member {V1PersistentVolumeClaim[]} [volumeClaimTemplates]
   * volumeClaimTemplates is a list of claims that pods are allowed to
   * reference. The StatefulSet controller is responsible for mapping network
   * identities to claims in a way that maintains the identity of a pod. Every
   * claim in this list must have at least one matching (by name) volumeMount
   * in one container in the template. A claim in this list takes precedence
   * over any volumes in the template, with the same name.
   */
  volumeClaimTemplates?: V1PersistentVolumeClaim[];
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSetCondition.
 * StatefulSetCondition describes the state of a statefulset at a certain
 * point.
 *
 */
export interface Iok8sapiappsv1StatefulSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of statefulset condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSetStatus.
 * StatefulSetStatus represents the current state of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1StatefulSetStatus {
  /**
   * @member {number} [collisionCount] collisionCount is the count of hash
   * collisions for the StatefulSet. The StatefulSet controller uses this field
   * as a collision avoidance mechanism when it needs to create the name for
   * the newest ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1StatefulSetCondition[]} [conditions] Represents the
   * latest available observations of a statefulset's current state.
   */
  conditions?: Iok8sapiappsv1StatefulSetCondition[];
  /**
   * @member {number} [currentReplicas] currentReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by currentRevision.
   */
  currentReplicas?: number;
  /**
   * @member {string} [currentRevision] currentRevision, if not empty,
   * indicates the version of the StatefulSet used to generate Pods in the
   * sequence [0,currentReplicas).
   */
  currentRevision?: string;
  /**
   * @member {number} [observedGeneration] observedGeneration is the most
   * recent generation observed for this StatefulSet. It corresponds to the
   * StatefulSet's generation, which is updated on mutation by the API Server.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] readyReplicas is the number of Pods
   * created by the StatefulSet controller that have a Ready Condition.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas replicas is the number of Pods created by the
   * StatefulSet controller.
   */
  replicas: number;
  /**
   * @member {string} [updateRevision] updateRevision, if not empty, indicates
   * the version of the StatefulSet used to generate Pods in the sequence
   * [replicas-updatedReplicas,replicas)
   */
  updateRevision?: string;
  /**
   * @member {number} [updatedReplicas] updatedReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by updateRevision.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSet.
 * StatefulSet represents a set of pods with consistent identities. Identities
 * are defined as:
 * - Network: A single stable DNS and hostname.
 * - Storage: As many VolumeClaims as requested.
 * The StatefulSet guarantees that a given network identity will always map to
 * the same storage identity.
 *
 */
export interface Iok8sapiappsv1StatefulSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1StatefulSetSpec} [spec] Spec defines the desired
   * identities of pods in this set.
   */
  spec?: Iok8sapiappsv1StatefulSetSpec;
  /**
   * @member {Iok8sapiappsv1StatefulSetStatus} [status] Status is the current
   * status of Pods in this StatefulSet. This data may be out of date by some
   * window of time.
   */
  status?: Iok8sapiappsv1StatefulSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1StatefulSetList.
 * StatefulSetList is a collection of StatefulSets.
 *
 */
export interface Iok8sapiappsv1StatefulSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1StatefulSet[]} items
   */
  items: Iok8sapiappsv1StatefulSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1ControllerRevision.
 * DEPRECATED - This group version of ControllerRevision is deprecated by
 * apps/v1beta2/ControllerRevision. See the release notes for more information.
 * ControllerRevision implements an immutable snapshot of state data. Clients
 * are responsible for serializing and deserializing the objects that contain
 * their internal state. Once a ControllerRevision has been successfully
 * created, it can not be updated. The API Server will fail validation of all
 * requests that attempt to mutate the Data field. ControllerRevisions may,
 * however, be deleted. Note that, due to its use by both the DaemonSet and
 * StatefulSet controllers for update and rollback, this object is beta.
 * However, it may be subject to name and representation changes in future
 * releases, and clients should not depend on its stability. It is primarily
 * for internal use by controllers.
 *
 */
export interface Iok8sapiappsv1beta1ControllerRevision {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [data] Data is the
   * serialized representation of the state.
   */
  data?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} revision Revision indicates the revision of the state
   * represented by Data.
   */
  revision: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1ControllerRevisionList.
 * ControllerRevisionList is a resource containing a list of ControllerRevision
 * objects.
 *
 */
export interface Iok8sapiappsv1beta1ControllerRevisionList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta1ControllerRevision[]} items Items is the list
   * of ControllerRevisions
   */
  items: Iok8sapiappsv1beta1ControllerRevision[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1RollbackConfig.
 * DEPRECATED.
 *
 */
export interface Iok8sapiappsv1beta1RollbackConfig {
  /**
   * @member {number} [revision] The revision to rollback to. If set to 0,
   * rollback to the last revision.
   */
  revision?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1RollingUpdateDeployment.
 * Spec to control the desired behavior of rolling update.
 *
 */
export interface Iok8sapiappsv1beta1RollingUpdateDeployment {
  /**
   * @member {string} [maxSurge] The maximum number of pods that can be
   * scheduled above the desired number of pods. Value can be an absolute
   * number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be
   * 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by
   * rounding up. Defaults to 25%. Example: when this is set to 30%, the new
   * ReplicaSet can be scaled up immediately when the rolling update starts,
   * such that the total number of old and new pods do not exceed 130% of
   * desired pods. Once old pods have been killed, new ReplicaSet can be scaled
   * up further, ensuring that total number of pods running at any time during
   * the update is atmost 130% of desired pods.
   */
  maxSurge?: string;
  /**
   * @member {string} [maxUnavailable] The maximum number of pods that can be
   * unavailable during the update. Value can be an absolute number (ex: 5) or
   * a percentage of desired pods (ex: 10%). Absolute number is calculated from
   * percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults
   * to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled
   * down to 70% of desired pods immediately when the rolling update starts.
   * Once new pods are ready, old ReplicaSet can be scaled down further,
   * followed by scaling up the new ReplicaSet, ensuring that the total number
   * of pods available at all times during the update is at least 70% of
   * desired pods.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentStrategy.
 * DeploymentStrategy describes how to replace existing pods with new ones.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentStrategy {
  /**
   * @member {Iok8sapiappsv1beta1RollingUpdateDeployment} [rollingUpdate]
   * Rolling update config params. Present only if DeploymentStrategyType =
   * RollingUpdate.
   */
  rollingUpdate?: Iok8sapiappsv1beta1RollingUpdateDeployment;
  /**
   * @member {string} [type] Type of deployment. Can be "Recreate" or
   * "RollingUpdate". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentSpec.
 * DeploymentSpec is the specification of the desired behavior of the
 * Deployment.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {boolean} [paused] Indicates that the deployment is paused.
   */
  paused?: boolean;
  /**
   * @member {number} [progressDeadlineSeconds] The maximum time in seconds for
   * a deployment to make progress before it is considered to be failed. The
   * deployment controller will continue to process failed deployments and a
   * condition with a ProgressDeadlineExceeded reason will be surfaced in the
   * deployment status. Note that progress will not be estimated during the
   * time a deployment is paused. Defaults to 600s.
   */
  progressDeadlineSeconds?: number;
  /**
   * @member {number} [replicas] Number of desired pods. This is a pointer to
   * distinguish between explicit zero and not specified. Defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old ReplicaSets to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 2.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapiappsv1beta1RollbackConfig} [rollbackTo] DEPRECATED. The
   * config this deployment is rolling back to. Will be cleared after rollback
   * is done.
   */
  rollbackTo?: Iok8sapiappsv1beta1RollbackConfig;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] Label
   * selector for pods. Existing ReplicaSets whose pods are selected by this
   * will be the ones affected by this deployment.
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapiappsv1beta1DeploymentStrategy} [strategy] The deployment
   * strategy to use to replace existing pods with new ones.
   */
  strategy?: Iok8sapiappsv1beta1DeploymentStrategy;
  /**
   * @member {V1PodTemplateSpec} template Template describes the
   * pods that will be created.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentCondition.
 * DeploymentCondition describes the state of a deployment at a certain point.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {Date} [lastUpdateTime] The last time this condition was updated.
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of deployment condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentStatus.
 * DeploymentStatus is the most recently observed status of the Deployment.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentStatus {
  /**
   * @member {number} [availableReplicas] Total number of available pods (ready
   * for at least minReadySeconds) targeted by this deployment.
   */
  availableReplicas?: number;
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * Deployment. The Deployment controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ReplicaSet.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1beta1DeploymentCondition[]} [conditions] Represents
   * the latest available observations of a deployment's current state.
   */
  conditions?: Iok8sapiappsv1beta1DeploymentCondition[];
  /**
   * @member {number} [observedGeneration] The generation observed by the
   * deployment controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] Total number of ready pods targeted by
   * this deployment.
   */
  readyReplicas?: number;
  /**
   * @member {number} [replicas] Total number of non-terminated pods targeted
   * by this deployment (their labels match the selector).
   */
  replicas?: number;
  /**
   * @member {number} [unavailableReplicas] Total number of unavailable pods
   * targeted by this deployment. This is the total number of pods that are
   * still required for the deployment to have 100% available capacity. They
   * may either be pods that are running but not yet available or pods that
   * still have not been created.
   */
  unavailableReplicas?: number;
  /**
   * @member {number} [updatedReplicas] Total number of non-terminated pods
   * targeted by this deployment that have the desired template spec.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1Deployment.
 * DEPRECATED - This group version of Deployment is deprecated by
 * apps/v1beta2/Deployment. See the release notes for more information.
 * Deployment enables declarative updates for Pods and ReplicaSets.
 *
 */
export interface Iok8sapiappsv1beta1Deployment {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta1DeploymentSpec} [spec] Specification of the
   * desired behavior of the Deployment.
   */
  spec?: Iok8sapiappsv1beta1DeploymentSpec;
  /**
   * @member {Iok8sapiappsv1beta1DeploymentStatus} [status] Most recently
   * observed status of the Deployment.
   */
  status?: Iok8sapiappsv1beta1DeploymentStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentList.
 * DeploymentList is a list of Deployments.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta1Deployment[]} items Items is the list of
   * Deployments.
   */
  items: Iok8sapiappsv1beta1Deployment[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1DeploymentRollback.
 * DEPRECATED. DeploymentRollback stores the information required to rollback a
 * deployment.
 *
 */
export interface Iok8sapiappsv1beta1DeploymentRollback {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} name Required: This must match the Name of a deployment.
   */
  name: string;
  /**
   * @member {Iok8sapiappsv1beta1RollbackConfig} rollbackTo The config of this
   * deployment rollback.
   */
  rollbackTo: Iok8sapiappsv1beta1RollbackConfig;
  /**
   * @member {{ [propertyName: string]: string }} [updatedAnnotations] The
   * annotations to be updated to a deployment
   */
  updatedAnnotations?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy.
 * RollingUpdateStatefulSetStrategy is used to communicate parameter for
 * RollingUpdateStatefulSetStrategyType.
 *
 */
export interface Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy {
  /**
   * @member {number} [partition] Partition indicates the ordinal at which the
   * StatefulSet should be partitioned.
   */
  partition?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1ScaleSpec.
 * ScaleSpec describes the attributes of a scale subresource
 *
 */
export interface Iok8sapiappsv1beta1ScaleSpec {
  /**
   * @member {number} [replicas] desired number of instances for the scaled
   * object.
   */
  replicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1ScaleStatus.
 * ScaleStatus represents the current status of a scale subresource.
 *
 */
export interface Iok8sapiappsv1beta1ScaleStatus {
  /**
   * @member {number} replicas actual number of observed instances of the
   * scaled object.
   */
  replicas: number;
  /**
   * @member {{ [propertyName: string]: string }} [selector] label query over
   * pods that should match the replicas count. More info:
   * http://kubernetes.io/docs/user-guide/labels#label-selectors
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {string} [targetSelector] label selector for pods that should
   * match the replicas count. This is a serializated version of both map-based
   * and more expressive set-based selectors. This is done to avoid
   * introspection in the clients. The string will be in the same format as the
   * query-param syntax. If the target type only supports map-based selectors,
   * both this field and map-based selector field are populated. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  targetSelector?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1Scale.
 * Scale represents a scaling request for a resource.
 *
 */
export interface Iok8sapiappsv1beta1Scale {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta1ScaleSpec} [spec] defines the behavior of the
   * scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiappsv1beta1ScaleSpec;
  /**
   * @member {Iok8sapiappsv1beta1ScaleStatus} [status] current status of the
   * scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   * Read-only.
   */
  status?: Iok8sapiappsv1beta1ScaleStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSetUpdateStrategy.
 * StatefulSetUpdateStrategy indicates the strategy that the StatefulSet
 * controller will use to perform updates. It includes any additional
 * parameters necessary to perform the update for the indicated strategy.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSetUpdateStrategy {
  /**
   * @member {Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy}
   * [rollingUpdate] RollingUpdate is used to communicate parameters when Type
   * is RollingUpdateStatefulSetStrategyType.
   */
  rollingUpdate?: Iok8sapiappsv1beta1RollingUpdateStatefulSetStrategy;
  /**
   * @member {string} [type] Type indicates the type of the
   * StatefulSetUpdateStrategy.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSetSpec.
 * A StatefulSetSpec is the specification of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSetSpec {
  /**
   * @member {string} [podManagementPolicy] podManagementPolicy controls how
   * pods are created during initial scale up, when replacing pods on nodes, or
   * when scaling down. The default policy is `OrderedReady`, where pods are
   * created in increasing order (pod-0, then pod-1, etc) and the controller
   * will wait until each pod is ready before continuing. When scaling down,
   * the pods are removed in the opposite order. The alternative policy is
   * `Parallel` which will create pods in parallel to match the desired scale
   * without waiting, and on scale down will delete all pods at once.
   */
  podManagementPolicy?: string;
  /**
   * @member {number} [replicas] replicas is the desired number of replicas of
   * the given Template. These are replicas in the sense that they are
   * instantiations of the same Template, but individual replicas also have a
   * consistent identity. If unspecified, defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] revisionHistoryLimit is the
   * maximum number of revisions that will be maintained in the StatefulSet's
   * revision history. The revision history consists of all revisions not
   * represented by a currently applied StatefulSetSpec version. The default
   * value is 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] selector
   * is a label query over pods that should match the replica count. If empty,
   * defaulted to labels on the pod template. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string} serviceName serviceName is the name of the service that
   * governs this StatefulSet. This service must exist before the StatefulSet,
   * and is responsible for the network identity of the set. Pods get
   * DNS/hostnames that follow the pattern:
   * pod-specific-string.serviceName.default.svc.cluster.local where
   * "pod-specific-string" is managed by the StatefulSet controller.
   */
  serviceName: string;
  /**
   * @member {V1PodTemplateSpec} template template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. Each pod stamped out by the StatefulSet will fulfill this
   * Template, but have a unique identity from the rest of the StatefulSet.
   */
  template: V1PodTemplateSpec;
  /**
   * @member {Iok8sapiappsv1beta1StatefulSetUpdateStrategy} [updateStrategy]
   * updateStrategy indicates the StatefulSetUpdateStrategy that will be
   * employed to update Pods in the StatefulSet when a revision is made to
   * Template.
   */
  updateStrategy?: Iok8sapiappsv1beta1StatefulSetUpdateStrategy;
  /**
   * @member {V1PersistentVolumeClaim[]} [volumeClaimTemplates]
   * volumeClaimTemplates is a list of claims that pods are allowed to
   * reference. The StatefulSet controller is responsible for mapping network
   * identities to claims in a way that maintains the identity of a pod. Every
   * claim in this list must have at least one matching (by name) volumeMount
   * in one container in the template. A claim in this list takes precedence
   * over any volumes in the template, with the same name.
   */
  volumeClaimTemplates?: V1PersistentVolumeClaim[];
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSetCondition.
 * StatefulSetCondition describes the state of a statefulset at a certain
 * point.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of statefulset condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSetStatus.
 * StatefulSetStatus represents the current state of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSetStatus {
  /**
   * @member {number} [collisionCount] collisionCount is the count of hash
   * collisions for the StatefulSet. The StatefulSet controller uses this field
   * as a collision avoidance mechanism when it needs to create the name for
   * the newest ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1beta1StatefulSetCondition[]} [conditions]
   * Represents the latest available observations of a statefulset's current
   * state.
   */
  conditions?: Iok8sapiappsv1beta1StatefulSetCondition[];
  /**
   * @member {number} [currentReplicas] currentReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by currentRevision.
   */
  currentReplicas?: number;
  /**
   * @member {string} [currentRevision] currentRevision, if not empty,
   * indicates the version of the StatefulSet used to generate Pods in the
   * sequence [0,currentReplicas).
   */
  currentRevision?: string;
  /**
   * @member {number} [observedGeneration] observedGeneration is the most
   * recent generation observed for this StatefulSet. It corresponds to the
   * StatefulSet's generation, which is updated on mutation by the API Server.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] readyReplicas is the number of Pods
   * created by the StatefulSet controller that have a Ready Condition.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas replicas is the number of Pods created by the
   * StatefulSet controller.
   */
  replicas: number;
  /**
   * @member {string} [updateRevision] updateRevision, if not empty, indicates
   * the version of the StatefulSet used to generate Pods in the sequence
   * [replicas-updatedReplicas,replicas)
   */
  updateRevision?: string;
  /**
   * @member {number} [updatedReplicas] updatedReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by updateRevision.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSet.
 * DEPRECATED - This group version of StatefulSet is deprecated by
 * apps/v1beta2/StatefulSet. See the release notes for more information.
 * StatefulSet represents a set of pods with consistent identities. Identities
 * are defined as:
 * - Network: A single stable DNS and hostname.
 * - Storage: As many VolumeClaims as requested.
 * The StatefulSet guarantees that a given network identity will always map to
 * the same storage identity.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta1StatefulSetSpec} [spec] Spec defines the
   * desired identities of pods in this set.
   */
  spec?: Iok8sapiappsv1beta1StatefulSetSpec;
  /**
   * @member {Iok8sapiappsv1beta1StatefulSetStatus} [status] Status is the
   * current status of Pods in this StatefulSet. This data may be out of date
   * by some window of time.
   */
  status?: Iok8sapiappsv1beta1StatefulSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta1StatefulSetList.
 * StatefulSetList is a collection of StatefulSets.
 *
 */
export interface Iok8sapiappsv1beta1StatefulSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta1StatefulSet[]} items
   */
  items: Iok8sapiappsv1beta1StatefulSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ControllerRevision.
 * DEPRECATED - This group version of ControllerRevision is deprecated by
 * apps/v1/ControllerRevision. See the release notes for more information.
 * ControllerRevision implements an immutable snapshot of state data. Clients
 * are responsible for serializing and deserializing the objects that contain
 * their internal state. Once a ControllerRevision has been successfully
 * created, it can not be updated. The API Server will fail validation of all
 * requests that attempt to mutate the Data field. ControllerRevisions may,
 * however, be deleted. Note that, due to its use by both the DaemonSet and
 * StatefulSet controllers for update and rollback, this object is beta.
 * However, it may be subject to name and representation changes in future
 * releases, and clients should not depend on its stability. It is primarily
 * for internal use by controllers.
 *
 */
export interface Iok8sapiappsv1beta2ControllerRevision {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} [data] Data is the
   * serialized representation of the state.
   */
  data?: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} revision Revision indicates the revision of the state
   * represented by Data.
   */
  revision: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ControllerRevisionList.
 * ControllerRevisionList is a resource containing a list of ControllerRevision
 * objects.
 *
 */
export interface Iok8sapiappsv1beta2ControllerRevisionList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta2ControllerRevision[]} items Items is the list
   * of ControllerRevisions
   */
  items: Iok8sapiappsv1beta2ControllerRevision[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2RollingUpdateDaemonSet.
 * Spec to control the desired behavior of daemon set rolling update.
 *
 */
export interface Iok8sapiappsv1beta2RollingUpdateDaemonSet {
  /**
   * @member {string} [maxUnavailable] The maximum number of DaemonSet pods
   * that can be unavailable during the update. Value can be an absolute number
   * (ex: 5) or a percentage of total number of DaemonSet pods at the start of
   * the update (ex: 10%). Absolute number is calculated from percentage by
   * rounding up. This cannot be 0. Default value is 1. Example: when this is
   * set to 30%, at most 30% of the total number of nodes that should be
   * running the daemon pod (i.e. status.desiredNumberScheduled) can have their
   * pods stopped for an update at any given time. The update starts by
   * stopping at most 30% of those DaemonSet pods and then brings up new
   * DaemonSet pods in their place. Once the new pods are available, it then
   * proceeds onto other DaemonSet pods, thus ensuring that at least 70% of
   * original number of DaemonSet pods are available at all times during the
   * update.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSetUpdateStrategy.
 * DaemonSetUpdateStrategy is a struct used to control the update strategy for
 * a DaemonSet.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSetUpdateStrategy {
  /**
   * @member {Iok8sapiappsv1beta2RollingUpdateDaemonSet} [rollingUpdate]
   * Rolling update config params. Present only if type = "RollingUpdate".
   */
  rollingUpdate?: Iok8sapiappsv1beta2RollingUpdateDaemonSet;
  /**
   * @member {string} [type] Type of daemon set update. Can be "RollingUpdate"
   * or "OnDelete". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSetSpec.
 * DaemonSetSpec is the specification of a daemon set.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSetSpec {
  /**
   * @member {number} [minReadySeconds] The minimum number of seconds for which
   * a newly created DaemonSet pod should be ready without any of its container
   * crashing, for it to be considered available. Defaults to 0 (pod will be
   * considered available as soon as it is ready).
   */
  minReadySeconds?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old history to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector A label
   * query over pods that are managed by the daemon set. Must match in order to
   * be controlled. It must match the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} template An object that describes
   * the pod that will be created. The DaemonSet will create exactly one copy
   * of this pod on every node that matches the template's node selector (or on
   * every node if no node selector is specified). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template: V1PodTemplateSpec;
  /**
   * @member {Iok8sapiappsv1beta2DaemonSetUpdateStrategy} [updateStrategy] An
   * update strategy to replace existing DaemonSet pods with new pods.
   */
  updateStrategy?: Iok8sapiappsv1beta2DaemonSetUpdateStrategy;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSetCondition.
 * DaemonSetCondition describes the state of a DaemonSet at a certain point.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of DaemonSet condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSetStatus.
 * DaemonSetStatus represents the current status of a daemon set.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSetStatus {
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * DaemonSet. The DaemonSet controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1beta2DaemonSetCondition[]} [conditions] Represents
   * the latest available observations of a DaemonSet's current state.
   */
  conditions?: Iok8sapiappsv1beta2DaemonSetCondition[];
  /**
   * @member {number} currentNumberScheduled The number of nodes that are
   * running at least 1 daemon pod and are supposed to run the daemon pod. More
   * info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  currentNumberScheduled: number;
  /**
   * @member {number} desiredNumberScheduled The total number of nodes that
   * should be running the daemon pod (including nodes correctly running the
   * daemon pod). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  desiredNumberScheduled: number;
  /**
   * @member {number} [numberAvailable] The number of nodes that should be
   * running the daemon pod and have one or more of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberAvailable?: number;
  /**
   * @member {number} numberMisscheduled The number of nodes that are running
   * the daemon pod, but are not supposed to run the daemon pod. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  numberMisscheduled: number;
  /**
   * @member {number} numberReady The number of nodes that should be running
   * the daemon pod and have one or more of the daemon pod running and ready.
   */
  numberReady: number;
  /**
   * @member {number} [numberUnavailable] The number of nodes that should be
   * running the daemon pod and have none of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberUnavailable?: number;
  /**
   * @member {number} [observedGeneration] The most recent generation observed
   * by the daemon set controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [updatedNumberScheduled] The total number of nodes that
   * are running updated daemon pod
   */
  updatedNumberScheduled?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSet.
 * DEPRECATED - This group version of DaemonSet is deprecated by
 * apps/v1/DaemonSet. See the release notes for more information. DaemonSet
 * represents the configuration of a daemon set.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta2DaemonSetSpec} [spec] The desired behavior of
   * this daemon set. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiappsv1beta2DaemonSetSpec;
  /**
   * @member {Iok8sapiappsv1beta2DaemonSetStatus} [status] The current status
   * of this daemon set. This data may be out of date by some window of time.
   * Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiappsv1beta2DaemonSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DaemonSetList.
 * DaemonSetList is a collection of daemon sets.
 *
 */
export interface Iok8sapiappsv1beta2DaemonSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta2DaemonSet[]} items A list of daemon sets.
   */
  items: Iok8sapiappsv1beta2DaemonSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2RollingUpdateDeployment.
 * Spec to control the desired behavior of rolling update.
 *
 */
export interface Iok8sapiappsv1beta2RollingUpdateDeployment {
  /**
   * @member {string} [maxSurge] The maximum number of pods that can be
   * scheduled above the desired number of pods. Value can be an absolute
   * number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be
   * 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by
   * rounding up. Defaults to 25%. Example: when this is set to 30%, the new
   * ReplicaSet can be scaled up immediately when the rolling update starts,
   * such that the total number of old and new pods do not exceed 130% of
   * desired pods. Once old pods have been killed, new ReplicaSet can be scaled
   * up further, ensuring that total number of pods running at any time during
   * the update is atmost 130% of desired pods.
   */
  maxSurge?: string;
  /**
   * @member {string} [maxUnavailable] The maximum number of pods that can be
   * unavailable during the update. Value can be an absolute number (ex: 5) or
   * a percentage of desired pods (ex: 10%). Absolute number is calculated from
   * percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults
   * to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled
   * down to 70% of desired pods immediately when the rolling update starts.
   * Once new pods are ready, old ReplicaSet can be scaled down further,
   * followed by scaling up the new ReplicaSet, ensuring that the total number
   * of pods available at all times during the update is at least 70% of
   * desired pods.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DeploymentStrategy.
 * DeploymentStrategy describes how to replace existing pods with new ones.
 *
 */
export interface Iok8sapiappsv1beta2DeploymentStrategy {
  /**
   * @member {Iok8sapiappsv1beta2RollingUpdateDeployment} [rollingUpdate]
   * Rolling update config params. Present only if DeploymentStrategyType =
   * RollingUpdate.
   */
  rollingUpdate?: Iok8sapiappsv1beta2RollingUpdateDeployment;
  /**
   * @member {string} [type] Type of deployment. Can be "Recreate" or
   * "RollingUpdate". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DeploymentSpec.
 * DeploymentSpec is the specification of the desired behavior of the
 * Deployment.
 *
 */
export interface Iok8sapiappsv1beta2DeploymentSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {boolean} [paused] Indicates that the deployment is paused.
   */
  paused?: boolean;
  /**
   * @member {number} [progressDeadlineSeconds] The maximum time in seconds for
   * a deployment to make progress before it is considered to be failed. The
   * deployment controller will continue to process failed deployments and a
   * condition with a ProgressDeadlineExceeded reason will be surfaced in the
   * deployment status. Note that progress will not be estimated during the
   * time a deployment is paused. Defaults to 600s.
   */
  progressDeadlineSeconds?: number;
  /**
   * @member {number} [replicas] Number of desired pods. This is a pointer to
   * distinguish between explicit zero and not specified. Defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old ReplicaSets to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector Label
   * selector for pods. Existing ReplicaSets whose pods are selected by this
   * will be the ones affected by this deployment. It must match the pod
   * template's labels.
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapiappsv1beta2DeploymentStrategy} [strategy] The deployment
   * strategy to use to replace existing pods with new ones.
   */
  strategy?: Iok8sapiappsv1beta2DeploymentStrategy;
  /**
   * @member {V1PodTemplateSpec} template Template describes the
   * pods that will be created.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DeploymentCondition.
 * DeploymentCondition describes the state of a deployment at a certain point.
 *
 */
export interface Iok8sapiappsv1beta2DeploymentCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {Date} [lastUpdateTime] The last time this condition was updated.
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of deployment condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DeploymentStatus.
 * DeploymentStatus is the most recently observed status of the Deployment.
 *
 */
export interface Iok8sapiappsv1beta2DeploymentStatus {
  /**
   * @member {number} [availableReplicas] Total number of available pods (ready
   * for at least minReadySeconds) targeted by this deployment.
   */
  availableReplicas?: number;
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * Deployment. The Deployment controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ReplicaSet.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1beta2DeploymentCondition[]} [conditions] Represents
   * the latest available observations of a deployment's current state.
   */
  conditions?: Iok8sapiappsv1beta2DeploymentCondition[];
  /**
   * @member {number} [observedGeneration] The generation observed by the
   * deployment controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] Total number of ready pods targeted by
   * this deployment.
   */
  readyReplicas?: number;
  /**
   * @member {number} [replicas] Total number of non-terminated pods targeted
   * by this deployment (their labels match the selector).
   */
  replicas?: number;
  /**
   * @member {number} [unavailableReplicas] Total number of unavailable pods
   * targeted by this deployment. This is the total number of pods that are
   * still required for the deployment to have 100% available capacity. They
   * may either be pods that are running but not yet available or pods that
   * still have not been created.
   */
  unavailableReplicas?: number;
  /**
   * @member {number} [updatedReplicas] Total number of non-terminated pods
   * targeted by this deployment that have the desired template spec.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2Deployment.
 * DEPRECATED - This group version of Deployment is deprecated by
 * apps/v1/Deployment. See the release notes for more information. Deployment
 * enables declarative updates for Pods and ReplicaSets.
 *
 */
export interface Iok8sapiappsv1beta2Deployment {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta2DeploymentSpec} [spec] Specification of the
   * desired behavior of the Deployment.
   */
  spec?: Iok8sapiappsv1beta2DeploymentSpec;
  /**
   * @member {Iok8sapiappsv1beta2DeploymentStatus} [status] Most recently
   * observed status of the Deployment.
   */
  status?: Iok8sapiappsv1beta2DeploymentStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2DeploymentList.
 * DeploymentList is a list of Deployments.
 *
 */
export interface Iok8sapiappsv1beta2DeploymentList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta2Deployment[]} items Items is the list of
   * Deployments.
   */
  items: Iok8sapiappsv1beta2Deployment[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ReplicaSetSpec.
 * ReplicaSetSpec is the specification of a ReplicaSet.
 *
 */
export interface Iok8sapiappsv1beta2ReplicaSetSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {number} [replicas] Replicas is the number of desired replicas.
   * This is a pointer to distinguish between explicit zero and unspecified.
   * Defaults to 1. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector Selector is
   * a label query over pods that should match the replica count. Label keys
   * and values that must match in order to be controlled by this replica set.
   * It must match the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} [template] Template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ReplicaSetCondition.
 * ReplicaSetCondition describes the state of a replica set at a certain point.
 *
 */
export interface Iok8sapiappsv1beta2ReplicaSetCondition {
  /**
   * @member {Date} [lastTransitionTime] The last time the condition
   * transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of replica set condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ReplicaSetStatus.
 * ReplicaSetStatus represents the current status of a ReplicaSet.
 *
 */
export interface Iok8sapiappsv1beta2ReplicaSetStatus {
  /**
   * @member {number} [availableReplicas] The number of available replicas
   * (ready for at least minReadySeconds) for this replica set.
   */
  availableReplicas?: number;
  /**
   * @member {Iok8sapiappsv1beta2ReplicaSetCondition[]} [conditions] Represents
   * the latest available observations of a replica set's current state.
   */
  conditions?: Iok8sapiappsv1beta2ReplicaSetCondition[];
  /**
   * @member {number} [fullyLabeledReplicas] The number of pods that have
   * labels matching the labels of the pod template of the replicaset.
   */
  fullyLabeledReplicas?: number;
  /**
   * @member {number} [observedGeneration] ObservedGeneration reflects the
   * generation of the most recently observed ReplicaSet.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] The number of ready replicas for this
   * replica set.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas Replicas is the most recently oberved number of
   * replicas. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ReplicaSet.
 * DEPRECATED - This group version of ReplicaSet is deprecated by
 * apps/v1/ReplicaSet. See the release notes for more information. ReplicaSet
 * ensures that a specified number of pod replicas are running at any given
 * time.
 *
 */
export interface Iok8sapiappsv1beta2ReplicaSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] If the
   * Labels of a ReplicaSet are empty, they are defaulted to be the same as the
   * Pod(s) that the ReplicaSet manages. Standard object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta2ReplicaSetSpec} [spec] Spec defines the
   * specification of the desired behavior of the ReplicaSet. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiappsv1beta2ReplicaSetSpec;
  /**
   * @member {Iok8sapiappsv1beta2ReplicaSetStatus} [status] Status is the most
   * recently observed status of the ReplicaSet. This data may be out of date
   * by some window of time. Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiappsv1beta2ReplicaSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ReplicaSetList.
 * ReplicaSetList is a collection of ReplicaSets.
 *
 */
export interface Iok8sapiappsv1beta2ReplicaSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta2ReplicaSet[]} items List of ReplicaSets. More
   * info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
   */
  items: Iok8sapiappsv1beta2ReplicaSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy.
 * RollingUpdateStatefulSetStrategy is used to communicate parameter for
 * RollingUpdateStatefulSetStrategyType.
 *
 */
export interface Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy {
  /**
   * @member {number} [partition] Partition indicates the ordinal at which the
   * StatefulSet should be partitioned. Default value is 0.
   */
  partition?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ScaleSpec.
 * ScaleSpec describes the attributes of a scale subresource
 *
 */
export interface Iok8sapiappsv1beta2ScaleSpec {
  /**
   * @member {number} [replicas] desired number of instances for the scaled
   * object.
   */
  replicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2ScaleStatus.
 * ScaleStatus represents the current status of a scale subresource.
 *
 */
export interface Iok8sapiappsv1beta2ScaleStatus {
  /**
   * @member {number} replicas actual number of observed instances of the
   * scaled object.
   */
  replicas: number;
  /**
   * @member {{ [propertyName: string]: string }} [selector] label query over
   * pods that should match the replicas count. More info:
   * http://kubernetes.io/docs/user-guide/labels#label-selectors
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {string} [targetSelector] label selector for pods that should
   * match the replicas count. This is a serializated version of both map-based
   * and more expressive set-based selectors. This is done to avoid
   * introspection in the clients. The string will be in the same format as the
   * query-param syntax. If the target type only supports map-based selectors,
   * both this field and map-based selector field are populated. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  targetSelector?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2Scale.
 * Scale represents a scaling request for a resource.
 *
 */
export interface Iok8sapiappsv1beta2Scale {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta2ScaleSpec} [spec] defines the behavior of the
   * scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiappsv1beta2ScaleSpec;
  /**
   * @member {Iok8sapiappsv1beta2ScaleStatus} [status] current status of the
   * scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   * Read-only.
   */
  status?: Iok8sapiappsv1beta2ScaleStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSetUpdateStrategy.
 * StatefulSetUpdateStrategy indicates the strategy that the StatefulSet
 * controller will use to perform updates. It includes any additional
 * parameters necessary to perform the update for the indicated strategy.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSetUpdateStrategy {
  /**
   * @member {Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy}
   * [rollingUpdate] RollingUpdate is used to communicate parameters when Type
   * is RollingUpdateStatefulSetStrategyType.
   */
  rollingUpdate?: Iok8sapiappsv1beta2RollingUpdateStatefulSetStrategy;
  /**
   * @member {string} [type] Type indicates the type of the
   * StatefulSetUpdateStrategy. Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSetSpec.
 * A StatefulSetSpec is the specification of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSetSpec {
  /**
   * @member {string} [podManagementPolicy] podManagementPolicy controls how
   * pods are created during initial scale up, when replacing pods on nodes, or
   * when scaling down. The default policy is `OrderedReady`, where pods are
   * created in increasing order (pod-0, then pod-1, etc) and the controller
   * will wait until each pod is ready before continuing. When scaling down,
   * the pods are removed in the opposite order. The alternative policy is
   * `Parallel` which will create pods in parallel to match the desired scale
   * without waiting, and on scale down will delete all pods at once.
   */
  podManagementPolicy?: string;
  /**
   * @member {number} [replicas] replicas is the desired number of replicas of
   * the given Template. These are replicas in the sense that they are
   * instantiations of the same Template, but individual replicas also have a
   * consistent identity. If unspecified, defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] revisionHistoryLimit is the
   * maximum number of revisions that will be maintained in the StatefulSet's
   * revision history. The revision history consists of all revisions not
   * represented by a currently applied StatefulSetSpec version. The default
   * value is 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} selector selector is
   * a label query over pods that should match the replica count. It must match
   * the pod template's labels. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string} serviceName serviceName is the name of the service that
   * governs this StatefulSet. This service must exist before the StatefulSet,
   * and is responsible for the network identity of the set. Pods get
   * DNS/hostnames that follow the pattern:
   * pod-specific-string.serviceName.default.svc.cluster.local where
   * "pod-specific-string" is managed by the StatefulSet controller.
   */
  serviceName: string;
  /**
   * @member {V1PodTemplateSpec} template template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. Each pod stamped out by the StatefulSet will fulfill this
   * Template, but have a unique identity from the rest of the StatefulSet.
   */
  template: V1PodTemplateSpec;
  /**
   * @member {Iok8sapiappsv1beta2StatefulSetUpdateStrategy} [updateStrategy]
   * updateStrategy indicates the StatefulSetUpdateStrategy that will be
   * employed to update Pods in the StatefulSet when a revision is made to
   * Template.
   */
  updateStrategy?: Iok8sapiappsv1beta2StatefulSetUpdateStrategy;
  /**
   * @member {V1PersistentVolumeClaim[]} [volumeClaimTemplates]
   * volumeClaimTemplates is a list of claims that pods are allowed to
   * reference. The StatefulSet controller is responsible for mapping network
   * identities to claims in a way that maintains the identity of a pod. Every
   * claim in this list must have at least one matching (by name) volumeMount
   * in one container in the template. A claim in this list takes precedence
   * over any volumes in the template, with the same name.
   */
  volumeClaimTemplates?: V1PersistentVolumeClaim[];
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSetCondition.
 * StatefulSetCondition describes the state of a statefulset at a certain
 * point.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of statefulset condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSetStatus.
 * StatefulSetStatus represents the current state of a StatefulSet.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSetStatus {
  /**
   * @member {number} [collisionCount] collisionCount is the count of hash
   * collisions for the StatefulSet. The StatefulSet controller uses this field
   * as a collision avoidance mechanism when it needs to create the name for
   * the newest ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiappsv1beta2StatefulSetCondition[]} [conditions]
   * Represents the latest available observations of a statefulset's current
   * state.
   */
  conditions?: Iok8sapiappsv1beta2StatefulSetCondition[];
  /**
   * @member {number} [currentReplicas] currentReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by currentRevision.
   */
  currentReplicas?: number;
  /**
   * @member {string} [currentRevision] currentRevision, if not empty,
   * indicates the version of the StatefulSet used to generate Pods in the
   * sequence [0,currentReplicas).
   */
  currentRevision?: string;
  /**
   * @member {number} [observedGeneration] observedGeneration is the most
   * recent generation observed for this StatefulSet. It corresponds to the
   * StatefulSet's generation, which is updated on mutation by the API Server.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] readyReplicas is the number of Pods
   * created by the StatefulSet controller that have a Ready Condition.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas replicas is the number of Pods created by the
   * StatefulSet controller.
   */
  replicas: number;
  /**
   * @member {string} [updateRevision] updateRevision, if not empty, indicates
   * the version of the StatefulSet used to generate Pods in the sequence
   * [replicas-updatedReplicas,replicas)
   */
  updateRevision?: string;
  /**
   * @member {number} [updatedReplicas] updatedReplicas is the number of Pods
   * created by the StatefulSet controller from the StatefulSet version
   * indicated by updateRevision.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSet.
 * DEPRECATED - This group version of StatefulSet is deprecated by
 * apps/v1/StatefulSet. See the release notes for more information. StatefulSet
 * represents a set of pods with consistent identities. Identities are defined
 * as:
 * - Network: A single stable DNS and hostname.
 * - Storage: As many VolumeClaims as requested.
 * The StatefulSet guarantees that a given network identity will always map to
 * the same storage identity.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiappsv1beta2StatefulSetSpec} [spec] Spec defines the
   * desired identities of pods in this set.
   */
  spec?: Iok8sapiappsv1beta2StatefulSetSpec;
  /**
   * @member {Iok8sapiappsv1beta2StatefulSetStatus} [status] Status is the
   * current status of Pods in this StatefulSet. This data may be out of date
   * by some window of time.
   */
  status?: Iok8sapiappsv1beta2StatefulSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiappsv1beta2StatefulSetList.
 * StatefulSetList is a collection of StatefulSets.
 *
 */
export interface Iok8sapiappsv1beta2StatefulSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiappsv1beta2StatefulSet[]} items
   */
  items: Iok8sapiappsv1beta2StatefulSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1TokenReviewSpec.
 * TokenReviewSpec is a description of the token authentication request.
 *
 */
export interface Iok8sapiauthenticationv1TokenReviewSpec {
  /**
   * @member {string} [token] Token is the opaque bearer token.
   */
  token?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1UserInfo.
 * UserInfo holds the information about the user needed to implement the
 * user.Info interface.
 *
 */
export interface Iok8sapiauthenticationv1UserInfo {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] Any additional
   * information provided by the authenticator.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [groups] The names of groups this user is a part of.
   */
  groups?: string[];
  /**
   * @member {string} [uid] A unique value that identifies this user across
   * time. If this user is deleted and another user by the same name is added,
   * they will have different UIDs.
   */
  uid?: string;
  /**
   * @member {string} [username] The name that uniquely identifies this user
   * among all active users.
   */
  username?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1TokenReviewStatus.
 * TokenReviewStatus is the result of the token authentication request.
 *
 */
export interface Iok8sapiauthenticationv1TokenReviewStatus {
  /**
   * @member {boolean} [authenticated] Authenticated indicates that the token
   * was associated with a known user.
   */
  authenticated?: boolean;
  /**
   * @member {string} [error] Error indicates that the token couldn't be
   * checked
   */
  error?: string;
  /**
   * @member {Iok8sapiauthenticationv1UserInfo} [user] User is the UserInfo
   * associated with the provided token.
   */
  user?: Iok8sapiauthenticationv1UserInfo;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1TokenReview.
 * TokenReview attempts to authenticate a token to a known user. Note:
 * TokenReview requests may be cached by the webhook token authenticator plugin
 * in the kube-apiserver.
 *
 */
export interface Iok8sapiauthenticationv1TokenReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthenticationv1TokenReviewSpec} spec Spec holds
   * information about the request being evaluated
   */
  spec: Iok8sapiauthenticationv1TokenReviewSpec;
  /**
   * @member {Iok8sapiauthenticationv1TokenReviewStatus} [status] Status is
   * filled in by the server and indicates whether the request can be
   * authenticated.
   */
  status?: Iok8sapiauthenticationv1TokenReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1beta1TokenReviewSpec.
 * TokenReviewSpec is a description of the token authentication request.
 *
 */
export interface Iok8sapiauthenticationv1beta1TokenReviewSpec {
  /**
   * @member {string} [token] Token is the opaque bearer token.
   */
  token?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1beta1UserInfo.
 * UserInfo holds the information about the user needed to implement the
 * user.Info interface.
 *
 */
export interface Iok8sapiauthenticationv1beta1UserInfo {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] Any additional
   * information provided by the authenticator.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [groups] The names of groups this user is a part of.
   */
  groups?: string[];
  /**
   * @member {string} [uid] A unique value that identifies this user across
   * time. If this user is deleted and another user by the same name is added,
   * they will have different UIDs.
   */
  uid?: string;
  /**
   * @member {string} [username] The name that uniquely identifies this user
   * among all active users.
   */
  username?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1beta1TokenReviewStatus.
 * TokenReviewStatus is the result of the token authentication request.
 *
 */
export interface Iok8sapiauthenticationv1beta1TokenReviewStatus {
  /**
   * @member {boolean} [authenticated] Authenticated indicates that the token
   * was associated with a known user.
   */
  authenticated?: boolean;
  /**
   * @member {string} [error] Error indicates that the token couldn't be
   * checked
   */
  error?: string;
  /**
   * @member {Iok8sapiauthenticationv1beta1UserInfo} [user] User is the
   * UserInfo associated with the provided token.
   */
  user?: Iok8sapiauthenticationv1beta1UserInfo;
}

/**
 * @interface
 * An interface representing Iok8sapiauthenticationv1beta1TokenReview.
 * TokenReview attempts to authenticate a token to a known user. Note:
 * TokenReview requests may be cached by the webhook token authenticator plugin
 * in the kube-apiserver.
 *
 */
export interface Iok8sapiauthenticationv1beta1TokenReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthenticationv1beta1TokenReviewSpec} spec Spec holds
   * information about the request being evaluated
   */
  spec: Iok8sapiauthenticationv1beta1TokenReviewSpec;
  /**
   * @member {Iok8sapiauthenticationv1beta1TokenReviewStatus} [status] Status
   * is filled in by the server and indicates whether the request can be
   * authenticated.
   */
  status?: Iok8sapiauthenticationv1beta1TokenReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1NonResourceAttributes.
 * NonResourceAttributes includes the authorization attributes available for
 * non-resource requests to the Authorizer interface
 *
 */
export interface Iok8sapiauthorizationv1NonResourceAttributes {
  /**
   * @member {string} [path] Path is the URL path of the request
   */
  path?: string;
  /**
   * @member {string} [verb] Verb is the standard HTTP verb
   */
  verb?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1ResourceAttributes.
 * ResourceAttributes includes the authorization attributes available for
 * resource requests to the Authorizer interface
 *
 */
export interface Iok8sapiauthorizationv1ResourceAttributes {
  /**
   * @member {string} [group] Group is the API Group of the Resource.  "*"
   * means all.
   */
  group?: string;
  /**
   * @member {string} [name] Name is the name of the resource being requested
   * for a "get" or deleted for a "delete". "" (empty) means all.
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace is the namespace of the action
   * being requested.  Currently, there is no distinction between no namespace
   * and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews
   * "" (empty) is empty for cluster-scoped resources "" (empty) means "all"
   * for namespace scoped resources from a SubjectAccessReview or
   * SelfSubjectAccessReview
   */
  namespace?: string;
  /**
   * @member {string} [resource] Resource is one of the existing resource
   * types.  "*" means all.
   */
  resource?: string;
  /**
   * @member {string} [subresource] Subresource is one of the existing resource
   * types.  "" means none.
   */
  subresource?: string;
  /**
   * @member {string} [verb] Verb is a kubernetes resource API verb, like: get,
   * list, watch, create, update, delete, proxy.  "*" means all.
   */
  verb?: string;
  /**
   * @member {string} [version] Version is the API Version of the Resource.
   * "*" means all.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SubjectAccessReviewSpec.
 * SubjectAccessReviewSpec is a description of the access request.  Exactly one
 * of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes
 * must be set
 *
 */
export interface Iok8sapiauthorizationv1SubjectAccessReviewSpec {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] Extra corresponds
   * to the user.Info.GetExtra() method from the authenticator.  Since that is
   * input to the authorizer it needs a reflection here.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [groups] Groups is the groups you're testing for.
   */
  groups?: string[];
  /**
   * @member {Iok8sapiauthorizationv1NonResourceAttributes}
   * [nonResourceAttributes] NonResourceAttributes describes information for a
   * non-resource access request
   */
  nonResourceAttributes?: Iok8sapiauthorizationv1NonResourceAttributes;
  /**
   * @member {Iok8sapiauthorizationv1ResourceAttributes} [resourceAttributes]
   * ResourceAuthorizationAttributes describes information for a resource
   * access request
   */
  resourceAttributes?: Iok8sapiauthorizationv1ResourceAttributes;
  /**
   * @member {string} [uid] UID information about the requesting user.
   */
  uid?: string;
  /**
   * @member {string} [user] User is the user you're testing for. If you
   * specify "User" but not "Groups", then is it interpreted as "What if User
   * were not a member of any groups
   */
  user?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SubjectAccessReviewStatus.
 * SubjectAccessReviewStatus
 *
 */
export interface Iok8sapiauthorizationv1SubjectAccessReviewStatus {
  /**
   * @member {boolean} allowed Allowed is required. True if the action would be
   * allowed, false otherwise.
   */
  allowed: boolean;
  /**
   * @member {boolean} [denied] Denied is optional. True if the action would be
   * denied, otherwise false. If both allowed is false and denied is false,
   * then the authorizer has no opinion on whether to authorize the action.
   * Denied may not be true if Allowed is true.
   */
  denied?: boolean;
  /**
   * @member {string} [evaluationError] EvaluationError is an indication that
   * some error occurred during the authorization check. It is entirely
   * possible to get an error and be able to continue determine authorization
   * status in spite of it. For instance, RBAC can be missing a role, but
   * enough roles are still present and bound to reason about the request.
   */
  evaluationError?: string;
  /**
   * @member {string} [reason] Reason is optional.  It indicates why a request
   * was allowed or denied.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1LocalSubjectAccessReview.
 * LocalSubjectAccessReview checks whether or not a user or group can perform
 * an action in a given namespace. Having a namespace scoped resource makes it
 * much easier to grant namespace scoped policy that includes permissions
 * checking.
 *
 */
export interface Iok8sapiauthorizationv1LocalSubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1SubjectAccessReviewSpec} spec Spec holds
   * information about the request being evaluated.  spec.namespace must be
   * equal to the namespace you made the request against.  If empty, it is
   * defaulted.
   */
  spec: Iok8sapiauthorizationv1SubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1SubjectAccessReviewStatus} [status] Status
   * is filled in by the server and indicates whether the request is allowed or
   * not
   */
  status?: Iok8sapiauthorizationv1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1NonResourceRule.
 * NonResourceRule holds information that describes a rule for the non-resource
 *
 */
export interface Iok8sapiauthorizationv1NonResourceRule {
  /**
   * @member {string[]} [nonResourceURLs] NonResourceURLs is a set of partial
   * urls that a user should have access to.  *s are allowed, but only as the
   * full, final step in the path.  "*" means all.
   */
  nonResourceURLs?: string[];
  /**
   * @member {string[]} verbs Verb is a list of kubernetes non-resource API
   * verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1ResourceRule.
 * ResourceRule is the list of actions the subject is allowed to perform on
 * resources. The list ordering isn't significant, may contain duplicates, and
 * possibly be incomplete.
 *
 */
export interface Iok8sapiauthorizationv1ResourceRule {
  /**
   * @member {string[]} [apiGroups] APIGroups is the name of the APIGroup that
   * contains the resources.  If multiple API groups are specified, any action
   * requested against one of the enumerated resources in any API group will be
   * allowed.  "*" means all.
   */
  apiGroups?: string[];
  /**
   * @member {string[]} [resourceNames] ResourceNames is an optional white list
   * of names that the rule applies to.  An empty set means that everything is
   * allowed.  "*" means all.
   */
  resourceNames?: string[];
  /**
   * @member {string[]} [resources] Resources is a list of resources this rule
   * applies to.  "*" means all in the specified apiGroups.
   * "*\/foo" represents the subresource 'foo' for all resources in the
   * specified apiGroups.
   */
  resources?: string[];
  /**
   * @member {string[]} verbs Verb is a list of kubernetes resource API verbs,
   * like: get, list, watch, create, update, delete, proxy.  "*" means all.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec.
 * SelfSubjectAccessReviewSpec is a description of the access request.  Exactly
 * one of ResourceAuthorizationAttributes and
 * NonResourceAuthorizationAttributes must be set
 *
 */
export interface Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec {
  /**
   * @member {Iok8sapiauthorizationv1NonResourceAttributes}
   * [nonResourceAttributes] NonResourceAttributes describes information for a
   * non-resource access request
   */
  nonResourceAttributes?: Iok8sapiauthorizationv1NonResourceAttributes;
  /**
   * @member {Iok8sapiauthorizationv1ResourceAttributes} [resourceAttributes]
   * ResourceAuthorizationAttributes describes information for a resource
   * access request
   */
  resourceAttributes?: Iok8sapiauthorizationv1ResourceAttributes;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SelfSubjectAccessReview.
 * SelfSubjectAccessReview checks whether or the current user can perform an
 * action.  Not filling in a spec.namespace means "in all namespaces".  Self is
 * a special case, because users should always be able to check whether they
 * can perform an action
 *
 */
export interface Iok8sapiauthorizationv1SelfSubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec} spec Spec
   * holds information about the request being evaluated.  user and groups must
   * be empty
   */
  spec: Iok8sapiauthorizationv1SelfSubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1SubjectAccessReviewStatus} [status] Status
   * is filled in by the server and indicates whether the request is allowed or
   * not
   */
  status?: Iok8sapiauthorizationv1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec.
 */
export interface Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec {
  /**
   * @member {string} [namespace] Namespace to evaluate rules for. Required.
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SubjectRulesReviewStatus.
 * SubjectRulesReviewStatus contains the result of a rules check. This check
 * can be incomplete depending on the set of authorizers the server is
 * configured with and any errors experienced during evaluation. Because
 * authorization rules are additive, if a rule appears in a list it's safe to
 * assume the subject has that permission, even if that list is incomplete.
 *
 */
export interface Iok8sapiauthorizationv1SubjectRulesReviewStatus {
  /**
   * @member {string} [evaluationError] EvaluationError can appear in
   * combination with Rules. It indicates an error occurred during rule
   * evaluation, such as an authorizer that doesn't support rule evaluation,
   * and that ResourceRules and/or NonResourceRules may be incomplete.
   */
  evaluationError?: string;
  /**
   * @member {boolean} incomplete Incomplete is true when the rules returned by
   * this call are incomplete. This is most commonly encountered when an
   * authorizer, such as an external authorizer, doesn't support rules
   * evaluation.
   */
  incomplete: boolean;
  /**
   * @member {Iok8sapiauthorizationv1NonResourceRule[]} nonResourceRules
   * NonResourceRules is the list of actions the subject is allowed to perform
   * on non-resources. The list ordering isn't significant, may contain
   * duplicates, and possibly be incomplete.
   */
  nonResourceRules: Iok8sapiauthorizationv1NonResourceRule[];
  /**
   * @member {Iok8sapiauthorizationv1ResourceRule[]} resourceRules
   * ResourceRules is the list of actions the subject is allowed to perform on
   * resources. The list ordering isn't significant, may contain duplicates,
   * and possibly be incomplete.
   */
  resourceRules: Iok8sapiauthorizationv1ResourceRule[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SelfSubjectRulesReview.
 * SelfSubjectRulesReview enumerates the set of actions the current user can
 * perform within a namespace. The returned list of actions may be incomplete
 * depending on the server's authorization mode, and any errors experienced
 * during the evaluation. SelfSubjectRulesReview should be used by UIs to
 * show/hide actions, or to quickly let an end user reason about their
 * permissions. It should NOT Be used by external systems to drive
 * authorization decisions as this raises confused deputy, cache
 * lifetime/revocation, and correctness concerns. SubjectAccessReview, and
 * LocalAccessReview are the correct way to defer authorization decisions to
 * the API server.
 *
 */
export interface Iok8sapiauthorizationv1SelfSubjectRulesReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec} spec Spec
   * holds information about the request being evaluated.
   */
  spec: Iok8sapiauthorizationv1SelfSubjectRulesReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1SubjectRulesReviewStatus} [status] Status
   * is filled in by the server and indicates the set of actions a user can
   * perform.
   */
  status?: Iok8sapiauthorizationv1SubjectRulesReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1SubjectAccessReview.
 * SubjectAccessReview checks whether or not a user or group can perform an
 * action.
 *
 */
export interface Iok8sapiauthorizationv1SubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1SubjectAccessReviewSpec} spec Spec holds
   * information about the request being evaluated
   */
  spec: Iok8sapiauthorizationv1SubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1SubjectAccessReviewStatus} [status] Status
   * is filled in by the server and indicates whether the request is allowed or
   * not
   */
  status?: Iok8sapiauthorizationv1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1NonResourceAttributes.
 * NonResourceAttributes includes the authorization attributes available for
 * non-resource requests to the Authorizer interface
 *
 */
export interface Iok8sapiauthorizationv1beta1NonResourceAttributes {
  /**
   * @member {string} [path] Path is the URL path of the request
   */
  path?: string;
  /**
   * @member {string} [verb] Verb is the standard HTTP verb
   */
  verb?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1ResourceAttributes.
 * ResourceAttributes includes the authorization attributes available for
 * resource requests to the Authorizer interface
 *
 */
export interface Iok8sapiauthorizationv1beta1ResourceAttributes {
  /**
   * @member {string} [group] Group is the API Group of the Resource.  "*"
   * means all.
   */
  group?: string;
  /**
   * @member {string} [name] Name is the name of the resource being requested
   * for a "get" or deleted for a "delete". "" (empty) means all.
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace is the namespace of the action
   * being requested.  Currently, there is no distinction between no namespace
   * and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews
   * "" (empty) is empty for cluster-scoped resources "" (empty) means "all"
   * for namespace scoped resources from a SubjectAccessReview or
   * SelfSubjectAccessReview
   */
  namespace?: string;
  /**
   * @member {string} [resource] Resource is one of the existing resource
   * types.  "*" means all.
   */
  resource?: string;
  /**
   * @member {string} [subresource] Subresource is one of the existing resource
   * types.  "" means none.
   */
  subresource?: string;
  /**
   * @member {string} [verb] Verb is a kubernetes resource API verb, like: get,
   * list, watch, create, update, delete, proxy.  "*" means all.
   */
  verb?: string;
  /**
   * @member {string} [version] Version is the API Version of the Resource.
   * "*" means all.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec.
 * SubjectAccessReviewSpec is a description of the access request.  Exactly one
 * of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes
 * must be set
 *
 */
export interface Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] Extra corresponds
   * to the user.Info.GetExtra() method from the authenticator.  Since that is
   * input to the authorizer it needs a reflection here.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [group] Groups is the groups you're testing for.
   */
  group?: string[];
  /**
   * @member {Iok8sapiauthorizationv1beta1NonResourceAttributes}
   * [nonResourceAttributes] NonResourceAttributes describes information for a
   * non-resource access request
   */
  nonResourceAttributes?: Iok8sapiauthorizationv1beta1NonResourceAttributes;
  /**
   * @member {Iok8sapiauthorizationv1beta1ResourceAttributes}
   * [resourceAttributes] ResourceAuthorizationAttributes describes information
   * for a resource access request
   */
  resourceAttributes?: Iok8sapiauthorizationv1beta1ResourceAttributes;
  /**
   * @member {string} [uid] UID information about the requesting user.
   */
  uid?: string;
  /**
   * @member {string} [user] User is the user you're testing for. If you
   * specify "User" but not "Group", then is it interpreted as "What if User
   * were not a member of any groups
   */
  user?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus.
 * SubjectAccessReviewStatus
 *
 */
export interface Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus {
  /**
   * @member {boolean} allowed Allowed is required. True if the action would be
   * allowed, false otherwise.
   */
  allowed: boolean;
  /**
   * @member {boolean} [denied] Denied is optional. True if the action would be
   * denied, otherwise false. If both allowed is false and denied is false,
   * then the authorizer has no opinion on whether to authorize the action.
   * Denied may not be true if Allowed is true.
   */
  denied?: boolean;
  /**
   * @member {string} [evaluationError] EvaluationError is an indication that
   * some error occurred during the authorization check. It is entirely
   * possible to get an error and be able to continue determine authorization
   * status in spite of it. For instance, RBAC can be missing a role, but
   * enough roles are still present and bound to reason about the request.
   */
  evaluationError?: string;
  /**
   * @member {string} [reason] Reason is optional.  It indicates why a request
   * was allowed or denied.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1LocalSubjectAccessReview.
 * LocalSubjectAccessReview checks whether or not a user or group can perform
 * an action in a given namespace. Having a namespace scoped resource makes it
 * much easier to grant namespace scoped policy that includes permissions
 * checking.
 *
 */
export interface Iok8sapiauthorizationv1beta1LocalSubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec} spec Spec
   * holds information about the request being evaluated.  spec.namespace must
   * be equal to the namespace you made the request against.  If empty, it is
   * defaulted.
   */
  spec: Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus} [status]
   * Status is filled in by the server and indicates whether the request is
   * allowed or not
   */
  status?: Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1NonResourceRule.
 * NonResourceRule holds information that describes a rule for the non-resource
 *
 */
export interface Iok8sapiauthorizationv1beta1NonResourceRule {
  /**
   * @member {string[]} [nonResourceURLs] NonResourceURLs is a set of partial
   * urls that a user should have access to.  *s are allowed, but only as the
   * full, final step in the path.  "*" means all.
   */
  nonResourceURLs?: string[];
  /**
   * @member {string[]} verbs Verb is a list of kubernetes non-resource API
   * verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1ResourceRule.
 * ResourceRule is the list of actions the subject is allowed to perform on
 * resources. The list ordering isn't significant, may contain duplicates, and
 * possibly be incomplete.
 *
 */
export interface Iok8sapiauthorizationv1beta1ResourceRule {
  /**
   * @member {string[]} [apiGroups] APIGroups is the name of the APIGroup that
   * contains the resources.  If multiple API groups are specified, any action
   * requested against one of the enumerated resources in any API group will be
   * allowed.  "*" means all.
   */
  apiGroups?: string[];
  /**
   * @member {string[]} [resourceNames] ResourceNames is an optional white list
   * of names that the rule applies to.  An empty set means that everything is
   * allowed.  "*" means all.
   */
  resourceNames?: string[];
  /**
   * @member {string[]} [resources] Resources is a list of resources this rule
   * applies to.  "*" means all in the specified apiGroups.
   * "*\/foo" represents the subresource 'foo' for all resources in the
   * specified apiGroups.
   */
  resources?: string[];
  /**
   * @member {string[]} verbs Verb is a list of kubernetes resource API verbs,
   * like: get, list, watch, create, update, delete, proxy.  "*" means all.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec.
 * SelfSubjectAccessReviewSpec is a description of the access request.  Exactly
 * one of ResourceAuthorizationAttributes and
 * NonResourceAuthorizationAttributes must be set
 *
 */
export interface Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec {
  /**
   * @member {Iok8sapiauthorizationv1beta1NonResourceAttributes}
   * [nonResourceAttributes] NonResourceAttributes describes information for a
   * non-resource access request
   */
  nonResourceAttributes?: Iok8sapiauthorizationv1beta1NonResourceAttributes;
  /**
   * @member {Iok8sapiauthorizationv1beta1ResourceAttributes}
   * [resourceAttributes] ResourceAuthorizationAttributes describes information
   * for a resource access request
   */
  resourceAttributes?: Iok8sapiauthorizationv1beta1ResourceAttributes;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SelfSubjectAccessReview.
 * SelfSubjectAccessReview checks whether or the current user can perform an
 * action.  Not filling in a spec.namespace means "in all namespaces".  Self is
 * a special case, because users should always be able to check whether they
 * can perform an action
 *
 */
export interface Iok8sapiauthorizationv1beta1SelfSubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec} spec
   * Spec holds information about the request being evaluated.  user and groups
   * must be empty
   */
  spec: Iok8sapiauthorizationv1beta1SelfSubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus} [status]
   * Status is filled in by the server and indicates whether the request is
   * allowed or not
   */
  status?: Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec.
 */
export interface Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec {
  /**
   * @member {string} [namespace] Namespace to evaluate rules for. Required.
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus.
 * SubjectRulesReviewStatus contains the result of a rules check. This check
 * can be incomplete depending on the set of authorizers the server is
 * configured with and any errors experienced during evaluation. Because
 * authorization rules are additive, if a rule appears in a list it's safe to
 * assume the subject has that permission, even if that list is incomplete.
 *
 */
export interface Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus {
  /**
   * @member {string} [evaluationError] EvaluationError can appear in
   * combination with Rules. It indicates an error occurred during rule
   * evaluation, such as an authorizer that doesn't support rule evaluation,
   * and that ResourceRules and/or NonResourceRules may be incomplete.
   */
  evaluationError?: string;
  /**
   * @member {boolean} incomplete Incomplete is true when the rules returned by
   * this call are incomplete. This is most commonly encountered when an
   * authorizer, such as an external authorizer, doesn't support rules
   * evaluation.
   */
  incomplete: boolean;
  /**
   * @member {Iok8sapiauthorizationv1beta1NonResourceRule[]} nonResourceRules
   * NonResourceRules is the list of actions the subject is allowed to perform
   * on non-resources. The list ordering isn't significant, may contain
   * duplicates, and possibly be incomplete.
   */
  nonResourceRules: Iok8sapiauthorizationv1beta1NonResourceRule[];
  /**
   * @member {Iok8sapiauthorizationv1beta1ResourceRule[]} resourceRules
   * ResourceRules is the list of actions the subject is allowed to perform on
   * resources. The list ordering isn't significant, may contain duplicates,
   * and possibly be incomplete.
   */
  resourceRules: Iok8sapiauthorizationv1beta1ResourceRule[];
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SelfSubjectRulesReview.
 * SelfSubjectRulesReview enumerates the set of actions the current user can
 * perform within a namespace. The returned list of actions may be incomplete
 * depending on the server's authorization mode, and any errors experienced
 * during the evaluation. SelfSubjectRulesReview should be used by UIs to
 * show/hide actions, or to quickly let an end user reason about their
 * permissions. It should NOT Be used by external systems to drive
 * authorization decisions as this raises confused deputy, cache
 * lifetime/revocation, and correctness concerns. SubjectAccessReview, and
 * LocalAccessReview are the correct way to defer authorization decisions to
 * the API server.
 *
 */
export interface Iok8sapiauthorizationv1beta1SelfSubjectRulesReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec} spec Spec
   * holds information about the request being evaluated.
   */
  spec: Iok8sapiauthorizationv1beta1SelfSubjectRulesReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus} [status]
   * Status is filled in by the server and indicates the set of actions a user
   * can perform.
   */
  status?: Iok8sapiauthorizationv1beta1SubjectRulesReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiauthorizationv1beta1SubjectAccessReview.
 * SubjectAccessReview checks whether or not a user or group can perform an
 * action.
 *
 */
export interface Iok8sapiauthorizationv1beta1SubjectAccessReview {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec} spec Spec
   * holds information about the request being evaluated
   */
  spec: Iok8sapiauthorizationv1beta1SubjectAccessReviewSpec;
  /**
   * @member {Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus} [status]
   * Status is filled in by the server and indicates whether the request is
   * allowed or not
   */
  status?: Iok8sapiauthorizationv1beta1SubjectAccessReviewStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1CrossVersionObjectReference.
 * CrossVersionObjectReference contains enough information to let you identify
 * the referred resource.
 *
 */
export interface Iok8sapiautoscalingv1CrossVersionObjectReference {
  /**
   * @member {string} [apiVersion] API version of the referent
   */
  apiVersion?: string;
  /**
   * @member {string} kind Kind of the referent; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
   */
  kind: string;
  /**
   * @member {string} name Name of the referent; More info:
   * http://kubernetes.io/docs/user-guide/identifiers#names
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec.
 * specification of a horizontal pod autoscaler.
 *
 */
export interface Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec {
  /**
   * @member {number} maxReplicas upper limit for the number of pods that can
   * be set by the autoscaler; cannot be smaller than MinReplicas.
   */
  maxReplicas: number;
  /**
   * @member {number} [minReplicas] lower limit for the number of pods that can
   * be set by the autoscaler, default 1.
   */
  minReplicas?: number;
  /**
   * @member {Iok8sapiautoscalingv1CrossVersionObjectReference} scaleTargetRef
   * reference to scaled resource; horizontal pod autoscaler will learn the
   * current resource consumption and will set the desired number of pods by
   * using its Scale subresource.
   */
  scaleTargetRef: Iok8sapiautoscalingv1CrossVersionObjectReference;
  /**
   * @member {number} [targetCPUUtilizationPercentage] target average CPU
   * utilization (represented as a percentage of requested CPU) over all the
   * pods; if not specified the default autoscaling policy will be used.
   */
  targetCPUUtilizationPercentage?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus.
 * current status of a horizontal pod autoscaler
 *
 */
export interface Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus {
  /**
   * @member {number} [currentCPUUtilizationPercentage] current average CPU
   * utilization over all pods, represented as a percentage of requested CPU,
   * e.g. 70 means that an average pod is using now 70% of its requested CPU.
   */
  currentCPUUtilizationPercentage?: number;
  /**
   * @member {number} currentReplicas current number of replicas of pods
   * managed by this autoscaler.
   */
  currentReplicas: number;
  /**
   * @member {number} desiredReplicas desired number of replicas of pods
   * managed by this autoscaler.
   */
  desiredReplicas: number;
  /**
   * @member {Date} [lastScaleTime] last time the HorizontalPodAutoscaler
   * scaled the number of pods; used by the autoscaler to control how often the
   * number of pods is changed.
   */
  lastScaleTime?: Date;
  /**
   * @member {number} [observedGeneration] most recent generation observed by
   * this autoscaler.
   */
  observedGeneration?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1HorizontalPodAutoscaler.
 * configuration of a horizontal pod autoscaler.
 *
 */
export interface Iok8sapiautoscalingv1HorizontalPodAutoscaler {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec} [spec]
   * behaviour of autoscaler. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiautoscalingv1HorizontalPodAutoscalerSpec;
  /**
   * @member {Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus} [status]
   * current information about the autoscaler.
   */
  status?: Iok8sapiautoscalingv1HorizontalPodAutoscalerStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1HorizontalPodAutoscalerList.
 * list of horizontal pod autoscaler objects.
 *
 */
export interface Iok8sapiautoscalingv1HorizontalPodAutoscalerList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiautoscalingv1HorizontalPodAutoscaler[]} items list of
   * horizontal pod autoscaler objects.
   */
  items: Iok8sapiautoscalingv1HorizontalPodAutoscaler[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1ScaleSpec.
 * ScaleSpec describes the attributes of a scale subresource.
 *
 */
export interface Iok8sapiautoscalingv1ScaleSpec {
  /**
   * @member {number} [replicas] desired number of instances for the scaled
   * object.
   */
  replicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1ScaleStatus.
 * ScaleStatus represents the current status of a scale subresource.
 *
 */
export interface Iok8sapiautoscalingv1ScaleStatus {
  /**
   * @member {number} replicas actual number of observed instances of the
   * scaled object.
   */
  replicas: number;
  /**
   * @member {string} [selector] label query over pods that should match the
   * replicas count. This is same as the label selector but in the string
   * format to avoid introspection by clients. The string will be in the same
   * format as the query-param syntax. More info about label selectors:
   * http://kubernetes.io/docs/user-guide/labels#label-selectors
   */
  selector?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv1Scale.
 * Scale represents a scaling request for a resource.
 *
 */
export interface Iok8sapiautoscalingv1Scale {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiautoscalingv1ScaleSpec} [spec] defines the behavior of
   * the scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiautoscalingv1ScaleSpec;
  /**
   * @member {Iok8sapiautoscalingv1ScaleStatus} [status] current status of the
   * scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   * Read-only.
   */
  status?: Iok8sapiautoscalingv1ScaleStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1CrossVersionObjectReference.
 * CrossVersionObjectReference contains enough information to let you identify
 * the referred resource.
 *
 */
export interface Iok8sapiautoscalingv2beta1CrossVersionObjectReference {
  /**
   * @member {string} [apiVersion] API version of the referent
   */
  apiVersion?: string;
  /**
   * @member {string} kind Kind of the referent; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
   */
  kind: string;
  /**
   * @member {string} name Name of the referent; More info:
   * http://kubernetes.io/docs/user-guide/identifiers#names
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ExternalMetricSource.
 * ExternalMetricSource indicates how to scale on a metric not associated with
 * any Kubernetes object (for example length of queue in cloud messaging
 * service, or QPS from loadbalancer running outside of cluster). Exactly one
 * "target" type should be set.
 *
 */
export interface Iok8sapiautoscalingv2beta1ExternalMetricSource {
  /**
   * @member {string} metricName metricName is the name of the metric in
   * question.
   */
  metricName: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [metricSelector]
   * metricSelector is used to identify a specific time series within a given
   * metric.
   */
  metricSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string} [targetAverageValue] targetAverageValue is the target
   * per-pod value of global metric (as a quantity). Mutually exclusive with
   * TargetValue.
   */
  targetAverageValue?: string;
  /**
   * @member {string} [targetValue] targetValue is the target value of the
   * metric (as a quantity). Mutually exclusive with TargetAverageValue.
   */
  targetValue?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ExternalMetricStatus.
 * ExternalMetricStatus indicates the current value of a global metric not
 * associated with any Kubernetes object.
 *
 */
export interface Iok8sapiautoscalingv2beta1ExternalMetricStatus {
  /**
   * @member {string} [currentAverageValue] currentAverageValue is the current
   * value of metric averaged over autoscaled pods.
   */
  currentAverageValue?: string;
  /**
   * @member {string} currentValue currentValue is the current value of the
   * metric (as a quantity)
   */
  currentValue: string;
  /**
   * @member {string} metricName metricName is the name of a metric used for
   * autoscaling in metric system.
   */
  metricName: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [metricSelector]
   * metricSelector is used to identify a specific time series within a given
   * metric.
   */
  metricSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ObjectMetricSource.
 * ObjectMetricSource indicates how to scale on a metric describing a
 * kubernetes object (for example, hits-per-second on an Ingress object).
 *
 */
export interface Iok8sapiautoscalingv2beta1ObjectMetricSource {
  /**
   * @member {string} metricName metricName is the name of the metric in
   * question.
   */
  metricName: string;
  /**
   * @member {Iok8sapiautoscalingv2beta1CrossVersionObjectReference} target
   * target is the described Kubernetes object.
   */
  target: Iok8sapiautoscalingv2beta1CrossVersionObjectReference;
  /**
   * @member {string} targetValue targetValue is the target value of the metric
   * (as a quantity).
   */
  targetValue: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1PodsMetricSource.
 * PodsMetricSource indicates how to scale on a metric describing each pod in
 * the current scale target (for example, transactions-processed-per-second).
 * The values will be averaged together before being compared to the target
 * value.
 *
 */
export interface Iok8sapiautoscalingv2beta1PodsMetricSource {
  /**
   * @member {string} metricName metricName is the name of the metric in
   * question
   */
  metricName: string;
  /**
   * @member {string} targetAverageValue targetAverageValue is the target value
   * of the average of the metric across all relevant pods (as a quantity)
   */
  targetAverageValue: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ResourceMetricSource.
 * ResourceMetricSource indicates how to scale on a resource metric known to
 * Kubernetes, as specified in requests and limits, describing each pod in the
 * current scale target (e.g. CPU or memory).  The values will be averaged
 * together before being compared to the target.  Such metrics are built in to
 * Kubernetes, and have special scaling options on top of those available to
 * normal per-pod metrics using the "pods" source.  Only one "target" type
 * should be set.
 *
 */
export interface Iok8sapiautoscalingv2beta1ResourceMetricSource {
  /**
   * @member {string} name name is the name of the resource in question.
   */
  name: string;
  /**
   * @member {number} [targetAverageUtilization] targetAverageUtilization is
   * the target value of the average of the resource metric across all relevant
   * pods, represented as a percentage of the requested value of the resource
   * for the pods.
   */
  targetAverageUtilization?: number;
  /**
   * @member {string} [targetAverageValue] targetAverageValue is the target
   * value of the average of the resource metric across all relevant pods, as a
   * raw value (instead of as a percentage of the request), similar to the
   * "pods" metric source type.
   */
  targetAverageValue?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1MetricSpec.
 * MetricSpec specifies how to scale based on a single metric (only `type` and
 * one other matching field should be set at once).
 *
 */
export interface Iok8sapiautoscalingv2beta1MetricSpec {
  /**
   * @member {Iok8sapiautoscalingv2beta1ExternalMetricSource} [external]
   * external refers to a global metric that is not associated with any
   * Kubernetes object. It allows autoscaling based on information coming from
   * components running outside of cluster (for example length of queue in
   * cloud messaging service, or QPS from loadbalancer running outside of
   * cluster).
   */
  external?: Iok8sapiautoscalingv2beta1ExternalMetricSource;
  /**
   * @member {Iok8sapiautoscalingv2beta1ObjectMetricSource} [object] object
   * refers to a metric describing a single kubernetes object (for example,
   * hits-per-second on an Ingress object).
   */
  object?: Iok8sapiautoscalingv2beta1ObjectMetricSource;
  /**
   * @member {Iok8sapiautoscalingv2beta1PodsMetricSource} [pods] pods refers to
   * a metric describing each pod in the current scale target (for example,
   * transactions-processed-per-second).  The values will be averaged together
   * before being compared to the target value.
   */
  pods?: Iok8sapiautoscalingv2beta1PodsMetricSource;
  /**
   * @member {Iok8sapiautoscalingv2beta1ResourceMetricSource} [resource]
   * resource refers to a resource metric (such as those specified in requests
   * and limits) known to Kubernetes describing each pod in the current scale
   * target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and
   * have special scaling options on top of those available to normal per-pod
   * metrics using the "pods" source.
   */
  resource?: Iok8sapiautoscalingv2beta1ResourceMetricSource;
  /**
   * @member {string} type type is the type of metric source.  It should be one
   * of "Object", "Pods" or "Resource", each mapping to a matching field in the
   * object.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec.
 * HorizontalPodAutoscalerSpec describes the desired functionality of the
 * HorizontalPodAutoscaler.
 *
 */
export interface Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec {
  /**
   * @member {number} maxReplicas maxReplicas is the upper limit for the number
   * of replicas to which the autoscaler can scale up. It cannot be less that
   * minReplicas.
   */
  maxReplicas: number;
  /**
   * @member {Iok8sapiautoscalingv2beta1MetricSpec[]} [metrics] metrics
   * contains the specifications for which to use to calculate the desired
   * replica count (the maximum replica count across all metrics will be used).
   * The desired replica count is calculated multiplying the ratio between the
   * target value and the current value by the current number of pods.  Ergo,
   * metrics used must decrease as the pod count is increased, and vice-versa.
   * See the individual metric source types for more information about how each
   * type of metric must respond.
   */
  metrics?: Iok8sapiautoscalingv2beta1MetricSpec[];
  /**
   * @member {number} [minReplicas] minReplicas is the lower limit for the
   * number of replicas to which the autoscaler can scale down. It defaults to
   * 1 pod.
   */
  minReplicas?: number;
  /**
   * @member {Iok8sapiautoscalingv2beta1CrossVersionObjectReference}
   * scaleTargetRef scaleTargetRef points to the target resource to scale, and
   * is used to the pods for which metrics should be collected, as well as to
   * actually change the replica count.
   */
  scaleTargetRef: Iok8sapiautoscalingv2beta1CrossVersionObjectReference;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition.
 * HorizontalPodAutoscalerCondition describes the state of a
 * HorizontalPodAutoscaler at a certain point.
 *
 */
export interface Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition {
  /**
   * @member {Date} [lastTransitionTime] lastTransitionTime is the last time
   * the condition transitioned from one status to another
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] message is a human-readable explanation
   * containing details about the transition
   */
  message?: string;
  /**
   * @member {string} [reason] reason is the reason for the condition's last
   * transition.
   */
  reason?: string;
  /**
   * @member {string} status status is the status of the condition (True,
   * False, Unknown)
   */
  status: string;
  /**
   * @member {string} type type describes the current condition
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ObjectMetricStatus.
 * ObjectMetricStatus indicates the current value of a metric describing a
 * kubernetes object (for example, hits-per-second on an Ingress object).
 *
 */
export interface Iok8sapiautoscalingv2beta1ObjectMetricStatus {
  /**
   * @member {string} currentValue currentValue is the current value of the
   * metric (as a quantity).
   */
  currentValue: string;
  /**
   * @member {string} metricName metricName is the name of the metric in
   * question.
   */
  metricName: string;
  /**
   * @member {Iok8sapiautoscalingv2beta1CrossVersionObjectReference} target
   * target is the described Kubernetes object.
   */
  target: Iok8sapiautoscalingv2beta1CrossVersionObjectReference;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1PodsMetricStatus.
 * PodsMetricStatus indicates the current value of a metric describing each pod
 * in the current scale target (for example,
 * transactions-processed-per-second).
 *
 */
export interface Iok8sapiautoscalingv2beta1PodsMetricStatus {
  /**
   * @member {string} currentAverageValue currentAverageValue is the current
   * value of the average of the metric across all relevant pods (as a
   * quantity)
   */
  currentAverageValue: string;
  /**
   * @member {string} metricName metricName is the name of the metric in
   * question
   */
  metricName: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1ResourceMetricStatus.
 * ResourceMetricStatus indicates the current value of a resource metric known
 * to Kubernetes, as specified in requests and limits, describing each pod in
 * the current scale target (e.g. CPU or memory).  Such metrics are built in to
 * Kubernetes, and have special scaling options on top of those available to
 * normal per-pod metrics using the "pods" source.
 *
 */
export interface Iok8sapiautoscalingv2beta1ResourceMetricStatus {
  /**
   * @member {number} [currentAverageUtilization] currentAverageUtilization is
   * the current value of the average of the resource metric across all
   * relevant pods, represented as a percentage of the requested value of the
   * resource for the pods.  It will only be present if `targetAverageValue`
   * was set in the corresponding metric specification.
   */
  currentAverageUtilization?: number;
  /**
   * @member {string} currentAverageValue currentAverageValue is the current
   * value of the average of the resource metric across all relevant pods, as a
   * raw value (instead of as a percentage of the request), similar to the
   * "pods" metric source type. It will always be set, regardless of the
   * corresponding metric specification.
   */
  currentAverageValue: string;
  /**
   * @member {string} name name is the name of the resource in question.
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1MetricStatus.
 * MetricStatus describes the last-read state of a single metric.
 *
 */
export interface Iok8sapiautoscalingv2beta1MetricStatus {
  /**
   * @member {Iok8sapiautoscalingv2beta1ExternalMetricStatus} [external]
   * external refers to a global metric that is not associated with any
   * Kubernetes object. It allows autoscaling based on information coming from
   * components running outside of cluster (for example length of queue in
   * cloud messaging service, or QPS from loadbalancer running outside of
   * cluster).
   */
  external?: Iok8sapiautoscalingv2beta1ExternalMetricStatus;
  /**
   * @member {Iok8sapiautoscalingv2beta1ObjectMetricStatus} [object] object
   * refers to a metric describing a single kubernetes object (for example,
   * hits-per-second on an Ingress object).
   */
  object?: Iok8sapiautoscalingv2beta1ObjectMetricStatus;
  /**
   * @member {Iok8sapiautoscalingv2beta1PodsMetricStatus} [pods] pods refers to
   * a metric describing each pod in the current scale target (for example,
   * transactions-processed-per-second).  The values will be averaged together
   * before being compared to the target value.
   */
  pods?: Iok8sapiautoscalingv2beta1PodsMetricStatus;
  /**
   * @member {Iok8sapiautoscalingv2beta1ResourceMetricStatus} [resource]
   * resource refers to a resource metric (such as those specified in requests
   * and limits) known to Kubernetes describing each pod in the current scale
   * target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and
   * have special scaling options on top of those available to normal per-pod
   * metrics using the "pods" source.
   */
  resource?: Iok8sapiautoscalingv2beta1ResourceMetricStatus;
  /**
   * @member {string} type type is the type of metric source.  It will be one
   * of "Object", "Pods" or "Resource", each corresponds to a matching field in
   * the object.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus.
 * HorizontalPodAutoscalerStatus describes the current status of a horizontal
 * pod autoscaler.
 *
 */
export interface Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus {
  /**
   * @member {Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition[]}
   * conditions conditions is the set of conditions required for this
   * autoscaler to scale its target, and indicates whether or not those
   * conditions are met.
   */
  conditions: Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerCondition[];
  /**
   * @member {Iok8sapiautoscalingv2beta1MetricStatus[]} currentMetrics
   * currentMetrics is the last read state of the metrics used by this
   * autoscaler.
   */
  currentMetrics: Iok8sapiautoscalingv2beta1MetricStatus[];
  /**
   * @member {number} currentReplicas currentReplicas is current number of
   * replicas of pods managed by this autoscaler, as last seen by the
   * autoscaler.
   */
  currentReplicas: number;
  /**
   * @member {number} desiredReplicas desiredReplicas is the desired number of
   * replicas of pods managed by this autoscaler, as last calculated by the
   * autoscaler.
   */
  desiredReplicas: number;
  /**
   * @member {Date} [lastScaleTime] lastScaleTime is the last time the
   * HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler
   * to control how often the number of pods is changed.
   */
  lastScaleTime?: Date;
  /**
   * @member {number} [observedGeneration] observedGeneration is the most
   * recent generation observed by this autoscaler.
   */
  observedGeneration?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler.
 * HorizontalPodAutoscaler is the configuration for a horizontal pod
 * autoscaler, which automatically manages the replica count of any resource
 * implementing the scale subresource based on the metrics specified.
 *
 */
export interface Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] metadata is
   * the standard object metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec} [spec]
   * spec is the specification for the behaviour of the autoscaler. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec;
  /**
   * @member {Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus} [status]
   * status is the current information about the autoscaler.
   */
  status?: Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList.
 * HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.
 *
 */
export interface Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler[]} items items
   * is the list of horizontal pod autoscaler objects.
   */
  items: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] metadata is
   * the standard list metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1JobSpec.
 * JobSpec describes how the job execution will look like.
 *
 */
export interface Iok8sapibatchv1JobSpec {
  /**
   * @member {number} [activeDeadlineSeconds] Specifies the duration in seconds
   * relative to the startTime that the job may be active before the system
   * tries to terminate it; value must be positive integer
   */
  activeDeadlineSeconds?: number;
  /**
   * @member {number} [backoffLimit] Specifies the number of retries before
   * marking this job failed. Defaults to 6
   */
  backoffLimit?: number;
  /**
   * @member {number} [completions] Specifies the desired number of
   * successfully finished pods the job should be run with.  Setting to nil
   * means that the success of any pod signals the success of all pods, and
   * allows parallelism to have any positive value.  Setting to 1 means that
   * parallelism is limited to 1 and the success of that pod signals the
   * success of the job. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   */
  completions?: number;
  /**
   * @member {boolean} [manualSelector] manualSelector controls generation of
   * pod labels and pod selectors. Leave `manualSelector` unset unless you are
   * certain what you are doing. When false or unset, the system pick labels
   * unique to this job and appends those labels to the pod template.  When
   * true, the user is responsible for picking unique labels and specifying the
   * selector.  Failure to pick a unique label may cause this and other jobs to
   * not function correctly.  However, You may see `manualSelector=true` in
   * jobs that were created with the old `extensions/v1beta1` API. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
   */
  manualSelector?: boolean;
  /**
   * @member {number} [parallelism] Specifies the maximum desired number of
   * pods the job should run at any given time. The actual number of pods
   * running in steady state will be less than this number when
   * ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when
   * the work left to do is less than max parallelism. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   */
  parallelism?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] A label
   * query over pods that should match the pod count. Normally, the system sets
   * this field for you. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} template Describes the pod that
   * will be created when executing a job. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1JobCondition.
 * JobCondition describes current state of a job.
 *
 */
export interface Iok8sapibatchv1JobCondition {
  /**
   * @member {Date} [lastProbeTime] Last time the condition was checked.
   */
  lastProbeTime?: Date;
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transit from
   * one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason for the condition's last
   * transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of job condition, Complete or Failed.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1JobStatus.
 * JobStatus represents the current state of a Job.
 *
 */
export interface Iok8sapibatchv1JobStatus {
  /**
   * @member {number} [active] The number of actively running pods.
   */
  active?: number;
  /**
   * @member {Date} [completionTime] Represents time when the job was
   * completed. It is not guaranteed to be set in happens-before order across
   * separate operations. It is represented in RFC3339 form and is in UTC.
   */
  completionTime?: Date;
  /**
   * @member {Iok8sapibatchv1JobCondition[]} [conditions] The latest available
   * observations of an object's current state. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   */
  conditions?: Iok8sapibatchv1JobCondition[];
  /**
   * @member {number} [failed] The number of pods which reached phase Failed.
   */
  failed?: number;
  /**
   * @member {Date} [startTime] Represents time when the job was acknowledged
   * by the job controller. It is not guaranteed to be set in happens-before
   * order across separate operations. It is represented in RFC3339 form and is
   * in UTC.
   */
  startTime?: Date;
  /**
   * @member {number} [succeeded] The number of pods which reached phase
   * Succeeded.
   */
  succeeded?: number;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1Job.
 * Job represents the configuration of a single job.
 *
 */
export interface Iok8sapibatchv1Job {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapibatchv1JobSpec} [spec] Specification of the desired
   * behavior of a job. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapibatchv1JobSpec;
  /**
   * @member {Iok8sapibatchv1JobStatus} [status] Current status of a job. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapibatchv1JobStatus;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1JobList.
 * JobList is a collection of jobs.
 *
 */
export interface Iok8sapibatchv1JobList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapibatchv1Job[]} items items is the list of Jobs.
   */
  items: Iok8sapibatchv1Job[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1beta1JobTemplateSpec.
 * JobTemplateSpec describes the data a Job should have when created from a
 * template
 *
 */
export interface Iok8sapibatchv1beta1JobTemplateSpec {
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata of the jobs created from this template. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapibatchv1JobSpec} [spec] Specification of the desired
   * behavior of the job. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapibatchv1JobSpec;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1beta1CronJobSpec.
 * CronJobSpec describes how the job execution will look like and when it will
 * actually run.
 *
 */
export interface Iok8sapibatchv1beta1CronJobSpec {
  /**
   * @member {string} [concurrencyPolicy] Specifies how to treat concurrent
   * executions of a Job. Valid values are: - "Allow" (default): allows
   * CronJobs to run concurrently; - "Forbid": forbids concurrent runs,
   * skipping next run if previous run hasn't finished yet; - "Replace":
   * cancels currently running job and replaces it with a new one
   */
  concurrencyPolicy?: string;
  /**
   * @member {number} [failedJobsHistoryLimit] The number of failed finished
   * jobs to retain. This is a pointer to distinguish between explicit zero and
   * not specified. Defaults to 1.
   */
  failedJobsHistoryLimit?: number;
  /**
   * @member {Iok8sapibatchv1beta1JobTemplateSpec} jobTemplate Specifies the
   * job that will be created when executing a CronJob.
   */
  jobTemplate: Iok8sapibatchv1beta1JobTemplateSpec;
  /**
   * @member {string} schedule The schedule in Cron format, see
   * https://en.wikipedia.org/wiki/Cron.
   */
  schedule: string;
  /**
   * @member {number} [startingDeadlineSeconds] Optional deadline in seconds
   * for starting the job if it misses scheduled time for any reason.  Missed
   * jobs executions will be counted as failed ones.
   */
  startingDeadlineSeconds?: number;
  /**
   * @member {number} [successfulJobsHistoryLimit] The number of successful
   * finished jobs to retain. This is a pointer to distinguish between explicit
   * zero and not specified. Defaults to 3.
   */
  successfulJobsHistoryLimit?: number;
  /**
   * @member {boolean} [suspend] This flag tells the controller to suspend
   * subsequent executions, it does not apply to already started executions.
   * Defaults to false.
   */
  suspend?: boolean;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1beta1CronJobStatus.
 * CronJobStatus represents the current state of a cron job.
 *
 */
export interface Iok8sapibatchv1beta1CronJobStatus {
  /**
   * @member {V1ObjectReference[]} [active] A list of pointers to
   * currently running jobs.
   */
  active?: V1ObjectReference[];
  /**
   * @member {Date} [lastScheduleTime] Information when was the last time the
   * job was successfully scheduled.
   */
  lastScheduleTime?: Date;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1beta1CronJob.
 * CronJob represents the configuration of a single cron job.
 *
 */
export interface Iok8sapibatchv1beta1CronJob {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapibatchv1beta1CronJobSpec} [spec] Specification of the
   * desired behavior of a cron job, including the schedule. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapibatchv1beta1CronJobSpec;
  /**
   * @member {Iok8sapibatchv1beta1CronJobStatus} [status] Current status of a
   * cron job. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapibatchv1beta1CronJobStatus;
}

/**
 * @interface
 * An interface representing Iok8sapibatchv1beta1CronJobList.
 * CronJobList is a collection of cron jobs.
 *
 */
export interface Iok8sapibatchv1beta1CronJobList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapibatchv1beta1CronJob[]} items items is the list of
   * CronJobs.
   */
  items: Iok8sapibatchv1beta1CronJob[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapicertificatesv1beta1CertificateSigningRequestSpec.
 * This information is immutable after the request is created. Only the Request
 * and Usages fields can be set on creation, other fields are derived by
 * Kubernetes and cannot be modified by users.
 *
 */
export interface Iok8sapicertificatesv1beta1CertificateSigningRequestSpec {
  /**
   * @member {{ [propertyName: string]: string[] }} [extra] Extra information
   * about the requesting user. See user.Info interface for details.
   */
  extra?: { [propertyName: string]: string[] };
  /**
   * @member {string[]} [groups] Group information about the requesting user.
   * See user.Info interface for details.
   */
  groups?: string[];
  /**
   * @member {Uint8Array} request Base64-encoded PKCS#10 CSR data
   */
  request: Uint8Array;
  /**
   * @member {string} [uid] UID information about the requesting user. See
   * user.Info interface for details.
   */
  uid?: string;
  /**
   * @member {string[]} [usages] allowedUsages specifies a set of usage
   * contexts the key will be valid for. See:
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.3
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.12
   */
  usages?: string[];
  /**
   * @member {string} [username] Information about the requesting user. See
   * user.Info interface for details.
   */
  username?: string;
}

/**
 * @interface
 * An interface representing Iok8sapicertificatesv1beta1CertificateSigningRequestCondition.
 */
export interface Iok8sapicertificatesv1beta1CertificateSigningRequestCondition {
  /**
   * @member {Date} [lastUpdateTime] timestamp for the last update to this
   * condition
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] human readable message with details about the
   * request state
   */
  message?: string;
  /**
   * @member {string} [reason] brief reason for the request state
   */
  reason?: string;
  /**
   * @member {string} type request approval state, currently Approved or
   * Denied.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapicertificatesv1beta1CertificateSigningRequestStatus.
 */
export interface Iok8sapicertificatesv1beta1CertificateSigningRequestStatus {
  /**
   * @member {Uint8Array} [certificate] If request was approved, the controller
   * will place the issued certificate here.
   */
  certificate?: Uint8Array;
  /**
   * @member {Iok8sapicertificatesv1beta1CertificateSigningRequestCondition[]}
   * [conditions] Conditions applied to the request, such as approval or
   * denial.
   */
  conditions?: Iok8sapicertificatesv1beta1CertificateSigningRequestCondition[];
}

/**
 * @interface
 * An interface representing Iok8sapicertificatesv1beta1CertificateSigningRequest.
 * Describes a certificate signing request
 *
 */
export interface Iok8sapicertificatesv1beta1CertificateSigningRequest {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapicertificatesv1beta1CertificateSigningRequestSpec} [spec]
   * The certificate request itself and any additional information.
   */
  spec?: Iok8sapicertificatesv1beta1CertificateSigningRequestSpec;
  /**
   * @member {Iok8sapicertificatesv1beta1CertificateSigningRequestStatus}
   * [status] Derived information about the request.
   */
  status?: Iok8sapicertificatesv1beta1CertificateSigningRequestStatus;
}

/**
 * @interface
 * An interface representing Iok8sapicertificatesv1beta1CertificateSigningRequestList.
 */
export interface Iok8sapicertificatesv1beta1CertificateSigningRequestList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapicertificatesv1beta1CertificateSigningRequest[]} items
   */
  items: Iok8sapicertificatesv1beta1CertificateSigningRequest[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1AttachedVolume.
 * AttachedVolume describes a volume attached to a node
 *
 */
export interface V1AttachedVolume {
  /**
   * @member {string} devicePath DevicePath represents the device path where
   * the volume should be available
   */
  devicePath: string;
  /**
   * @member {string} name Name of the attached volume
   */
  name: string;
}

/**
 * @interface
 * An interface representing V1AzureFilePersistentVolumeSource.
 * AzureFile represents an Azure File Service mount on the host and bind mount
 * to the pod.
 *
 */
export interface V1AzureFilePersistentVolumeSource {
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {string} secretName the name of secret that contains Azure Storage
   * Account Name and Key
   */
  secretName: string;
  /**
   * @member {string} [secretNamespace] the namespace of the secret that
   * contains Azure Storage Account Name and Key default is the same as the Pod
   */
  secretNamespace?: string;
  /**
   * @member {string} shareName Share Name
   */
  shareName: string;
}

/**
 * @interface
 * An interface representing V1Binding.
 * Binding ties one object to another; for example, a pod is bound to a node by
 * a scheduler. Deprecated in 1.7, please use the bindings subresource of pods
 * instead.
 *
 */
export interface V1Binding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ObjectReference} target The target object that you
   * want to bind to the standard object.
   */
  target: V1ObjectReference;
}

/**
 * @interface
 * An interface representing V1SecretReference.
 * SecretReference represents a Secret Reference. It has enough information to
 * retrieve secret in any namespace
 *
 */
export interface V1SecretReference {
  /**
   * @member {string} [name] Name is unique within a namespace to reference a
   * secret resource.
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace defines the space within which the
   * secret name must be unique.
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing V1CSIPersistentVolumeSource.
 * Represents storage that is managed by an external CSI volume driver (Beta
 * feature)
 *
 */
export interface V1CSIPersistentVolumeSource {
  /**
   * @member {V1SecretReference} [controllerPublishSecretRef]
   * ControllerPublishSecretRef is a reference to the secret object containing
   * sensitive information to pass to the CSI driver to complete the CSI
   * ControllerPublishVolume and ControllerUnpublishVolume calls. This field is
   * optional, and  may be empty if no secret is required. If the secret object
   * contains more than one secret, all secrets are passed.
   */
  controllerPublishSecretRef?: V1SecretReference;
  /**
   * @member {string} driver Driver is the name of the driver to use for this
   * volume. Required.
   */
  driver: string;
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   */
  fsType?: string;
  /**
   * @member {V1SecretReference} [nodePublishSecretRef]
   * NodePublishSecretRef is a reference to the secret object containing
   * sensitive information to pass to the CSI driver to complete the CSI
   * NodePublishVolume and NodeUnpublishVolume calls. This field is optional,
   * and  may be empty if no secret is required. If the secret object contains
   * more than one secret, all secrets are passed.
   */
  nodePublishSecretRef?: V1SecretReference;
  /**
   * @member {V1SecretReference} [nodeStageSecretRef]
   * NodeStageSecretRef is a reference to the secret object containing
   * sensitive information to pass to the CSI driver to complete the CSI
   * NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This
   * field is optional, and  may be empty if no secret is required. If the
   * secret object contains more than one secret, all secrets are passed.
   */
  nodeStageSecretRef?: V1SecretReference;
  /**
   * @member {boolean} [readOnly] Optional: The value to pass to
   * ControllerPublishVolumeRequest. Defaults to false (read/write).
   */
  readOnly?: boolean;
  /**
   * @member {{ [propertyName: string]: string }} [volumeAttributes] Attributes
   * of the volume to publish.
   */
  volumeAttributes?: { [propertyName: string]: string };
  /**
   * @member {string} volumeHandle VolumeHandle is the unique volume name
   * returned by the CSI volume plugin’s CreateVolume to refer to the volume on
   * all subsequent calls. Required.
   */
  volumeHandle: string;
}

/**
 * @interface
 * An interface representing V1CephFSPersistentVolumeSource.
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs
 * volumes do not support ownership management or SELinux relabeling.
 *
 */
export interface V1CephFSPersistentVolumeSource {
  /**
   * @member {string[]} monitors Required: Monitors is a collection of Ceph
   * monitors More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  monitors: string[];
  /**
   * @member {string} [path] Optional: Used as the mounted root, rather than
   * the full Ceph tree, default is /
   */
  path?: string;
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  readOnly?: boolean;
  /**
   * @member {string} [secretFile] Optional: SecretFile is the path to key ring
   * for User, default is /etc/ceph/user.secret More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  secretFile?: string;
  /**
   * @member {V1SecretReference} [secretRef] Optional: SecretRef is
   * reference to the authentication secret for User, default is empty. More
   * info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  secretRef?: V1SecretReference;
  /**
   * @member {string} [user] Optional: User is the rados user name, default is
   * admin More info:
   * https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   */
  user?: string;
}

/**
 * @interface
 * An interface representing V1CinderPersistentVolumeSource.
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist
 * before mounting to a container. The volume must also be in the same region
 * as the kubelet. Cinder volumes support ownership management and SELinux
 * relabeling.
 *
 */
export interface V1CinderPersistentVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Examples: "ext4", "xfs",
   * "ntfs". Implicitly inferred to be "ext4" if unspecified. More info:
   * https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  fsType?: string;
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. More info:
   * https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  readOnly?: boolean;
  /**
   * @member {V1SecretReference} [secretRef] Optional: points to a
   * secret object containing parameters used to connect to OpenStack.
   */
  secretRef?: V1SecretReference;
  /**
   * @member {string} volumeID volume id used to identify the volume in cinder
   * More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  volumeID: string;
}

/**
 * @interface
 * An interface representing V1ClientIPConfig.
 * ClientIPConfig represents the configurations of Client IP based session
 * affinity.
 *
 */
export interface V1ClientIPConfig {
  /**
   * @member {number} [timeoutSeconds] timeoutSeconds specifies the seconds of
   * ClientIP type session sticky time. The value must be >0 && <=86400(for 1
   * day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3
   * hours).
   */
  timeoutSeconds?: number;
}

/**
 * @interface
 * An interface representing V1ComponentCondition.
 * Information about the condition of a component.
 *
 */
export interface V1ComponentCondition {
  /**
   * @member {string} [error] Condition error code for a component. For
   * example, a health check error code.
   */
  error?: string;
  /**
   * @member {string} [message] Message about the condition for a component.
   * For example, information about a health check.
   */
  message?: string;
  /**
   * @member {string} status Status of the condition for a component. Valid
   * values for "Healthy": "True", "False", or "Unknown".
   */
  status: string;
  /**
   * @member {string} type Type of condition for a component. Valid value:
   * "Healthy"
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1ComponentStatus.
 * ComponentStatus (and ComponentStatusList) holds the cluster validation info.
 *
 */
export interface V1ComponentStatus {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ComponentCondition[]} [conditions] List of
   * component conditions observed
   */
  conditions?: V1ComponentCondition[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing V1ComponentStatusList.
 * Status of all the conditions for the component as a list of ComponentStatus
 * objects.
 *
 */
export interface V1ComponentStatusList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ComponentStatus[]} items List of ComponentStatus
   * objects.
   */
  items: V1ComponentStatus[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ConfigMap.
 * ConfigMap holds configuration data for pods to consume.
 *
 */
export interface V1ConfigMap {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {{ [propertyName: string]: Uint8Array }} [binaryData] BinaryData
   * contains the binary data. Each key must consist of alphanumeric
   * characters, '-', '_' or '.'. BinaryData can contain byte sequences that
   * are not in the UTF-8 range. The keys stored in BinaryData must not overlap
   * with the ones in the Data field, this is enforced during validation
   * process. Using this field will require 1.10+ apiserver and kubelet.
   */
  binaryData?: { [propertyName: string]: Uint8Array };
  /**
   * @member {{ [propertyName: string]: string }} [data] Data contains the
   * configuration data. Each key must consist of alphanumeric characters, '-',
   * '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData
   * field. The keys stored in Data must not overlap with the keys in the
   * BinaryData field, this is enforced during validation process.
   */
  data?: { [propertyName: string]: string };
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing V1ConfigMapList.
 * ConfigMapList is a resource containing a list of ConfigMap objects.
 *
 */
export interface V1ConfigMapList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ConfigMap[]} items Items is the list of ConfigMaps.
   */
  items: V1ConfigMap[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ConfigMapNodeConfigSource.
 * ConfigMapNodeConfigSource contains the information to reference a ConfigMap
 * as a config source for the Node.
 *
 */
export interface V1ConfigMapNodeConfigSource {
  /**
   * @member {string} kubeletConfigKey KubeletConfigKey declares which key of
   * the referenced ConfigMap corresponds to the KubeletConfiguration structure
   * This field is required in all cases.
   */
  kubeletConfigKey: string;
  /**
   * @member {string} name Name is the metadata.name of the referenced
   * ConfigMap. This field is required in all cases.
   */
  name: string;
  /**
   * @member {string} namespace Namespace is the metadata.namespace of the
   * referenced ConfigMap. This field is required in all cases.
   */
  namespace: string;
  /**
   * @member {string} [resourceVersion] ResourceVersion is the
   * metadata.ResourceVersion of the referenced ConfigMap. This field is
   * forbidden in Node.Spec, and required in Node.Status.
   */
  resourceVersion?: string;
  /**
   * @member {string} [uid] UID is the metadata.UID of the referenced
   * ConfigMap. This field is forbidden in Node.Spec, and required in
   * Node.Status.
   */
  uid?: string;
}

/**
 * @interface
 * An interface representing V1ContainerImage.
 * Describe a container image
 *
 */
export interface V1ContainerImage {
  /**
   * @member {string[]} names Names by which this image is known. e.g.
   * ["k8s.gcr.io/hyperkube:v1.0.7",
   * "dockerhub.io/google_containers/hyperkube:v1.0.7"]
   */
  names: string[];
  /**
   * @member {number} [sizeBytes] The size of the image in bytes.
   */
  sizeBytes?: number;
}

/**
 * @interface
 * An interface representing V1ContainerStateRunning.
 * ContainerStateRunning is a running state of a container.
 *
 */
export interface V1ContainerStateRunning {
  /**
   * @member {Date} [startedAt] Time at which the container was last
   * (re-)started
   */
  startedAt?: Date;
}

/**
 * @interface
 * An interface representing V1ContainerStateTerminated.
 * ContainerStateTerminated is a terminated state of a container.
 *
 */
export interface V1ContainerStateTerminated {
  /**
   * @member {string} [containerID] Container's ID in the format
   * 'docker://<container_id>'
   */
  containerID?: string;
  /**
   * @member {number} exitCode Exit status from the last termination of the
   * container
   */
  exitCode: number;
  /**
   * @member {Date} [finishedAt] Time at which the container last terminated
   */
  finishedAt?: Date;
  /**
   * @member {string} [message] Message regarding the last termination of the
   * container
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason from the last termination of the
   * container
   */
  reason?: string;
  /**
   * @member {number} [signal] Signal from the last termination of the
   * container
   */
  signal?: number;
  /**
   * @member {Date} [startedAt] Time at which previous execution of the
   * container started
   */
  startedAt?: Date;
}

/**
 * @interface
 * An interface representing V1ContainerStateWaiting.
 * ContainerStateWaiting is a waiting state of a container.
 *
 */
export interface V1ContainerStateWaiting {
  /**
   * @member {string} [message] Message regarding why the container is not yet
   * running.
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason the container is not yet running.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing V1ContainerState.
 * ContainerState holds a possible state of container. Only one of its members
 * may be specified. If none of them is specified, the default one is
 * ContainerStateWaiting.
 *
 */
export interface V1ContainerState {
  /**
   * @member {V1ContainerStateRunning} [running] Details about a
   * running container
   */
  running?: V1ContainerStateRunning;
  /**
   * @member {V1ContainerStateTerminated} [terminated] Details
   * about a terminated container
   */
  terminated?: V1ContainerStateTerminated;
  /**
   * @member {V1ContainerStateWaiting} [waiting] Details about a
   * waiting container
   */
  waiting?: V1ContainerStateWaiting;
}

/**
 * @interface
 * An interface representing V1ContainerStatus.
 * ContainerStatus contains details for the current status of this container.
 *
 */
export interface V1ContainerStatus {
  /**
   * @member {string} [containerID] Container's ID in the format
   * 'docker://<container_id>'.
   */
  containerID?: string;
  /**
   * @member {string} image The image the container is running. More info:
   * https://kubernetes.io/docs/concepts/containers/images
   */
  image: string;
  /**
   * @member {string} imageID ImageID of the container's image.
   */
  imageID: string;
  /**
   * @member {V1ContainerState} [lastState] Details about the
   * container's last termination condition.
   */
  lastState?: V1ContainerState;
  /**
   * @member {string} name This must be a DNS_LABEL. Each container in a pod
   * must have a unique name. Cannot be updated.
   */
  name: string;
  /**
   * @member {boolean} ready Specifies whether the container has passed its
   * readiness probe.
   */
  ready: boolean;
  /**
   * @member {number} restartCount The number of times the container has been
   * restarted, currently based on the number of dead containers that have not
   * yet been removed. Note that this is calculated from dead containers. But
   * those containers are subject to garbage collection. This value will get
   * capped at 5 by GC.
   */
  restartCount: number;
  /**
   * @member {V1ContainerState} [state] Details about the
   * container's current condition.
   */
  state?: V1ContainerState;
}

/**
 * @interface
 * An interface representing V1DaemonEndpoint.
 * DaemonEndpoint contains information about a single Daemon endpoint.
 *
 */
export interface V1DaemonEndpoint {
  /**
   * @member {number} port Port number of the given endpoint.
   */
  port: number;
}

/**
 * @interface
 * An interface representing V1EndpointAddress.
 * EndpointAddress is a tuple that describes single IP address.
 *
 */
export interface V1EndpointAddress {
  /**
   * @member {string} [hostname] The Hostname of this endpoint
   */
  hostname?: string;
  /**
   * @member {string} ip The IP of this endpoint. May not be loopback
   * (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast
   * ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all
   * platforms. Also, certain kubernetes components, like kube-proxy, are not
   * IPv6 ready.
   */
  ip: string;
  /**
   * @member {string} [nodeName] Optional: Node hosting this endpoint. This can
   * be used to determine endpoints local to a node.
   */
  nodeName?: string;
  /**
   * @member {V1ObjectReference} [targetRef] Reference to object
   * providing the endpoint.
   */
  targetRef?: V1ObjectReference;
}

/**
 * @interface
 * An interface representing V1EndpointPort.
 * EndpointPort is a tuple that describes a single port.
 *
 */
export interface V1EndpointPort {
  /**
   * @member {string} [name] The name of this port (corresponds to
   * ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is
   * defined.
   */
  name?: string;
  /**
   * @member {number} port The port number of the endpoint.
   */
  port: number;
  /**
   * @member {string} [protocol] The IP protocol for this port. Must be UDP or
   * TCP. Default is TCP.
   */
  protocol?: string;
}

/**
 * @interface
 * An interface representing V1EndpointSubset.
 * EndpointSubset is a group of addresses with a common set of ports. The
 * expanded set of endpoints is the Cartesian product of Addresses x Ports. For
 * example, given:
 * {
 * Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
 * Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
 * }
 * The resulting set of endpoints can be viewed as:
 * a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
 * b: [ 10.10.1.1:309, 10.10.2.2:309 ]
 *
 */
export interface V1EndpointSubset {
  /**
   * @member {V1EndpointAddress[]} [addresses] IP addresses which
   * offer the related ports that are marked as ready. These endpoints should
   * be considered safe for load balancers and clients to utilize.
   */
  addresses?: V1EndpointAddress[];
  /**
   * @member {V1EndpointAddress[]} [notReadyAddresses] IP addresses
   * which offer the related ports but are not currently marked as ready
   * because they have not yet finished starting, have recently failed a
   * readiness check, or have recently failed a liveness check.
   */
  notReadyAddresses?: V1EndpointAddress[];
  /**
   * @member {V1EndpointPort[]} [ports] Port numbers available on
   * the related IP addresses.
   */
  ports?: V1EndpointPort[];
}

/**
 * @interface
 * An interface representing V1Endpoints.
 * Endpoints is a collection of endpoints that implement the actual service.
 * Example:
 * Name: "mysvc",
 * Subsets: [
 * {
 * Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
 * Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
 * },
 * {
 * Addresses: [{"ip": "10.10.3.3"}],
 * Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
 * },
 * ]
 *
 */
export interface V1Endpoints {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1EndpointSubset[]} [subsets] The set of all
   * endpoints is the union of all subsets. Addresses are placed into subsets
   * according to the IPs they share. A single address with multiple ports,
   * some of which are ready and some of which are not (because they come from
   * different containers) will result in the address being displayed in
   * different subsets for the different ports. No address will appear in both
   * Addresses and NotReadyAddresses in the same subset. Sets of addresses and
   * ports that comprise a service.
   */
  subsets?: V1EndpointSubset[];
}

/**
 * @interface
 * An interface representing V1EndpointsList.
 * EndpointsList is a list of endpoints.
 *
 */
export interface V1EndpointsList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Endpoints[]} items List of endpoints.
   */
  items: V1Endpoints[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1EventSeries.
 * EventSeries contain information on series of events, i.e. thing that was/is
 * happening continuously for some time.
 *
 */
export interface V1EventSeries {
  /**
   * @member {number} [count] Number of occurrences in this series up to the
   * last heartbeat time
   */
  count?: number;
  /**
   * @member {Date} [lastObservedTime] Time of the last occurrence observed
   */
  lastObservedTime?: Date;
  /**
   * @member {string} [state] State of this Series: Ongoing or Finished
   */
  state?: string;
}

/**
 * @interface
 * An interface representing V1EventSource.
 * EventSource contains information for an event.
 *
 */
export interface V1EventSource {
  /**
   * @member {string} [component] Component from which the event is generated.
   */
  component?: string;
  /**
   * @member {string} [host] Node name on which the event is generated.
   */
  host?: string;
}

/**
 * @interface
 * An interface representing V1Event.
 * Event is a report of an event somewhere in the cluster.
 *
 */
export interface V1Event {
  /**
   * @member {string} [action] What action was taken/failed regarding to the
   * Regarding object.
   */
  action?: string;
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {number} [count] The number of times this event has occurred.
   */
  count?: number;
  /**
   * @member {Date} [eventTime] Time when this Event was first observed.
   */
  eventTime?: Date;
  /**
   * @member {Date} [firstTimestamp] The time at which the event was first
   * recorded. (Time of server receipt is in TypeMeta.)
   */
  firstTimestamp?: Date;
  /**
   * @member {V1ObjectReference} involvedObject The object that
   * this event is about.
   */
  involvedObject: V1ObjectReference;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Date} [lastTimestamp] The time at which the most recent
   * occurrence of this event was recorded.
   */
  lastTimestamp?: Date;
  /**
   * @member {string} [message] A human-readable description of the status of
   * this operation.
   */
  message?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} metadata Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} [reason] This should be a short, machine understandable
   * string that gives the reason for the transition into the object's current
   * status.
   */
  reason?: string;
  /**
   * @member {V1ObjectReference} [related] Optional secondary
   * object for more complex actions.
   */
  related?: V1ObjectReference;
  /**
   * @member {string} [reportingComponent] Name of the controller that emitted
   * this Event, e.g. `kubernetes.io/kubelet`.
   */
  reportingComponent?: string;
  /**
   * @member {string} [reportingInstance] ID of the controller instance, e.g.
   * `kubelet-xyzf`.
   */
  reportingInstance?: string;
  /**
   * @member {V1EventSeries} [series] Data about the Event series
   * this event represents or nil if it's a singleton Event.
   */
  series?: V1EventSeries;
  /**
   * @member {V1EventSource} [source] The component reporting this
   * event. Should be a short machine understandable string.
   */
  source?: V1EventSource;
  /**
   * @member {string} [type] Type of this event (Normal, Warning), new types
   * could be added in the future
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1EventList.
 * EventList is a list of events.
 *
 */
export interface V1EventList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Event[]} items List of events
   */
  items: V1Event[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1FlexPersistentVolumeSource.
 * FlexPersistentVolumeSource represents a generic persistent volume resource
 * that is provisioned/attached using an exec based plugin.
 *
 */
export interface V1FlexPersistentVolumeSource {
  /**
   * @member {string} driver Driver is the name of the driver to use for this
   * volume.
   */
  driver: string;
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * The default filesystem depends on FlexVolume script.
   */
  fsType?: string;
  /**
   * @member {{ [propertyName: string]: string }} [options] Optional: Extra
   * command options if any.
   */
  options?: { [propertyName: string]: string };
  /**
   * @member {boolean} [readOnly] Optional: Defaults to false (read/write).
   * ReadOnly here will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1SecretReference} [secretRef] Optional: SecretRef is
   * reference to the secret object containing sensitive information to pass to
   * the plugin scripts. This may be empty if no secret object is specified. If
   * the secret object contains more than one secret, all secrets are passed to
   * the plugin scripts.
   */
  secretRef?: V1SecretReference;
}

/**
 * @interface
 * An interface representing V1ISCSIPersistentVolumeSource.
 * ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only
 * be mounted as read/write once. ISCSI volumes support ownership management
 * and SELinux relabeling.
 *
 */
export interface V1ISCSIPersistentVolumeSource {
  /**
   * @member {boolean} [chapAuthDiscovery] whether support iSCSI Discovery CHAP
   * authentication
   */
  chapAuthDiscovery?: boolean;
  /**
   * @member {boolean} [chapAuthSession] whether support iSCSI Session CHAP
   * authentication
   */
  chapAuthSession?: boolean;
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   */
  fsType?: string;
  /**
   * @member {string} [initiatorName] Custom iSCSI Initiator Name. If
   * initiatorName is specified with iscsiInterface simultaneously, new iSCSI
   * interface <target portal>:<volume name> will be created for the
   * connection.
   */
  initiatorName?: string;
  /**
   * @member {string} iqn Target iSCSI Qualified Name.
   */
  iqn: string;
  /**
   * @member {string} [iscsiInterface] iSCSI Interface Name that uses an iSCSI
   * transport. Defaults to 'default' (tcp).
   */
  iscsiInterface?: string;
  /**
   * @member {number} lun iSCSI Target Lun number.
   */
  lun: number;
  /**
   * @member {string[]} [portals] iSCSI Target Portal List. The Portal is
   * either an IP or ip_addr:port if the port is other than default (typically
   * TCP ports 860 and 3260).
   */
  portals?: string[];
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the ReadOnly setting
   * in VolumeMounts. Defaults to false.
   */
  readOnly?: boolean;
  /**
   * @member {V1SecretReference} [secretRef] CHAP Secret for iSCSI
   * target and initiator authentication
   */
  secretRef?: V1SecretReference;
  /**
   * @member {string} targetPortal iSCSI Target Portal. The Portal is either an
   * IP or ip_addr:port if the port is other than default (typically TCP ports
   * 860 and 3260).
   */
  targetPortal: string;
}

/**
 * @interface
 * An interface representing V1LimitRangeItem.
 * LimitRangeItem defines a min/max usage limit for any resource that matches
 * on kind.
 *
 */
export interface V1LimitRangeItem {
  /**
   * @member {{ [propertyName: string]: string }} [default] Default resource
   * requirement limit value by resource name if resource limit is omitted.
   */
  default?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [defaultRequest]
   * DefaultRequest is the default resource requirement request value by
   * resource name if resource request is omitted.
   */
  defaultRequest?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [max] Max usage constraints
   * on this kind by resource name.
   */
  max?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [maxLimitRequestRatio]
   * MaxLimitRequestRatio if specified, the named resource must have a request
   * and limit that are both non-zero where limit divided by request is less
   * than or equal to the enumerated value; this represents the max burst for
   * the named resource.
   */
  maxLimitRequestRatio?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [min] Min usage constraints
   * on this kind by resource name.
   */
  min?: { [propertyName: string]: string };
  /**
   * @member {string} [type] Type of resource that this limit applies to.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1LimitRangeSpec.
 * LimitRangeSpec defines a min/max usage limit for resources that match on
 * kind.
 *
 */
export interface V1LimitRangeSpec {
  /**
   * @member {V1LimitRangeItem[]} limits Limits is the list of
   * LimitRangeItem objects that are enforced.
   */
  limits: V1LimitRangeItem[];
}

/**
 * @interface
 * An interface representing V1LimitRange.
 * LimitRange sets resource usage limits for each kind of resource in a
 * Namespace.
 *
 */
export interface V1LimitRange {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1LimitRangeSpec} [spec] Spec defines the limits
   * enforced. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1LimitRangeSpec;
}

/**
 * @interface
 * An interface representing V1LimitRangeList.
 * LimitRangeList is a list of LimitRange items.
 *
 */
export interface V1LimitRangeList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1LimitRange[]} items Items is a list of LimitRange
   * objects. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  items: V1LimitRange[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1LoadBalancerIngress.
 * LoadBalancerIngress represents the status of a load-balancer ingress point:
 * traffic intended for the service should be sent to an ingress point.
 *
 */
export interface V1LoadBalancerIngress {
  /**
   * @member {string} [hostname] Hostname is set for load-balancer ingress
   * points that are DNS based (typically AWS load-balancers)
   */
  hostname?: string;
  /**
   * @member {string} [ip] IP is set for load-balancer ingress points that are
   * IP based (typically GCE or OpenStack load-balancers)
   */
  ip?: string;
}

/**
 * @interface
 * An interface representing V1LoadBalancerStatus.
 * LoadBalancerStatus represents the status of a load-balancer.
 *
 */
export interface V1LoadBalancerStatus {
  /**
   * @member {V1LoadBalancerIngress[]} [ingress] Ingress is a list
   * containing ingress points for the load-balancer. Traffic intended for the
   * service should be sent to these ingress points.
   */
  ingress?: V1LoadBalancerIngress[];
}

/**
 * @interface
 * An interface representing V1LocalVolumeSource.
 * Local represents directly-attached storage with node affinity (Beta feature)
 *
 */
export interface V1LocalVolumeSource {
  /**
   * @member {string} path The full path to the volume on the node. It can be
   * either a directory or block device (disk, partition, ...). Directories can
   * be represented only by PersistentVolume with VolumeMode=Filesystem. Block
   * devices can be represented only by VolumeMode=Block, which also requires
   * the BlockVolume alpha feature gate to be enabled.
   */
  path: string;
}

/**
 * @interface
 * An interface representing V1NamespaceSpec.
 * NamespaceSpec describes the attributes on a Namespace.
 *
 */
export interface V1NamespaceSpec {
  /**
   * @member {string[]} [finalizers] Finalizers is an opaque list of values
   * that must be empty to permanently remove object from storage. More info:
   * https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
   */
  finalizers?: string[];
}

/**
 * @interface
 * An interface representing V1NamespaceStatus.
 * NamespaceStatus is information about the current status of a Namespace.
 *
 */
export interface V1NamespaceStatus {
  /**
   * @member {string} [phase] Phase is the current lifecycle phase of the
   * namespace. More info:
   * https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
   */
  phase?: string;
}

/**
 * @interface
 * An interface representing V1Namespace.
 * Namespace provides a scope for Names. Use of multiple namespaces is
 * optional.
 *
 */
export interface V1Namespace {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1NamespaceSpec} [spec] Spec defines the behavior of
   * the Namespace. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1NamespaceSpec;
  /**
   * @member {V1NamespaceStatus} [status] Status describes the
   * current status of a Namespace. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1NamespaceStatus;
}

/**
 * @interface
 * An interface representing V1NamespaceList.
 * NamespaceList is a list of Namespaces.
 *
 */
export interface V1NamespaceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Namespace[]} items Items is the list of Namespace
   * objects in the list. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   */
  items: V1Namespace[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1NodeConfigSource.
 * NodeConfigSource specifies a source of node configuration. Exactly one
 * subfield (excluding metadata) must be non-nil.
 *
 */
export interface V1NodeConfigSource {
  /**
   * @member {V1ConfigMapNodeConfigSource} [configMap] ConfigMap is
   * a reference to a Node's ConfigMap
   */
  configMap?: V1ConfigMapNodeConfigSource;
}

/**
 * @interface
 * An interface representing V1Taint.
 * The node this Taint is attached to has the "effect" on any pod that does not
 * tolerate the Taint.
 *
 */
export interface V1Taint {
  /**
   * @member {string} effect Required. The effect of the taint on pods that do
   * not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and
   * NoExecute.
   */
  effect: string;
  /**
   * @member {string} key Required. The taint key to be applied to a node.
   */
  key: string;
  /**
   * @member {Date} [timeAdded] TimeAdded represents the time at which the
   * taint was added. It is only written for NoExecute taints.
   */
  timeAdded?: Date;
  /**
   * @member {string} [value] Required. The taint value corresponding to the
   * taint key.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing V1NodeSpec.
 * NodeSpec describes the attributes that a node is created with.
 *
 */
export interface V1NodeSpec {
  /**
   * @member {V1NodeConfigSource} [configSource] If specified, the
   * source to get node configuration from The DynamicKubeletConfig feature
   * gate must be enabled for the Kubelet to use this field
   */
  configSource?: V1NodeConfigSource;
  /**
   * @member {string} [externalID] Deprecated. Not all kubelets will set this
   * field. Remove field after 1.13. see: https://issues.k8s.io/61966
   */
  externalID?: string;
  /**
   * @member {string} [podCIDR] PodCIDR represents the pod IP range assigned to
   * the node.
   */
  podCIDR?: string;
  /**
   * @member {string} [providerID] ID of the node assigned by the cloud
   * provider in the format: <ProviderName>://<ProviderSpecificNodeID>
   */
  providerID?: string;
  /**
   * @member {V1Taint[]} [taints] If specified, the node's taints.
   */
  taints?: V1Taint[];
  /**
   * @member {boolean} [unschedulable] Unschedulable controls node
   * schedulability of new pods. By default, node is schedulable. More info:
   * https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
   */
  unschedulable?: boolean;
}

/**
 * @interface
 * An interface representing V1NodeAddress.
 * NodeAddress contains information for the node's address.
 *
 */
export interface V1NodeAddress {
  /**
   * @member {string} address The node address.
   */
  address: string;
  /**
   * @member {string} type Node address type, one of Hostname, ExternalIP or
   * InternalIP.
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1NodeCondition.
 * NodeCondition contains condition information for a node.
 *
 */
export interface V1NodeCondition {
  /**
   * @member {Date} [lastHeartbeatTime] Last time we got an update on a given
   * condition.
   */
  lastHeartbeatTime?: Date;
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transit from
   * one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] (brief) reason for the condition's last
   * transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of node condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1NodeConfigStatus.
 * NodeConfigStatus describes the status of the config assigned by
 * Node.Spec.ConfigSource.
 *
 */
export interface V1NodeConfigStatus {
  /**
   * @member {V1NodeConfigSource} [active] Active reports the
   * checkpointed config the node is actively using. Active will represent
   * either the current version of the Assigned config, or the current
   * LastKnownGood config, depending on whether attempting to use the Assigned
   * config results in an error.
   */
  active?: V1NodeConfigSource;
  /**
   * @member {V1NodeConfigSource} [assigned] Assigned reports the
   * checkpointed config the node will try to use. When Node.Spec.ConfigSource
   * is updated, the node checkpoints the associated config payload to local
   * disk, along with a record indicating intended config. The node refers to
   * this record to choose its config checkpoint, and reports this record in
   * Assigned. Assigned only updates in the status after the record has been
   * checkpointed to disk. When the Kubelet is restarted, it tries to make the
   * Assigned config the Active config by loading and validating the
   * checkpointed payload identified by Assigned.
   */
  assigned?: V1NodeConfigSource;
  /**
   * @member {string} [error] Error describes any problems reconciling the
   * Spec.ConfigSource to the Active config. Errors may occur, for example,
   * attempting to checkpoint Spec.ConfigSource to the local Assigned record,
   * attempting to checkpoint the payload associated with Spec.ConfigSource,
   * attempting to load or validate the Assigned config, etc. Errors may occur
   * at different points while syncing config. Earlier errors (e.g. download or
   * checkpointing errors) will not result in a rollback to LastKnownGood, and
   * may resolve across Kubelet retries. Later errors (e.g. loading or
   * validating a checkpointed config) will result in a rollback to
   * LastKnownGood. In the latter case, it is usually possible to resolve the
   * error by fixing the config assigned in Spec.ConfigSource. You can find
   * additional information for debugging by searching the error message in the
   * Kubelet log. Error is a human-readable description of the error state;
   * machines can check whether or not Error is empty, but should not rely on
   * the stability of the Error text across Kubelet versions.
   */
  error?: string;
  /**
   * @member {V1NodeConfigSource} [lastKnownGood] LastKnownGood
   * reports the checkpointed config the node will fall back to when it
   * encounters an error attempting to use the Assigned config. The Assigned
   * config becomes the LastKnownGood config when the node determines that the
   * Assigned config is stable and correct. This is currently implemented as a
   * 10-minute soak period starting when the local record of Assigned config is
   * updated. If the Assigned config is Active at the end of this period, it
   * becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil
   * (use local defaults), the LastKnownGood is also immediately reset to nil,
   * because the local default config is always assumed good. You should not
   * make assumptions about the node's method of determining config stability
   * and correctness, as this may change or become configurable in the future.
   */
  lastKnownGood?: V1NodeConfigSource;
}

/**
 * @interface
 * An interface representing V1NodeDaemonEndpoints.
 * NodeDaemonEndpoints lists ports opened by daemons running on the Node.
 *
 */
export interface V1NodeDaemonEndpoints {
  /**
   * @member {V1DaemonEndpoint} [kubeletEndpoint] Endpoint on which
   * Kubelet is listening.
   */
  kubeletEndpoint?: V1DaemonEndpoint;
}

/**
 * @interface
 * An interface representing V1NodeSystemInfo.
 * NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
 *
 */
export interface V1NodeSystemInfo {
  /**
   * @member {string} architecture The Architecture reported by the node
   */
  architecture: string;
  /**
   * @member {string} bootID Boot ID reported by the node.
   */
  bootID: string;
  /**
   * @member {string} containerRuntimeVersion ContainerRuntime Version reported
   * by the node through runtime remote API (e.g. docker://1.5.0).
   */
  containerRuntimeVersion: string;
  /**
   * @member {string} kernelVersion Kernel Version reported by the node from
   * 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
   */
  kernelVersion: string;
  /**
   * @member {string} kubeProxyVersion KubeProxy Version reported by the node.
   */
  kubeProxyVersion: string;
  /**
   * @member {string} kubeletVersion Kubelet Version reported by the node.
   */
  kubeletVersion: string;
  /**
   * @member {string} machineID MachineID reported by the node. For unique
   * machine identification in the cluster this field is preferred. Learn more
   * from man(5) machine-id:
   * http://man7.org/linux/man-pages/man5/machine-id.5.html
   */
  machineID: string;
  /**
   * @member {string} operatingSystem The Operating System reported by the node
   */
  operatingSystem: string;
  /**
   * @member {string} osImage OS Image reported by the node from
   * /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
   */
  osImage: string;
  /**
   * @member {string} systemUUID SystemUUID reported by the node. For unique
   * machine identification MachineID is preferred. This field is specific to
   * Red Hat hosts
   * https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
   */
  systemUUID: string;
}

/**
 * @interface
 * An interface representing V1NodeStatus.
 * NodeStatus is information about the current status of a node.
 *
 */
export interface V1NodeStatus {
  /**
   * @member {V1NodeAddress[]} [addresses] List of addresses
   * reachable to the node. Queried from cloud provider, if available. More
   * info: https://kubernetes.io/docs/concepts/nodes/node/#addresses
   */
  addresses?: V1NodeAddress[];
  /**
   * @member {{ [propertyName: string]: string }} [allocatable] Allocatable
   * represents the resources of a node that are available for scheduling.
   * Defaults to Capacity.
   */
  allocatable?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [capacity] Capacity
   * represents the total resources of a node. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
   */
  capacity?: { [propertyName: string]: string };
  /**
   * @member {V1NodeCondition[]} [conditions] Conditions is an
   * array of current observed node conditions. More info:
   * https://kubernetes.io/docs/concepts/nodes/node/#condition
   */
  conditions?: V1NodeCondition[];
  /**
   * @member {V1NodeConfigStatus} [config] Status of the config
   * assigned to the node via the dynamic Kubelet config feature.
   */
  config?: V1NodeConfigStatus;
  /**
   * @member {V1NodeDaemonEndpoints} [daemonEndpoints] Endpoints of
   * daemons running on the Node.
   */
  daemonEndpoints?: V1NodeDaemonEndpoints;
  /**
   * @member {V1ContainerImage[]} [images] List of container images
   * on this node
   */
  images?: V1ContainerImage[];
  /**
   * @member {V1NodeSystemInfo} [nodeInfo] Set of ids/uuids to
   * uniquely identify the node. More info:
   * https://kubernetes.io/docs/concepts/nodes/node/#info
   */
  nodeInfo?: V1NodeSystemInfo;
  /**
   * @member {string} [phase] NodePhase is the recently observed lifecycle
   * phase of the node. More info:
   * https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never
   * populated, and now is deprecated.
   */
  phase?: string;
  /**
   * @member {V1AttachedVolume[]} [volumesAttached] List of volumes
   * that are attached to the node.
   */
  volumesAttached?: V1AttachedVolume[];
  /**
   * @member {string[]} [volumesInUse] List of attachable volumes in use
   * (mounted) by the node.
   */
  volumesInUse?: string[];
}

/**
 * @interface
 * An interface representing V1Node.
 * Node is a worker node in Kubernetes. Each node will have a unique identifier
 * in the cache (i.e. in etcd).
 *
 */
export interface V1Node {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1NodeSpec} [spec] Spec defines the behavior of a
   * node.
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1NodeSpec;
  /**
   * @member {V1NodeStatus} [status] Most recently observed status
   * of the node. Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1NodeStatus;
}

/**
 * @interface
 * An interface representing V1NodeList.
 * NodeList is the whole list of all Nodes which have been registered with
 * master.
 *
 */
export interface V1NodeList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Node[]} items List of nodes
   */
  items: V1Node[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1VolumeNodeAffinity.
 * VolumeNodeAffinity defines constraints that limit what nodes this volume can
 * be accessed from.
 *
 */
export interface V1VolumeNodeAffinity {
  /**
   * @member {V1NodeSelector} [required] Required specifies hard
   * node constraints that must be met.
   */
  required?: V1NodeSelector;
}

/**
 * @interface
 * An interface representing V1RBDPersistentVolumeSource.
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD
 * volumes support ownership management and SELinux relabeling.
 *
 */
export interface V1RBDPersistentVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type of the volume that you want to
   * mount. Tip: Ensure that the filesystem type is supported by the host
   * operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
   * be "ext4" if unspecified. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#rbd
   */
  fsType?: string;
  /**
   * @member {string} image The rados image name. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  image: string;
  /**
   * @member {string} [keyring] Keyring is the path to key ring for RBDUser.
   * Default is /etc/ceph/keyring. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  keyring?: string;
  /**
   * @member {string[]} monitors A collection of Ceph monitors. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  monitors: string[];
  /**
   * @member {string} [pool] The rados pool name. Default is rbd. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  pool?: string;
  /**
   * @member {boolean} [readOnly] ReadOnly here will force the ReadOnly setting
   * in VolumeMounts. Defaults to false. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  readOnly?: boolean;
  /**
   * @member {V1SecretReference} [secretRef] SecretRef is name of
   * the authentication secret for RBDUser. If provided overrides keyring.
   * Default is nil. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  secretRef?: V1SecretReference;
  /**
   * @member {string} [user] The rados user name. Default is admin. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   */
  user?: string;
}

/**
 * @interface
 * An interface representing V1ScaleIOPersistentVolumeSource.
 * ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
 *
 */
export interface V1ScaleIOPersistentVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {string} gateway The host address of the ScaleIO API Gateway.
   */
  gateway: string;
  /**
   * @member {string} [protectionDomain] The name of the ScaleIO Protection
   * Domain for the configured storage.
   */
  protectionDomain?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1SecretReference} secretRef SecretRef references to
   * the secret for ScaleIO user and other sensitive information. If this is
   * not provided, Login operation will fail.
   */
  secretRef: V1SecretReference;
  /**
   * @member {boolean} [sslEnabled] Flag to enable/disable SSL communication
   * with Gateway, default false
   */
  sslEnabled?: boolean;
  /**
   * @member {string} [storageMode] Indicates whether the storage for a volume
   * should be ThickProvisioned or ThinProvisioned.
   */
  storageMode?: string;
  /**
   * @member {string} [storagePool] The ScaleIO Storage Pool associated with
   * the protection domain.
   */
  storagePool?: string;
  /**
   * @member {string} system The name of the storage system as configured in
   * ScaleIO.
   */
  system: string;
  /**
   * @member {string} [volumeName] The name of a volume already created in the
   * ScaleIO system that is associated with this volume source.
   */
  volumeName?: string;
}

/**
 * @interface
 * An interface representing V1StorageOSPersistentVolumeSource.
 * Represents a StorageOS persistent volume resource.
 *
 */
export interface V1StorageOSPersistentVolumeSource {
  /**
   * @member {string} [fsType] Filesystem type to mount. Must be a filesystem
   * type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   * Implicitly inferred to be "ext4" if unspecified.
   */
  fsType?: string;
  /**
   * @member {boolean} [readOnly] Defaults to false (read/write). ReadOnly here
   * will force the ReadOnly setting in VolumeMounts.
   */
  readOnly?: boolean;
  /**
   * @member {V1ObjectReference} [secretRef] SecretRef specifies
   * the secret to use for obtaining the StorageOS API credentials.  If not
   * specified, default values will be attempted.
   */
  secretRef?: V1ObjectReference;
  /**
   * @member {string} [volumeName] VolumeName is the human-readable name of the
   * StorageOS volume.  Volume names are only unique within a namespace.
   */
  volumeName?: string;
  /**
   * @member {string} [volumeNamespace] VolumeNamespace specifies the scope of
   * the volume within StorageOS.  If no namespace is specified then the Pod's
   * namespace will be used.  This allows the Kubernetes name scoping to be
   * mirrored within StorageOS for tighter integration. Set VolumeName to any
   * name to override the default behaviour. Set to "default" if you are not
   * using namespaces within StorageOS. Namespaces that do not pre-exist within
   * StorageOS will be created.
   */
  volumeNamespace?: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeSpec.
 * PersistentVolumeSpec is the specification of a persistent volume.
 *
 */
export interface V1PersistentVolumeSpec {
  /**
   * @member {string[]} [accessModes] AccessModes contains all ways the volume
   * can be mounted. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
   */
  accessModes?: string[];
  /**
   * @member {V1AWSElasticBlockStoreVolumeSource}
   * [awsElasticBlockStore] AWSElasticBlockStore represents an AWS Disk
   * resource that is attached to a kubelet's host machine and then exposed to
   * the pod. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   */
  awsElasticBlockStore?: V1AWSElasticBlockStoreVolumeSource;
  /**
   * @member {V1AzureDiskVolumeSource} [azureDisk] AzureDisk
   * represents an Azure Data Disk mount on the host and bind mount to the pod.
   */
  azureDisk?: V1AzureDiskVolumeSource;
  /**
   * @member {V1AzureFilePersistentVolumeSource} [azureFile]
   * AzureFile represents an Azure File Service mount on the host and bind
   * mount to the pod.
   */
  azureFile?: V1AzureFilePersistentVolumeSource;
  /**
   * @member {{ [propertyName: string]: string }} [capacity] A description of
   * the persistent volume's resources and capacity. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
   */
  capacity?: { [propertyName: string]: string };
  /**
   * @member {V1CephFSPersistentVolumeSource} [cephfs] CephFS
   * represents a Ceph FS mount on the host that shares a pod's lifetime
   */
  cephfs?: V1CephFSPersistentVolumeSource;
  /**
   * @member {V1CinderPersistentVolumeSource} [cinder] Cinder
   * represents a cinder volume attached and mounted on kubelets host machine
   * More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   */
  cinder?: V1CinderPersistentVolumeSource;
  /**
   * @member {V1ObjectReference} [claimRef] ClaimRef is part of a
   * bi-directional binding between PersistentVolume and PersistentVolumeClaim.
   * Expected to be non-nil when bound. claim.VolumeName is the authoritative
   * bind between PV and PVC. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding
   */
  claimRef?: V1ObjectReference;
  /**
   * @member {V1CSIPersistentVolumeSource} [csi] CSI represents
   * storage that handled by an external CSI driver (Beta feature).
   */
  csi?: V1CSIPersistentVolumeSource;
  /**
   * @member {V1FCVolumeSource} [fc] FC represents a Fibre Channel
   * resource that is attached to a kubelet's host machine and then exposed to
   * the pod.
   */
  fc?: V1FCVolumeSource;
  /**
   * @member {V1FlexPersistentVolumeSource} [flexVolume] FlexVolume
   * represents a generic volume resource that is provisioned/attached using an
   * exec based plugin.
   */
  flexVolume?: V1FlexPersistentVolumeSource;
  /**
   * @member {V1FlockerVolumeSource} [flocker] Flocker represents a
   * Flocker volume attached to a kubelet's host machine and exposed to the pod
   * for its usage. This depends on the Flocker control service being running
   */
  flocker?: V1FlockerVolumeSource;
  /**
   * @member {V1GCEPersistentDiskVolumeSource} [gcePersistentDisk]
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod. Provisioned by an
   * admin. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   */
  gcePersistentDisk?: V1GCEPersistentDiskVolumeSource;
  /**
   * @member {V1GlusterfsVolumeSource} [glusterfs] Glusterfs
   * represents a Glusterfs volume that is attached to a host and exposed to
   * the pod. Provisioned by an admin. More info:
   * https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
   */
  glusterfs?: V1GlusterfsVolumeSource;
  /**
   * @member {V1HostPathVolumeSource} [hostPath] HostPath
   * represents a directory on the host. Provisioned by a developer or tester.
   * This is useful for single-node development and testing only! On-host
   * storage is not supported in any way and WILL NOT WORK in a multi-node
   * cluster. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   */
  hostPath?: V1HostPathVolumeSource;
  /**
   * @member {V1ISCSIPersistentVolumeSource} [iscsi] ISCSI
   * represents an ISCSI Disk resource that is attached to a kubelet's host
   * machine and then exposed to the pod. Provisioned by an admin.
   */
  iscsi?: V1ISCSIPersistentVolumeSource;
  /**
   * @member {V1LocalVolumeSource} [local] Local represents
   * directly-attached storage with node affinity
   */
  local?: V1LocalVolumeSource;
  /**
   * @member {string[]} [mountOptions] A list of mount options, e.g. ["ro",
   * "soft"]. Not validated - mount will simply fail if one is invalid. More
   * info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
   */
  mountOptions?: string[];
  /**
   * @member {V1NFSVolumeSource} [nfs] NFS represents an NFS mount
   * on the host. Provisioned by an admin. More info:
   * https://kubernetes.io/docs/concepts/storage/volumes#nfs
   */
  nfs?: V1NFSVolumeSource;
  /**
   * @member {V1VolumeNodeAffinity} [nodeAffinity] NodeAffinity
   * defines constraints that limit what nodes this volume can be accessed
   * from. This field influences the scheduling of pods that use this volume.
   */
  nodeAffinity?: V1VolumeNodeAffinity;
  /**
   * @member {string} [persistentVolumeReclaimPolicy] What happens to a
   * persistent volume when released from its claim. Valid options are Retain
   * (default for manually created PersistentVolumes), Delete (default for
   * dynamically provisioned PersistentVolumes), and Recycle (deprecated).
   * Recycle must be supported by the volume plugin underlying this
   * PersistentVolume. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
   */
  persistentVolumeReclaimPolicy?: string;
  /**
   * @member {V1PhotonPersistentDiskVolumeSource}
   * [photonPersistentDisk] PhotonPersistentDisk represents a PhotonController
   * persistent disk attached and mounted on kubelets host machine
   */
  photonPersistentDisk?: V1PhotonPersistentDiskVolumeSource;
  /**
   * @member {V1PortworxVolumeSource} [portworxVolume]
   * PortworxVolume represents a portworx volume attached and mounted on
   * kubelets host machine
   */
  portworxVolume?: V1PortworxVolumeSource;
  /**
   * @member {V1QuobyteVolumeSource} [quobyte] Quobyte represents a
   * Quobyte mount on the host that shares a pod's lifetime
   */
  quobyte?: V1QuobyteVolumeSource;
  /**
   * @member {V1RBDPersistentVolumeSource} [rbd] RBD represents a
   * Rados Block Device mount on the host that shares a pod's lifetime. More
   * info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
   */
  rbd?: V1RBDPersistentVolumeSource;
  /**
   * @member {V1ScaleIOPersistentVolumeSource} [scaleIO] ScaleIO
   * represents a ScaleIO persistent volume attached and mounted on Kubernetes
   * nodes.
   */
  scaleIO?: V1ScaleIOPersistentVolumeSource;
  /**
   * @member {string} [storageClassName] Name of StorageClass to which this
   * persistent volume belongs. Empty value means that this volume does not
   * belong to any StorageClass.
   */
  storageClassName?: string;
  /**
   * @member {V1StorageOSPersistentVolumeSource} [storageos]
   * StorageOS represents a StorageOS volume that is attached to the kubelet's
   * host machine and mounted into the pod More info:
   * https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md
   */
  storageos?: V1StorageOSPersistentVolumeSource;
  /**
   * @member {string} [volumeMode] volumeMode defines if a volume is intended
   * to be used with a formatted filesystem or to remain in raw block state.
   * Value of Filesystem is implied when not included in spec. This is an alpha
   * feature and may change in the future.
   */
  volumeMode?: string;
  /**
   * @member {V1VsphereVirtualDiskVolumeSource} [vsphereVolume]
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets
   * host machine
   */
  vsphereVolume?: V1VsphereVirtualDiskVolumeSource;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeStatus.
 * PersistentVolumeStatus is the current status of a persistent volume.
 *
 */
export interface V1PersistentVolumeStatus {
  /**
   * @member {string} [message] A human-readable message indicating details
   * about why the volume is in this state.
   */
  message?: string;
  /**
   * @member {string} [phase] Phase indicates if a volume is available, bound
   * to a claim, or released by a claim. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
   */
  phase?: string;
  /**
   * @member {string} [reason] Reason is a brief CamelCase string that
   * describes any failure and is meant for machine parsing and tidy display in
   * the CLI.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing V1PersistentVolume.
 * PersistentVolume (PV) is a storage resource provisioned by an administrator.
 * It is analogous to a node. More info:
 * https://kubernetes.io/docs/concepts/storage/persistent-volumes
 *
 */
export interface V1PersistentVolume {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1PersistentVolumeSpec} [spec] Spec defines a
   * specification of a persistent volume owned by the cluster. Provisioned by
   * an administrator. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
   */
  spec?: V1PersistentVolumeSpec;
  /**
   * @member {V1PersistentVolumeStatus} [status] Status represents
   * the current information/status for the persistent volume. Populated by the
   * system. Read-only. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
   */
  status?: V1PersistentVolumeStatus;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeClaimList.
 * PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
 *
 */
export interface V1PersistentVolumeClaimList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1PersistentVolumeClaim[]} items A list of persistent
   * volume claims. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   */
  items: V1PersistentVolumeClaim[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1PersistentVolumeList.
 * PersistentVolumeList is a list of PersistentVolume items.
 *
 */
export interface V1PersistentVolumeList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1PersistentVolume[]} items List of persistent
   * volumes. More info:
   * https://kubernetes.io/docs/concepts/storage/persistent-volumes
   */
  items: V1PersistentVolume[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1PodCondition.
 * PodCondition contains details for the current condition of this pod.
 *
 */
export interface V1PodCondition {
  /**
   * @member {Date} [lastProbeTime] Last time we probed the condition.
   */
  lastProbeTime?: Date;
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human-readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] Unique, one-word, CamelCase reason for the
   * condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status is the status of the condition. Can be
   * True, False, Unknown. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
   */
  status: string;
  /**
   * @member {string} type Type is the type of the condition. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1PodStatus.
 * PodStatus represents information about the status of a pod. Status may trail
 * the actual state of a system, especially if the node that hosts the pod
 * cannot contact the control plane.
 *
 */
export interface V1PodStatus {
  /**
   * @member {V1PodCondition[]} [conditions] Current service state
   * of pod. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
   */
  conditions?: V1PodCondition[];
  /**
   * @member {V1ContainerStatus[]} [containerStatuses] The list has
   * one entry per container in the manifest. Each entry is currently the
   * output of `docker inspect`. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
   */
  containerStatuses?: V1ContainerStatus[];
  /**
   * @member {string} [hostIP] IP address of the host to which the pod is
   * assigned. Empty if not yet scheduled.
   */
  hostIP?: string;
  /**
   * @member {V1ContainerStatus[]} [initContainerStatuses] The list
   * has one entry per init container in the manifest. The most recent
   * successful init container will have ready = true, the most recently
   * started container will have startTime set. More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
   */
  initContainerStatuses?: V1ContainerStatus[];
  /**
   * @member {string} [message] A human readable message indicating details
   * about why the pod is in this condition.
   */
  message?: string;
  /**
   * @member {string} [nominatedNodeName] nominatedNodeName is set only when
   * this pod preempts other pods on the node, but it cannot be scheduled right
   * away as preemption victims receive their graceful termination periods.
   * This field does not guarantee that the pod will be scheduled on this node.
   * Scheduler may decide to place the pod elsewhere if other nodes become
   * available sooner. Scheduler may also decide to give the resources on this
   * node to a higher priority pod that is created after preemption. As a
   * result, this field may be different than PodSpec.nodeName when the pod is
   * scheduled.
   */
  nominatedNodeName?: string;
  /**
   * @member {string} [phase] The phase of a Pod is a simple, high-level
   * summary of where the Pod is in its lifecycle. The conditions array, the
   * reason and message fields, and the individual container status arrays
   * contain more detail about the pod's status. There are five possible phase
   * values:
   *
   * Pending: The pod has been accepted by the Kubernetes system, but one or
   * more of the container images has not been created. This includes time
   * before being scheduled as well as time spent downloading images over the
   * network, which could take a while. Running: The pod has been bound to a
   * node, and all of the containers have been created. At least one container
   * is still running, or is in the process of starting or restarting.
   * Succeeded: All containers in the pod have terminated in success, and will
   * not be restarted. Failed: All containers in the pod have terminated, and
   * at least one container has terminated in failure. The container either
   * exited with non-zero status or was terminated by the system. Unknown: For
   * some reason the state of the pod could not be obtained, typically due to
   * an error in communicating with the host of the pod.
   *
   * More info:
   * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
   */
  phase?: string;
  /**
   * @member {string} [podIP] IP address allocated to the pod. Routable at
   * least within the cluster. Empty if not yet allocated.
   */
  podIP?: string;
  /**
   * @member {string} [qosClass] The Quality of Service (QOS) classification
   * assigned to the pod based on resource requirements See PodQOSClass type
   * for available QOS classes More info:
   * https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
   */
  qosClass?: string;
  /**
   * @member {string} [reason] A brief CamelCase message indicating details
   * about why the pod is in this state. e.g. 'Evicted'
   */
  reason?: string;
  /**
   * @member {Date} [startTime] RFC 3339 date and time at which the object was
   * acknowledged by the Kubelet. This is before the Kubelet pulled the
   * container image(s) for the pod.
   */
  startTime?: Date;
}

/**
 * @interface
 * An interface representing V1Pod.
 * Pod is a collection of containers that can run on a host. This resource is
 * created by clients and scheduled onto hosts.
 *
 */
export interface V1Pod {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1PodSpec} [spec] Specification of the desired
   * behavior of the pod. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1PodSpec;
  /**
   * @member {V1PodStatus} [status] Most recently observed status
   * of the pod. This data may not be up to date. Populated by the system.
   * Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1PodStatus;
}

/**
 * @interface
 * An interface representing V1PodList.
 * PodList is a list of Pods.
 *
 */
export interface V1PodList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Pod[]} items List of pods. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md
   */
  items: V1Pod[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1PodTemplate.
 * PodTemplate describes a template for creating copies of a predefined pod.
 *
 */
export interface V1PodTemplate {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1PodTemplateSpec} [template] Template defines the
   * pods that will be created from this pod template.
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing V1PodTemplateList.
 * PodTemplateList is a list of PodTemplates.
 *
 */
export interface V1PodTemplateList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1PodTemplate[]} items List of pod templates
   */
  items: V1PodTemplate[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ReplicationControllerSpec.
 * ReplicationControllerSpec is the specification of a replication controller.
 *
 */
export interface V1ReplicationControllerSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {number} [replicas] Replicas is the number of desired replicas.
   * This is a pointer to distinguish between explicit zero and unspecified.
   * Defaults to 1. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
   */
  replicas?: number;
  /**
   * @member {{ [propertyName: string]: string }} [selector] Selector is a
   * label query over pods that should match the Replicas count. If Selector is
   * empty, it is defaulted to the labels present on the Pod template. Label
   * keys and values that must match in order to be controlled by this
   * replication controller, if empty defaulted to labels on Pod template. More
   * info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {V1PodTemplateSpec} [template] Template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. This takes precedence over a TemplateRef. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing V1ReplicationControllerCondition.
 * ReplicationControllerCondition describes the state of a replication
 * controller at a certain point.
 *
 */
export interface V1ReplicationControllerCondition {
  /**
   * @member {Date} [lastTransitionTime] The last time the condition
   * transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of replication controller condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing V1ReplicationControllerStatus.
 * ReplicationControllerStatus represents the current status of a replication
 * controller.
 *
 */
export interface V1ReplicationControllerStatus {
  /**
   * @member {number} [availableReplicas] The number of available replicas
   * (ready for at least minReadySeconds) for this replication controller.
   */
  availableReplicas?: number;
  /**
   * @member {V1ReplicationControllerCondition[]} [conditions]
   * Represents the latest available observations of a replication controller's
   * current state.
   */
  conditions?: V1ReplicationControllerCondition[];
  /**
   * @member {number} [fullyLabeledReplicas] The number of pods that have
   * labels matching the labels of the pod template of the replication
   * controller.
   */
  fullyLabeledReplicas?: number;
  /**
   * @member {number} [observedGeneration] ObservedGeneration reflects the
   * generation of the most recently observed replication controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] The number of ready replicas for this
   * replication controller.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas Replicas is the most recently oberved number of
   * replicas. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
   */
  replicas: number;
}

/**
 * @interface
 * An interface representing V1ReplicationController.
 * ReplicationController represents the configuration of a replication
 * controller.
 *
 */
export interface V1ReplicationController {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] If the
   * Labels of a ReplicationController are empty, they are defaulted to be the
   * same as the Pod(s) that the replication controller manages. Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ReplicationControllerSpec} [spec] Spec defines the
   * specification of the desired behavior of the replication controller. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1ReplicationControllerSpec;
  /**
   * @member {V1ReplicationControllerStatus} [status] Status is the
   * most recently observed status of the replication controller. This data may
   * be out of date by some window of time. Populated by the system. Read-only.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1ReplicationControllerStatus;
}

/**
 * @interface
 * An interface representing V1ReplicationControllerList.
 * ReplicationControllerList is a collection of replication controllers.
 *
 */
export interface V1ReplicationControllerList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ReplicationController[]} items List of replication
   * controllers. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
   */
  items: V1ReplicationController[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ResourceQuota.
 * ResourceQuota sets aggregate quota restrictions enforced per namespace
 *
 */
export interface V1ResourceQuota {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ResourceQuotaSpec} [spec] Spec defines the desired
   * quota.
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1ResourceQuotaSpec;
  /**
   * @member {V1ResourceQuotaStatus} [status] Status defines the
   * actual enforced quota and its current usage.
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1ResourceQuotaStatus;
}

/**
 * @interface
 * An interface representing V1ResourceQuotaList.
 * ResourceQuotaList is a list of ResourceQuota items.
 *
 */
export interface V1ResourceQuotaList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ResourceQuota[]} items Items is a list of
   * ResourceQuota objects. More info:
   * https://kubernetes.io/docs/concepts/policy/resource-quotas/
   */
  items: V1ResourceQuota[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1Secret.
 * Secret holds secret data of a certain type. The total bytes of the values in
 * the Data field must be less than MaxSecretSize bytes.
 *
 */
export interface V1Secret {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {{ [propertyName: string]: Uint8Array }} [data] Data contains the
   * secret data. Each key must consist of alphanumeric characters, '-', '_' or
   * '.'. The serialized form of the secret data is a base64 encoded string,
   * representing the arbitrary (possibly non-string) data value here.
   * Described in https://tools.ietf.org/html/rfc4648#section-4
   */
  data?: { [propertyName: string]: Uint8Array };
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {{ [propertyName: string]: string }} [stringData] stringData
   * allows specifying non-binary secret data in string form. It is provided as
   * a write-only convenience method. All keys and values are merged into the
   * data field on write, overwriting any existing values. It is never output
   * when reading from the API.
   */
  stringData?: { [propertyName: string]: string };
  /**
   * @member {string} [type] Used to facilitate programmatic handling of secret
   * data.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1SecretList.
 * SecretList is a list of Secret.
 *
 */
export interface V1SecretList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Secret[]} items Items is a list of secret objects.
   * More info: https://kubernetes.io/docs/concepts/configuration/secret
   */
  items: V1Secret[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ServicePort.
 * ServicePort contains information on service's port.
 *
 */
export interface V1ServicePort {
  /**
   * @member {string} [name] The name of this port within the service. This
   * must be a DNS_LABEL. All ports within a ServiceSpec must have unique
   * names. This maps to the 'Name' field in EndpointPort objects. Optional if
   * only one ServicePort is defined on this service.
   */
  name?: string;
  /**
   * @member {number} [nodePort] The port on each node on which this service is
   * exposed when type=NodePort or LoadBalancer. Usually assigned by the
   * system. If specified, it will be allocated to the service if unused or
   * else creation of the service will fail. Default is to auto-allocate a port
   * if the ServiceType of this Service requires one. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
   */
  nodePort?: number;
  /**
   * @member {number} port The port that will be exposed by this service.
   */
  port: number;
  /**
   * @member {string} [protocol] The IP protocol for this port. Supports "TCP"
   * and "UDP". Default is TCP.
   */
  protocol?: string;
  /**
   * @member {string} [targetPort] Number or name of the port to access on the
   * pods targeted by the service. Number must be in the range 1 to 65535. Name
   * must be an IANA_SVC_NAME. If this is a string, it will be looked up as a
   * named port in the target Pod's container ports. If this is not specified,
   * the value of the 'port' field is used (an identity map). This field is
   * ignored for services with clusterIP=None, and should be omitted or set
   * equal to the 'port' field. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
   */
  targetPort?: string;
}

/**
 * @interface
 * An interface representing V1SessionAffinityConfig.
 * SessionAffinityConfig represents the configurations of session affinity.
 *
 */
export interface V1SessionAffinityConfig {
  /**
   * @member {V1ClientIPConfig} [clientIP] clientIP contains the
   * configurations of Client IP based session affinity.
   */
  clientIP?: V1ClientIPConfig;
}

/**
 * @interface
 * An interface representing V1ServiceSpec.
 * ServiceSpec describes the attributes that a user creates on a service.
 *
 */
export interface V1ServiceSpec {
  /**
   * @member {string} [clusterIP] clusterIP is the IP address of the service
   * and is usually assigned randomly by the master. If an address is specified
   * manually and is not in use by others, it will be allocated to the service;
   * otherwise, creation of the service will fail. This field can not be
   * changed through updates. Valid values are "None", empty string (""), or a
   * valid IP address. "None" can be specified for headless services when
   * proxying is not required. Only applies to types ClusterIP, NodePort, and
   * LoadBalancer. Ignored if type is ExternalName. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
   */
  clusterIP?: string;
  /**
   * @member {string[]} [externalIPs] externalIPs is a list of IP addresses for
   * which nodes in the cluster will also accept traffic for this service.
   * These IPs are not managed by Kubernetes.  The user is responsible for
   * ensuring that traffic arrives at a node with this IP.  A common example is
   * external load-balancers that are not part of the Kubernetes system.
   */
  externalIPs?: string[];
  /**
   * @member {string} [externalName] externalName is the external reference
   * that kubedns or equivalent will return as a CNAME record for this service.
   * No proxying will be involved. Must be a valid RFC-1123 hostname
   * (https://tools.ietf.org/html/rfc1123) and requires Type to be
   * ExternalName.
   */
  externalName?: string;
  /**
   * @member {string} [externalTrafficPolicy] externalTrafficPolicy denotes if
   * this Service desires to route external traffic to node-local or
   * cluster-wide endpoints. "Local" preserves the client source IP and avoids
   * a second hop for LoadBalancer and Nodeport type services, but risks
   * potentially imbalanced traffic spreading. "Cluster" obscures the client
   * source IP and may cause a second hop to another node, but should have good
   * overall load-spreading.
   */
  externalTrafficPolicy?: string;
  /**
   * @member {number} [healthCheckNodePort] healthCheckNodePort specifies the
   * healthcheck nodePort for the service. If not specified,
   * HealthCheckNodePort is created by the service api backend with the
   * allocated nodePort. Will use user-specified nodePort value if specified by
   * the client. Only effects when Type is set to LoadBalancer and
   * ExternalTrafficPolicy is set to Local.
   */
  healthCheckNodePort?: number;
  /**
   * @member {string} [loadBalancerIP] Only applies to Service Type:
   * LoadBalancer LoadBalancer will get created with the IP specified in this
   * field. This feature depends on whether the underlying cloud-provider
   * supports specifying the loadBalancerIP when a load balancer is created.
   * This field will be ignored if the cloud-provider does not support the
   * feature.
   */
  loadBalancerIP?: string;
  /**
   * @member {string[]} [loadBalancerSourceRanges] If specified and supported
   * by the platform, this will restrict traffic through the cloud-provider
   * load-balancer will be restricted to the specified client IPs. This field
   * will be ignored if the cloud-provider does not support the feature." More
   * info:
   * https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
   */
  loadBalancerSourceRanges?: string[];
  /**
   * @member {V1ServicePort[]} [ports] The list of ports that are
   * exposed by this service. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
   */
  ports?: V1ServicePort[];
  /**
   * @member {boolean} [publishNotReadyAddresses] publishNotReadyAddresses,
   * when set to true, indicates that DNS implementations must publish the
   * notReadyAddresses of subsets for the Endpoints associated with the
   * Service. The default value is false. The primary use case for setting this
   * field is to use a StatefulSet's Headless Service to propagate SRV records
   * for its Pods without respect to their readiness for purpose of peer
   * discovery.
   */
  publishNotReadyAddresses?: boolean;
  /**
   * @member {{ [propertyName: string]: string }} [selector] Route service
   * traffic to pods with label keys and values matching this selector. If
   * empty or not present, the service is assumed to have an external process
   * managing its endpoints, which Kubernetes will not modify. Only applies to
   * types ClusterIP, NodePort, and LoadBalancer. Ignored if type is
   * ExternalName. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {string} [sessionAffinity] Supports "ClientIP" and "None". Used to
   * maintain session affinity. Enable client IP based session affinity. Must
   * be ClientIP or None. Defaults to None. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
   */
  sessionAffinity?: string;
  /**
   * @member {V1SessionAffinityConfig} [sessionAffinityConfig]
   * sessionAffinityConfig contains the configurations of session affinity.
   */
  sessionAffinityConfig?: V1SessionAffinityConfig;
  /**
   * @member {string} [type] type determines how the Service is exposed.
   * Defaults to ClusterIP. Valid options are ExternalName, ClusterIP,
   * NodePort, and LoadBalancer. "ExternalName" maps to the specified
   * externalName. "ClusterIP" allocates a cluster-internal IP address for
   * load-balancing to endpoints. Endpoints are determined by the selector or
   * if that is not specified, by manual construction of an Endpoints object.
   * If clusterIP is "None", no virtual IP is allocated and the endpoints are
   * published as a set of endpoints rather than a stable IP. "NodePort" builds
   * on ClusterIP and allocates a port on every node which routes to the
   * clusterIP. "LoadBalancer" builds on NodePort and creates an external
   * load-balancer (if supported in the current cloud) which routes to the
   * clusterIP. More info:
   * https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
   */
  type?: string;
}

/**
 * @interface
 * An interface representing V1ServiceStatus.
 * ServiceStatus represents the current status of a service.
 *
 */
export interface V1ServiceStatus {
  /**
   * @member {V1LoadBalancerStatus} [loadBalancer] LoadBalancer
   * contains the current status of the load-balancer, if one is present.
   */
  loadBalancer?: V1LoadBalancerStatus;
}

/**
 * @interface
 * An interface representing V1Service.
 * Service is a named abstraction of software service (for example, mysql)
 * consisting of local port (for example 3306) that the proxy listens on, and
 * the selector that determines which pods will answer requests sent through
 * the proxy.
 *
 */
export interface V1Service {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ServiceSpec} [spec] Spec defines the behavior of a
   * service.
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: V1ServiceSpec;
  /**
   * @member {V1ServiceStatus} [status] Most recently observed
   * status of the service. Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: V1ServiceStatus;
}

/**
 * @interface
 * An interface representing V1ServiceAccount.
 * ServiceAccount binds together: * a name, understood by users, and perhaps by
 * peripheral systems, for an identity * a principal that can be authenticated
 * and authorized * a set of secrets
 *
 */
export interface V1ServiceAccount {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {boolean} [automountServiceAccountToken]
   * AutomountServiceAccountToken indicates whether pods running as this
   * service account should have an API token automatically mounted. Can be
   * overridden at the pod level.
   */
  automountServiceAccountToken?: boolean;
  /**
   * @member {V1LocalObjectReference[]} [imagePullSecrets]
   * ImagePullSecrets is a list of references to secrets in the same namespace
   * to use for pulling any images in pods that reference this ServiceAccount.
   * ImagePullSecrets are distinct from Secrets because Secrets can be mounted
   * in the pod, but ImagePullSecrets are only accessed by the kubelet. More
   * info:
   * https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   */
  imagePullSecrets?: V1LocalObjectReference[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {V1ObjectReference[]} [secrets] Secrets is the list of
   * secrets allowed to be used by pods running using this ServiceAccount. More
   * info: https://kubernetes.io/docs/concepts/configuration/secret
   */
  secrets?: V1ObjectReference[];
}

/**
 * @interface
 * An interface representing V1ServiceAccountList.
 * ServiceAccountList is a list of ServiceAccount objects
 *
 */
export interface V1ServiceAccountList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1ServiceAccount[]} items List of ServiceAccounts.
   * More info:
   * https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
   */
  items: V1ServiceAccount[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1ServiceList.
 * ServiceList holds a list of services.
 *
 */
export interface V1ServiceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {V1Service[]} items List of services
   */
  items: V1Service[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing V1TopologySelectorLabelRequirement.
 * A topology selector requirement is a selector that matches given label. This
 * is an alpha feature and may change in the future.
 *
 */
export interface V1TopologySelectorLabelRequirement {
  /**
   * @member {string} key The label key that the selector applies to.
   */
  key: string;
  /**
   * @member {string[]} values An array of string values. One value must match
   * the label to be selected. Each entry in Values is ORed.
   */
  values: string[];
}

/**
 * @interface
 * An interface representing V1TopologySelectorTerm.
 * A topology selector term represents the result of label queries. A null or
 * empty topology selector term matches no objects. The requirements of them
 * are ANDed. It provides a subset of functionality as NodeSelectorTerm. This
 * is an alpha feature and may change in the future.
 *
 */
export interface V1TopologySelectorTerm {
  /**
   * @member {V1TopologySelectorLabelRequirement[]}
   * [matchLabelExpressions] A list of topology selector requirements by
   * labels.
   */
  matchLabelExpressions?: V1TopologySelectorLabelRequirement[];
}

/**
 * @interface
 * An interface representing Iok8sapieventsv1beta1EventSeries.
 * EventSeries contain information on series of events, i.e. thing that was/is
 * happening continuously for some time.
 *
 */
export interface Iok8sapieventsv1beta1EventSeries {
  /**
   * @member {number} count Number of occurrences in this series up to the last
   * heartbeat time
   */
  count: number;
  /**
   * @member {Date} lastObservedTime Time when last Event from the series was
   * seen before last heartbeat.
   */
  lastObservedTime: Date;
  /**
   * @member {string} state Information whether this series is ongoing or
   * finished.
   */
  state: string;
}

/**
 * @interface
 * An interface representing Iok8sapieventsv1beta1Event.
 * Event is a report of an event somewhere in the cluster. It generally denotes
 * some state change in the system.
 *
 */
export interface Iok8sapieventsv1beta1Event {
  /**
   * @member {string} [action] What action was taken/failed regarding to the
   * regarding object.
   */
  action?: string;
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {number} [deprecatedCount] Deprecated field assuring backward
   * compatibility with core.v1 Event type
   */
  deprecatedCount?: number;
  /**
   * @member {Date} [deprecatedFirstTimestamp] Deprecated field assuring
   * backward compatibility with core.v1 Event type
   */
  deprecatedFirstTimestamp?: Date;
  /**
   * @member {Date} [deprecatedLastTimestamp] Deprecated field assuring
   * backward compatibility with core.v1 Event type
   */
  deprecatedLastTimestamp?: Date;
  /**
   * @member {V1EventSource} [deprecatedSource] Deprecated field
   * assuring backward compatibility with core.v1 Event type
   */
  deprecatedSource?: V1EventSource;
  /**
   * @member {Date} eventTime Required. Time when this Event was first
   * observed.
   */
  eventTime: Date;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string} [note] Optional. A human-readable description of the
   * status of this operation. Maximal length of the note is 1kB, but libraries
   * should be prepared to handle values up to 64kB.
   */
  note?: string;
  /**
   * @member {string} [reason] Why the action was taken.
   */
  reason?: string;
  /**
   * @member {V1ObjectReference} [regarding] The object this Event
   * is about. In most cases it's an Object reporting controller implements.
   * E.g. ReplicaSetController implements ReplicaSets and this event is emitted
   * because it acts on some changes in a ReplicaSet object.
   */
  regarding?: V1ObjectReference;
  /**
   * @member {V1ObjectReference} [related] Optional secondary
   * object for more complex actions. E.g. when regarding object triggers a
   * creation or deletion of related object.
   */
  related?: V1ObjectReference;
  /**
   * @member {string} [reportingController] Name of the controller that emitted
   * this Event, e.g. `kubernetes.io/kubelet`.
   */
  reportingController?: string;
  /**
   * @member {string} [reportingInstance] ID of the controller instance, e.g.
   * `kubelet-xyzf`.
   */
  reportingInstance?: string;
  /**
   * @member {Iok8sapieventsv1beta1EventSeries} [series] Data about the Event
   * series this event represents or nil if it's a singleton Event.
   */
  series?: Iok8sapieventsv1beta1EventSeries;
  /**
   * @member {string} [type] Type of this event (Normal, Warning), new types
   * could be added in the future.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapieventsv1beta1EventList.
 * EventList is a list of Event objects.
 *
 */
export interface Iok8sapieventsv1beta1EventList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapieventsv1beta1Event[]} items Items is a list of schema
   * objects.
   */
  items: Iok8sapieventsv1beta1Event[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1AllowedFlexVolume.
 * AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
 * Deprecated: use AllowedFlexVolume from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1AllowedFlexVolume {
  /**
   * @member {string} driver driver is the name of the Flexvolume driver.
   */
  driver: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1AllowedHostPath.
 * AllowedHostPath defines the host volume conditions that will be enabled by a
 * policy for pods to use. It requires the path prefix to be defined.
 * Deprecated: use AllowedHostPath from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1AllowedHostPath {
  /**
   * @member {string} [pathPrefix] pathPrefix is the path prefix that the host
   * volume must match. It does not support `*`. Trailing slashes are trimmed
   * when validating the path prefix with a host path.
   *
   * Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would
   * not allow `/food` or `/etc/foo`
   */
  pathPrefix?: string;
  /**
   * @member {boolean} [readOnly] when set to true, will allow host volumes
   * matching the pathPrefix only if all volume mounts are readOnly.
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1RollingUpdateDaemonSet.
 * Spec to control the desired behavior of daemon set rolling update.
 *
 */
export interface Iok8sapiextensionsv1beta1RollingUpdateDaemonSet {
  /**
   * @member {string} [maxUnavailable] The maximum number of DaemonSet pods
   * that can be unavailable during the update. Value can be an absolute number
   * (ex: 5) or a percentage of total number of DaemonSet pods at the start of
   * the update (ex: 10%). Absolute number is calculated from percentage by
   * rounding up. This cannot be 0. Default value is 1. Example: when this is
   * set to 30%, at most 30% of the total number of nodes that should be
   * running the daemon pod (i.e. status.desiredNumberScheduled) can have their
   * pods stopped for an update at any given time. The update starts by
   * stopping at most 30% of those DaemonSet pods and then brings up new
   * DaemonSet pods in their place. Once the new pods are available, it then
   * proceeds onto other DaemonSet pods, thus ensuring that at least 70% of
   * original number of DaemonSet pods are available at all times during the
   * update.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy.
 */
export interface Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy {
  /**
   * @member {Iok8sapiextensionsv1beta1RollingUpdateDaemonSet} [rollingUpdate]
   * Rolling update config params. Present only if type = "RollingUpdate".
   */
  rollingUpdate?: Iok8sapiextensionsv1beta1RollingUpdateDaemonSet;
  /**
   * @member {string} [type] Type of daemon set update. Can be "RollingUpdate"
   * or "OnDelete". Default is OnDelete.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSetSpec.
 * DaemonSetSpec is the specification of a daemon set.
 *
 */
export interface Iok8sapiextensionsv1beta1DaemonSetSpec {
  /**
   * @member {number} [minReadySeconds] The minimum number of seconds for which
   * a newly created DaemonSet pod should be ready without any of its container
   * crashing, for it to be considered available. Defaults to 0 (pod will be
   * considered available as soon as it is ready).
   */
  minReadySeconds?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old history to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified. Defaults to 10.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] A label
   * query over pods that are managed by the daemon set. Must match in order to
   * be controlled. If empty, defaulted to labels on Pod template. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} template An object that describes
   * the pod that will be created. The DaemonSet will create exactly one copy
   * of this pod on every node that matches the template's node selector (or on
   * every node if no node selector is specified). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template: V1PodTemplateSpec;
  /**
   * @member {number} [templateGeneration] DEPRECATED. A sequence number
   * representing a specific generation of the template. Populated by the
   * system. It can be set only during the creation.
   */
  templateGeneration?: number;
  /**
   * @member {Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy}
   * [updateStrategy] An update strategy to replace existing DaemonSet pods
   * with new pods.
   */
  updateStrategy?: Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSetCondition.
 * DaemonSetCondition describes the state of a DaemonSet at a certain point.
 *
 */
export interface Iok8sapiextensionsv1beta1DaemonSetCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of DaemonSet condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSetStatus.
 * DaemonSetStatus represents the current status of a daemon set.
 *
 */
export interface Iok8sapiextensionsv1beta1DaemonSetStatus {
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * DaemonSet. The DaemonSet controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ControllerRevision.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiextensionsv1beta1DaemonSetCondition[]} [conditions]
   * Represents the latest available observations of a DaemonSet's current
   * state.
   */
  conditions?: Iok8sapiextensionsv1beta1DaemonSetCondition[];
  /**
   * @member {number} currentNumberScheduled The number of nodes that are
   * running at least 1 daemon pod and are supposed to run the daemon pod. More
   * info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  currentNumberScheduled: number;
  /**
   * @member {number} desiredNumberScheduled The total number of nodes that
   * should be running the daemon pod (including nodes correctly running the
   * daemon pod). More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  desiredNumberScheduled: number;
  /**
   * @member {number} [numberAvailable] The number of nodes that should be
   * running the daemon pod and have one or more of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberAvailable?: number;
  /**
   * @member {number} numberMisscheduled The number of nodes that are running
   * the daemon pod, but are not supposed to run the daemon pod. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
   */
  numberMisscheduled: number;
  /**
   * @member {number} numberReady The number of nodes that should be running
   * the daemon pod and have one or more of the daemon pod running and ready.
   */
  numberReady: number;
  /**
   * @member {number} [numberUnavailable] The number of nodes that should be
   * running the daemon pod and have none of the daemon pod running and
   * available (ready for at least spec.minReadySeconds)
   */
  numberUnavailable?: number;
  /**
   * @member {number} [observedGeneration] The most recent generation observed
   * by the daemon set controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [updatedNumberScheduled] The total number of nodes that
   * are running updated daemon pod
   */
  updatedNumberScheduled?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSet.
 * DEPRECATED - This group version of DaemonSet is deprecated by
 * apps/v1beta2/DaemonSet. See the release notes for more information.
 * DaemonSet represents the configuration of a daemon set.
 *
 */
export interface Iok8sapiextensionsv1beta1DaemonSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1DaemonSetSpec} [spec] The desired
   * behavior of this daemon set. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiextensionsv1beta1DaemonSetSpec;
  /**
   * @member {Iok8sapiextensionsv1beta1DaemonSetStatus} [status] The current
   * status of this daemon set. This data may be out of date by some window of
   * time. Populated by the system. Read-only. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiextensionsv1beta1DaemonSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DaemonSetList.
 * DaemonSetList is a collection of daemon sets.
 *
 */
export interface Iok8sapiextensionsv1beta1DaemonSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1DaemonSet[]} items A list of daemon
   * sets.
   */
  items: Iok8sapiextensionsv1beta1DaemonSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1RollbackConfig.
 * DEPRECATED.
 *
 */
export interface Iok8sapiextensionsv1beta1RollbackConfig {
  /**
   * @member {number} [revision] The revision to rollback to. If set to 0,
   * rollback to the last revision.
   */
  revision?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1RollingUpdateDeployment.
 * Spec to control the desired behavior of rolling update.
 *
 */
export interface Iok8sapiextensionsv1beta1RollingUpdateDeployment {
  /**
   * @member {string} [maxSurge] The maximum number of pods that can be
   * scheduled above the desired number of pods. Value can be an absolute
   * number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be
   * 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by
   * rounding up. By default, a value of 1 is used. Example: when this is set
   * to 30%, the new RC can be scaled up immediately when the rolling update
   * starts, such that the total number of old and new pods do not exceed 130%
   * of desired pods. Once old pods have been killed, new RC can be scaled up
   * further, ensuring that total number of pods running at any time during the
   * update is atmost 130% of desired pods.
   */
  maxSurge?: string;
  /**
   * @member {string} [maxUnavailable] The maximum number of pods that can be
   * unavailable during the update. Value can be an absolute number (ex: 5) or
   * a percentage of desired pods (ex: 10%). Absolute number is calculated from
   * percentage by rounding down. This can not be 0 if MaxSurge is 0. By
   * default, a fixed value of 1 is used. Example: when this is set to 30%, the
   * old RC can be scaled down to 70% of desired pods immediately when the
   * rolling update starts. Once new pods are ready, old RC can be scaled down
   * further, followed by scaling up the new RC, ensuring that the total number
   * of pods available at all times during the update is at least 70% of
   * desired pods.
   */
  maxUnavailable?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentStrategy.
 * DeploymentStrategy describes how to replace existing pods with new ones.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentStrategy {
  /**
   * @member {Iok8sapiextensionsv1beta1RollingUpdateDeployment} [rollingUpdate]
   * Rolling update config params. Present only if DeploymentStrategyType =
   * RollingUpdate.
   */
  rollingUpdate?: Iok8sapiextensionsv1beta1RollingUpdateDeployment;
  /**
   * @member {string} [type] Type of deployment. Can be "Recreate" or
   * "RollingUpdate". Default is RollingUpdate.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentSpec.
 * DeploymentSpec is the specification of the desired behavior of the
 * Deployment.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {boolean} [paused] Indicates that the deployment is paused and
   * will not be processed by the deployment controller.
   */
  paused?: boolean;
  /**
   * @member {number} [progressDeadlineSeconds] The maximum time in seconds for
   * a deployment to make progress before it is considered to be failed. The
   * deployment controller will continue to process failed deployments and a
   * condition with a ProgressDeadlineExceeded reason will be surfaced in the
   * deployment status. Note that progress will not be estimated during the
   * time a deployment is paused. This is not set by default.
   */
  progressDeadlineSeconds?: number;
  /**
   * @member {number} [replicas] Number of desired pods. This is a pointer to
   * distinguish between explicit zero and not specified. Defaults to 1.
   */
  replicas?: number;
  /**
   * @member {number} [revisionHistoryLimit] The number of old ReplicaSets to
   * retain to allow rollback. This is a pointer to distinguish between
   * explicit zero and not specified.
   */
  revisionHistoryLimit?: number;
  /**
   * @member {Iok8sapiextensionsv1beta1RollbackConfig} [rollbackTo] DEPRECATED.
   * The config this deployment is rolling back to. Will be cleared after
   * rollback is done.
   */
  rollbackTo?: Iok8sapiextensionsv1beta1RollbackConfig;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] Label
   * selector for pods. Existing ReplicaSets whose pods are selected by this
   * will be the ones affected by this deployment.
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapiextensionsv1beta1DeploymentStrategy} [strategy] The
   * deployment strategy to use to replace existing pods with new ones.
   */
  strategy?: Iok8sapiextensionsv1beta1DeploymentStrategy;
  /**
   * @member {V1PodTemplateSpec} template Template describes the
   * pods that will be created.
   */
  template: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentCondition.
 * DeploymentCondition describes the state of a deployment at a certain point.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {Date} [lastUpdateTime] The last time this condition was updated.
   */
  lastUpdateTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of deployment condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentStatus.
 * DeploymentStatus is the most recently observed status of the Deployment.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentStatus {
  /**
   * @member {number} [availableReplicas] Total number of available pods (ready
   * for at least minReadySeconds) targeted by this deployment.
   */
  availableReplicas?: number;
  /**
   * @member {number} [collisionCount] Count of hash collisions for the
   * Deployment. The Deployment controller uses this field as a collision
   * avoidance mechanism when it needs to create the name for the newest
   * ReplicaSet.
   */
  collisionCount?: number;
  /**
   * @member {Iok8sapiextensionsv1beta1DeploymentCondition[]} [conditions]
   * Represents the latest available observations of a deployment's current
   * state.
   */
  conditions?: Iok8sapiextensionsv1beta1DeploymentCondition[];
  /**
   * @member {number} [observedGeneration] The generation observed by the
   * deployment controller.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] Total number of ready pods targeted by
   * this deployment.
   */
  readyReplicas?: number;
  /**
   * @member {number} [replicas] Total number of non-terminated pods targeted
   * by this deployment (their labels match the selector).
   */
  replicas?: number;
  /**
   * @member {number} [unavailableReplicas] Total number of unavailable pods
   * targeted by this deployment. This is the total number of pods that are
   * still required for the deployment to have 100% available capacity. They
   * may either be pods that are running but not yet available or pods that
   * still have not been created.
   */
  unavailableReplicas?: number;
  /**
   * @member {number} [updatedReplicas] Total number of non-terminated pods
   * targeted by this deployment that have the desired template spec.
   */
  updatedReplicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1Deployment.
 * DEPRECATED - This group version of Deployment is deprecated by
 * apps/v1beta2/Deployment. See the release notes for more information.
 * Deployment enables declarative updates for Pods and ReplicaSets.
 *
 */
export interface Iok8sapiextensionsv1beta1Deployment {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1DeploymentSpec} [spec] Specification of
   * the desired behavior of the Deployment.
   */
  spec?: Iok8sapiextensionsv1beta1DeploymentSpec;
  /**
   * @member {Iok8sapiextensionsv1beta1DeploymentStatus} [status] Most recently
   * observed status of the Deployment.
   */
  status?: Iok8sapiextensionsv1beta1DeploymentStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentList.
 * DeploymentList is a list of Deployments.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1Deployment[]} items Items is the list of
   * Deployments.
   */
  items: Iok8sapiextensionsv1beta1Deployment[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1DeploymentRollback.
 * DEPRECATED. DeploymentRollback stores the information required to rollback a
 * deployment.
 *
 */
export interface Iok8sapiextensionsv1beta1DeploymentRollback {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} name Required: This must match the Name of a deployment.
   */
  name: string;
  /**
   * @member {Iok8sapiextensionsv1beta1RollbackConfig} rollbackTo The config of
   * this deployment rollback.
   */
  rollbackTo: Iok8sapiextensionsv1beta1RollbackConfig;
  /**
   * @member {{ [propertyName: string]: string }} [updatedAnnotations] The
   * annotations to be updated to a deployment
   */
  updatedAnnotations?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IDRange.
 * IDRange provides a min/max of an allowed range of IDs. Deprecated: use
 * IDRange from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1IDRange {
  /**
   * @member {number} max max is the end of the range, inclusive.
   */
  max: number;
  /**
   * @member {number} min min is the start of the range, inclusive.
   */
  min: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1FSGroupStrategyOptions.
 * FSGroupStrategyOptions defines the strategy type and options used to create
 * the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group
 * instead.
 *
 */
export interface Iok8sapiextensionsv1beta1FSGroupStrategyOptions {
  /**
   * @member {Iok8sapiextensionsv1beta1IDRange[]} [ranges] ranges are the
   * allowed ranges of fs groups.  If you would like to force a single fs group
   * then supply a single range with the same start and end. Required for
   * MustRunAs.
   */
  ranges?: Iok8sapiextensionsv1beta1IDRange[];
  /**
   * @member {string} [rule] rule is the strategy that will dictate what
   * FSGroup is used in the SecurityContext.
   */
  rule?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressBackend.
 * IngressBackend describes all endpoints for a given service and port.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressBackend {
  /**
   * @member {string} serviceName Specifies the name of the referenced service.
   */
  serviceName: string;
  /**
   * @member {string} servicePort Specifies the port of the referenced service.
   */
  servicePort: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1HTTPIngressPath.
 * HTTPIngressPath associates a path regex with a backend. Incoming urls
 * matching the path are forwarded to the backend.
 *
 */
export interface Iok8sapiextensionsv1beta1HTTPIngressPath {
  /**
   * @member {Iok8sapiextensionsv1beta1IngressBackend} backend Backend defines
   * the referenced service endpoint to which the traffic will be forwarded to.
   */
  backend: Iok8sapiextensionsv1beta1IngressBackend;
  /**
   * @member {string} [path] Path is an extended POSIX regex as defined by IEEE
   * Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
   * matched against the path of an incoming request. Currently it can contain
   * characters disallowed from the conventional "path" part of a URL as
   * defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path
   * defaults to a catch all sending traffic to the backend.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1HTTPIngressRuleValue.
 * HTTPIngressRuleValue is a list of http selectors pointing to backends. In
 * the example: http://<host>/<path>?<searchpart> -> backend where where parts
 * of the url correspond to RFC 3986, this resource will be used to match
 * against everything after the last '/' and before the first '?' or '#'.
 *
 */
export interface Iok8sapiextensionsv1beta1HTTPIngressRuleValue {
  /**
   * @member {Iok8sapiextensionsv1beta1HTTPIngressPath[]} paths A collection of
   * paths that map requests to backends.
   */
  paths: Iok8sapiextensionsv1beta1HTTPIngressPath[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1HostPortRange.
 * HostPortRange defines a range of host ports that will be enabled by a policy
 * for pods to use.  It requires both the start and end to be defined.
 * Deprecated: use HostPortRange from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1HostPortRange {
  /**
   * @member {number} max max is the end of the range, inclusive.
   */
  max: number;
  /**
   * @member {number} min min is the start of the range, inclusive.
   */
  min: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IPBlock.
 * DEPRECATED 1.9 - This group version of IPBlock is deprecated by
 * networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex.
 * "192.168.1.1/24") that is allowed to the pods matched by a
 * NetworkPolicySpec's podSelector. The except entry describes CIDRs that
 * should not be included within this rule.
 *
 */
export interface Iok8sapiextensionsv1beta1IPBlock {
  /**
   * @member {string} cidr CIDR is a string representing the IP Block Valid
   * examples are "192.168.1.1/24"
   */
  cidr: string;
  /**
   * @member {string[]} [except] Except is a slice of CIDRs that should not be
   * included within an IP Block Valid examples are "192.168.1.1/24" Except
   * values will be rejected if they are outside the CIDR range
   */
  except?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressRule.
 * IngressRule represents the rules mapping the paths under a specified host to
 * the related backend services. Incoming requests are first evaluated for a
 * host match, then routed to the backend associated with the matching
 * IngressRuleValue.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressRule {
  /**
   * @member {string} [host] Host is the fully qualified domain name of a
   * network host, as defined by RFC 3986. Note the following deviations from
   * the "host" part of the URI as defined in the RFC: 1. IPs are not allowed.
   * Currently an IngressRuleValue can only apply to the
   * IP in the Spec of the parent Ingress.
   * 2. The `:` delimiter is not respected because ports are not allowed.
   * Currently the port of an Ingress is implicitly :80 for http and
   * :443 for https.
   * Both these may change in the future. Incoming requests are matched against
   * the host before the IngressRuleValue. If the host is unspecified, the
   * Ingress routes all traffic based on the specified IngressRuleValue.
   */
  host?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1HTTPIngressRuleValue} [http]
   */
  http?: Iok8sapiextensionsv1beta1HTTPIngressRuleValue;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressTLS.
 * IngressTLS describes the transport layer security associated with an
 * Ingress.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressTLS {
  /**
   * @member {string[]} [hosts] Hosts are a list of hosts included in the TLS
   * certificate. The values in this list must match the name/s used in the
   * tlsSecret. Defaults to the wildcard host setting for the loadbalancer
   * controller fulfilling this Ingress, if left unspecified.
   */
  hosts?: string[];
  /**
   * @member {string} [secretName] SecretName is the name of the secret used to
   * terminate SSL traffic on 443. Field is left optional to allow SSL routing
   * based on SNI hostname alone. If the SNI host in a listener conflicts with
   * the "Host" header field used by an IngressRule, the SNI host is used for
   * termination and value of the Host header is used for routing.
   */
  secretName?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressSpec.
 * IngressSpec describes the Ingress the user wishes to exist.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressSpec {
  /**
   * @member {Iok8sapiextensionsv1beta1IngressBackend} [backend] A default
   * backend capable of servicing requests that don't match any rule. At least
   * one of 'backend' or 'rules' must be specified. This field is optional to
   * allow the loadbalancer controller or defaulting logic to specify a global
   * default.
   */
  backend?: Iok8sapiextensionsv1beta1IngressBackend;
  /**
   * @member {Iok8sapiextensionsv1beta1IngressRule[]} [rules] A list of host
   * rules used to configure the Ingress. If unspecified, or no rule matches,
   * all traffic is sent to the default backend.
   */
  rules?: Iok8sapiextensionsv1beta1IngressRule[];
  /**
   * @member {Iok8sapiextensionsv1beta1IngressTLS[]} [tls] TLS configuration.
   * Currently the Ingress only supports a single TLS port, 443. If multiple
   * members of this list specify different hosts, they will be multiplexed on
   * the same port according to the hostname specified through the SNI TLS
   * extension, if the ingress controller fulfilling the ingress supports SNI.
   */
  tls?: Iok8sapiextensionsv1beta1IngressTLS[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressStatus.
 * IngressStatus describe the current state of the Ingress.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressStatus {
  /**
   * @member {V1LoadBalancerStatus} [loadBalancer] LoadBalancer
   * contains the current status of the load-balancer.
   */
  loadBalancer?: V1LoadBalancerStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1Ingress.
 * Ingress is a collection of rules that allow inbound connections to reach the
 * endpoints defined by a backend. An Ingress can be configured to give
 * services externally-reachable urls, load balance traffic, terminate SSL,
 * offer name based virtual hosting etc.
 *
 */
export interface Iok8sapiextensionsv1beta1Ingress {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1IngressSpec} [spec] Spec is the desired
   * state of the Ingress. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiextensionsv1beta1IngressSpec;
  /**
   * @member {Iok8sapiextensionsv1beta1IngressStatus} [status] Status is the
   * current state of the Ingress. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiextensionsv1beta1IngressStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1IngressList.
 * IngressList is a collection of Ingress.
 *
 */
export interface Iok8sapiextensionsv1beta1IngressList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1Ingress[]} items Items is the list of
   * Ingress.
   */
  items: Iok8sapiextensionsv1beta1Ingress[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicyPort.
 * DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by
 * networking/v1/NetworkPolicyPort.
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicyPort {
  /**
   * @member {string} [port] If specified, the port on the given protocol.
   * This can either be a numerical or named port on a pod.  If this field is
   * not provided, this matches all port names and numbers. If present, only
   * traffic on the specified protocol AND port will be matched.
   */
  port?: string;
  /**
   * @member {string} [protocol] Optional.  The protocol (TCP or UDP) which
   * traffic must match. If not specified, this field defaults to TCP.
   */
  protocol?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicyPeer.
 * DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by
 * networking/v1/NetworkPolicyPeer.
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicyPeer {
  /**
   * @member {Iok8sapiextensionsv1beta1IPBlock} [ipBlock] IPBlock defines
   * policy on a particular IPBlock. If this field is set then neither of the
   * other fields can be.
   */
  ipBlock?: Iok8sapiextensionsv1beta1IPBlock;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [namespaceSelector]
   * Selects Namespaces using cluster-scoped labels. This field follows
   * standard label selector semantics; if present but empty, it selects all
   * namespaces.
   *
   * If PodSelector is also set, then the NetworkPolicyPeer as a whole selects
   * the Pods matching PodSelector in the Namespaces selected by
   * NamespaceSelector. Otherwise it selects all Pods in the Namespaces
   * selected by NamespaceSelector.
   */
  namespaceSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [podSelector] This
   * is a label selector which selects Pods. This field follows standard label
   * selector semantics; if present but empty, it selects all pods.
   *
   * If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole
   * selects the Pods matching PodSelector in the Namespaces selected by
   * NamespaceSelector. Otherwise it selects the Pods matching PodSelector in
   * the policy's own Namespace.
   */
  podSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicyEgressRule.
 * DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated
 * by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes
 * a particular set of traffic that is allowed out of pods matched by a
 * NetworkPolicySpec's podSelector. The traffic must match both ports and to.
 * This type is beta-level in 1.8
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicyEgressRule {
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyPort[]} [ports] List of
   * destination ports for outgoing traffic. Each item in this list is combined
   * using a logical OR. If this field is empty or missing, this rule matches
   * all ports (traffic not restricted by port). If this field is present and
   * contains at least one item, then this rule allows traffic only if the
   * traffic matches at least one port in the list.
   */
  ports?: Iok8sapiextensionsv1beta1NetworkPolicyPort[];
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyPeer[]} [to] List of
   * destinations for outgoing traffic of pods selected for this rule. Items in
   * this list are combined using a logical OR operation. If this field is
   * empty or missing, this rule matches all destinations (traffic not
   * restricted by destination). If this field is present and contains at least
   * one item, this rule allows traffic only if the traffic matches at least
   * one item in the to list.
   */
  to?: Iok8sapiextensionsv1beta1NetworkPolicyPeer[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicyIngressRule.
 * DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is
 * deprecated by networking/v1/NetworkPolicyIngressRule. This
 * NetworkPolicyIngressRule matches traffic if and only if the traffic matches
 * both ports AND from.
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicyIngressRule {
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyPeer[]} [from] List of
   * sources which should be able to access the pods selected for this rule.
   * Items in this list are combined using a logical OR operation. If this
   * field is empty or missing, this rule matches all sources (traffic not
   * restricted by source). If this field is present and contains at least on
   * item, this rule allows traffic only if the traffic matches at least one
   * item in the from list.
   */
  from?: Iok8sapiextensionsv1beta1NetworkPolicyPeer[];
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyPort[]} [ports] List of
   * ports which should be made accessible on the pods selected for this rule.
   * Each item in this list is combined using a logical OR. If this field is
   * empty or missing, this rule matches all ports (traffic not restricted by
   * port). If this field is present and contains at least one item, then this
   * rule allows traffic only if the traffic matches at least one port in the
   * list.
   */
  ports?: Iok8sapiextensionsv1beta1NetworkPolicyPort[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicySpec.
 * DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by
 * networking/v1/NetworkPolicySpec.
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicySpec {
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyEgressRule[]} [egress] List
   * of egress rules to be applied to the selected pods. Outgoing traffic is
   * allowed if there are no NetworkPolicies selecting the pod (and cluster
   * policy otherwise allows the traffic), OR if the traffic matches at least
   * one egress rule across all of the NetworkPolicy objects whose podSelector
   * matches the pod. If this field is empty then this NetworkPolicy limits all
   * outgoing traffic (and serves solely to ensure that the pods it selects are
   * isolated by default). This field is beta-level in 1.8
   */
  egress?: Iok8sapiextensionsv1beta1NetworkPolicyEgressRule[];
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicyIngressRule[]} [ingress]
   * List of ingress rules to be applied to the selected pods. Traffic is
   * allowed to a pod if there are no NetworkPolicies selecting the pod OR if
   * the traffic source is the pod's local node, OR if the traffic matches at
   * least one ingress rule across all of the NetworkPolicy objects whose
   * podSelector matches the pod. If this field is empty then this
   * NetworkPolicy does not allow any traffic (and serves solely to ensure that
   * the pods it selects are isolated by default).
   */
  ingress?: Iok8sapiextensionsv1beta1NetworkPolicyIngressRule[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} podSelector Selects
   * the pods to which this NetworkPolicy object applies.  The array of ingress
   * rules is applied to any pods selected by this field. Multiple network
   * policies can select the same set of pods.  In this case, the ingress rules
   * for each are combined additively. This field is NOT optional and follows
   * standard label selector semantics. An empty podSelector matches all pods
   * in this namespace.
   */
  podSelector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string[]} [policyTypes] List of rule types that the NetworkPolicy
   * relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this
   * field is not specified, it will default based on the existence of Ingress
   * or Egress rules; policies that contain an Egress section are assumed to
   * affect Egress, and all policies (whether or not they contain an Ingress
   * section) are assumed to affect Ingress. If you want to write an
   * egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
   * Likewise, if you want to write a policy that specifies that no egress is
   * allowed, you must specify a policyTypes value that include "Egress" (since
   * such a policy would not include an Egress section and would otherwise
   * default to just [ "Ingress" ]). This field is beta-level in 1.8
   */
  policyTypes?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicy.
 * DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by
 * networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is
 * allowed for a set of Pods
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicy {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicySpec} [spec] Specification
   * of the desired behavior for this NetworkPolicy.
   */
  spec?: Iok8sapiextensionsv1beta1NetworkPolicySpec;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1NetworkPolicyList.
 * DEPRECATED 1.9 - This group version of NetworkPolicyList is deprecated by
 * networking/v1/NetworkPolicyList. Network Policy List is a list of
 * NetworkPolicy objects.
 *
 */
export interface Iok8sapiextensionsv1beta1NetworkPolicyList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1NetworkPolicy[]} items Items is a list
   * of schema objects.
   */
  items: Iok8sapiextensionsv1beta1NetworkPolicy[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1RunAsUserStrategyOptions.
 * RunAsUserStrategyOptions defines the strategy type and any options used to
 * create the strategy. Deprecated: use RunAsUserStrategyOptions from policy
 * API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1RunAsUserStrategyOptions {
  /**
   * @member {Iok8sapiextensionsv1beta1IDRange[]} [ranges] ranges are the
   * allowed ranges of uids that may be used. If you would like to force a
   * single uid then supply a single range with the same start and end.
   * Required for MustRunAs.
   */
  ranges?: Iok8sapiextensionsv1beta1IDRange[];
  /**
   * @member {string} rule rule is the strategy that will dictate the allowable
   * RunAsUser values that may be set.
   */
  rule: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1SELinuxStrategyOptions.
 * SELinuxStrategyOptions defines the strategy type and any options used to
 * create the strategy. Deprecated: use SELinuxStrategyOptions from policy API
 * Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1SELinuxStrategyOptions {
  /**
   * @member {string} rule rule is the strategy that will dictate the allowable
   * labels that may be set.
   */
  rule: string;
  /**
   * @member {V1SELinuxOptions} [seLinuxOptions] seLinuxOptions
   * required to run as; required for MustRunAs More info:
   * https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   */
  seLinuxOptions?: V1SELinuxOptions;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions.
 * SupplementalGroupsStrategyOptions defines the strategy type and options used
 * to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions
 * from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions {
  /**
   * @member {Iok8sapiextensionsv1beta1IDRange[]} [ranges] ranges are the
   * allowed ranges of supplemental groups.  If you would like to force a
   * single supplemental group then supply a single range with the same start
   * and end. Required for MustRunAs.
   */
  ranges?: Iok8sapiextensionsv1beta1IDRange[];
  /**
   * @member {string} [rule] rule is the strategy that will dictate what
   * supplemental groups is used in the SecurityContext.
   */
  rule?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1PodSecurityPolicySpec.
 * PodSecurityPolicySpec defines the policy enforced. Deprecated: use
 * PodSecurityPolicySpec from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1PodSecurityPolicySpec {
  /**
   * @member {boolean} [allowPrivilegeEscalation] allowPrivilegeEscalation
   * determines if a pod can request to allow privilege escalation. If
   * unspecified, defaults to true.
   */
  allowPrivilegeEscalation?: boolean;
  /**
   * @member {string[]} [allowedCapabilities] allowedCapabilities is a list of
   * capabilities that can be requested to add to the container. Capabilities
   * in this field may be added at the pod author's discretion. You must not
   * list a capability in both allowedCapabilities and
   * requiredDropCapabilities.
   */
  allowedCapabilities?: string[];
  /**
   * @member {Iok8sapiextensionsv1beta1AllowedFlexVolume[]}
   * [allowedFlexVolumes] allowedFlexVolumes is a whitelist of allowed
   * Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.
   * This parameter is effective only when the usage of the Flexvolumes is
   * allowed in the "volumes" field.
   */
  allowedFlexVolumes?: Iok8sapiextensionsv1beta1AllowedFlexVolume[];
  /**
   * @member {Iok8sapiextensionsv1beta1AllowedHostPath[]} [allowedHostPaths]
   * allowedHostPaths is a white list of allowed host paths. Empty indicates
   * that all host paths may be used.
   */
  allowedHostPaths?: Iok8sapiextensionsv1beta1AllowedHostPath[];
  /**
   * @member {string[]} [allowedUnsafeSysctls] allowedUnsafeSysctls is a list
   * of explicitly allowed unsafe sysctls, defaults to none. Each entry is
   * either a plain sysctl name or ends in "*" in which case it is considered
   * as a prefix of allowed sysctls. Single * means all unsafe sysctls are
   * allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to
   * avoid rejection.
   *
   * Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * allows "foo.bar", "foo.baz", etc.
   */
  allowedUnsafeSysctls?: string[];
  /**
   * @member {string[]} [defaultAddCapabilities] defaultAddCapabilities is the
   * default set of capabilities that will be added to the container unless the
   * pod spec specifically drops the capability.  You may not list a capability
   * in both defaultAddCapabilities and requiredDropCapabilities. Capabilities
   * added here are implicitly allowed, and need not be included in the
   * allowedCapabilities list.
   */
  defaultAddCapabilities?: string[];
  /**
   * @member {boolean} [defaultAllowPrivilegeEscalation]
   * defaultAllowPrivilegeEscalation controls the default setting for whether a
   * process can gain more privileges than its parent process.
   */
  defaultAllowPrivilegeEscalation?: boolean;
  /**
   * @member {string[]} [forbiddenSysctls] forbiddenSysctls is a list of
   * explicitly forbidden sysctls, defaults to none. Each entry is either a
   * plain sysctl name or ends in "*" in which case it is considered as a
   * prefix of forbidden sysctls. Single * means all sysctls are forbidden.
   *
   * Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * forbids "foo.bar", "foo.baz", etc.
   */
  forbiddenSysctls?: string[];
  /**
   * @member {Iok8sapiextensionsv1beta1FSGroupStrategyOptions} fsGroup fsGroup
   * is the strategy that will dictate what fs group is used by the
   * SecurityContext.
   */
  fsGroup: Iok8sapiextensionsv1beta1FSGroupStrategyOptions;
  /**
   * @member {boolean} [hostIPC] hostIPC determines if the policy allows the
   * use of HostIPC in the pod spec.
   */
  hostIPC?: boolean;
  /**
   * @member {boolean} [hostNetwork] hostNetwork determines if the policy
   * allows the use of HostNetwork in the pod spec.
   */
  hostNetwork?: boolean;
  /**
   * @member {boolean} [hostPID] hostPID determines if the policy allows the
   * use of HostPID in the pod spec.
   */
  hostPID?: boolean;
  /**
   * @member {Iok8sapiextensionsv1beta1HostPortRange[]} [hostPorts] hostPorts
   * determines which host port ranges are allowed to be exposed.
   */
  hostPorts?: Iok8sapiextensionsv1beta1HostPortRange[];
  /**
   * @member {boolean} [privileged] privileged determines if a pod can request
   * to be run as privileged.
   */
  privileged?: boolean;
  /**
   * @member {boolean} [readOnlyRootFilesystem] readOnlyRootFilesystem when set
   * to true will force containers to run with a read only root file system.
   * If the container specifically requests to run with a non-read only root
   * file system the PSP should deny the pod. If set to false the container may
   * run with a read only root file system if it wishes but it will not be
   * forced to.
   */
  readOnlyRootFilesystem?: boolean;
  /**
   * @member {string[]} [requiredDropCapabilities] requiredDropCapabilities are
   * the capabilities that will be dropped from the container.  These are
   * required to be dropped and cannot be added.
   */
  requiredDropCapabilities?: string[];
  /**
   * @member {Iok8sapiextensionsv1beta1RunAsUserStrategyOptions} runAsUser
   * runAsUser is the strategy that will dictate the allowable RunAsUser values
   * that may be set.
   */
  runAsUser: Iok8sapiextensionsv1beta1RunAsUserStrategyOptions;
  /**
   * @member {Iok8sapiextensionsv1beta1SELinuxStrategyOptions} seLinux seLinux
   * is the strategy that will dictate the allowable labels that may be set.
   */
  seLinux: Iok8sapiextensionsv1beta1SELinuxStrategyOptions;
  /**
   * @member {Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions}
   * supplementalGroups supplementalGroups is the strategy that will dictate
   * what supplemental groups are used by the SecurityContext.
   */
  supplementalGroups: Iok8sapiextensionsv1beta1SupplementalGroupsStrategyOptions;
  /**
   * @member {string[]} [volumes] volumes is a white list of allowed volume
   * plugins. Empty indicates that no volumes may be used. To allow all volumes
   * you may use '*'.
   */
  volumes?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1PodSecurityPolicy.
 * PodSecurityPolicy governs the ability to make requests that affect the
 * Security Context that will be applied to a pod and container. Deprecated:
 * use PodSecurityPolicy from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1PodSecurityPolicy {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1PodSecurityPolicySpec} [spec] spec
   * defines the policy enforced.
   */
  spec?: Iok8sapiextensionsv1beta1PodSecurityPolicySpec;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1PodSecurityPolicyList.
 * PodSecurityPolicyList is a list of PodSecurityPolicy objects. Deprecated:
 * use PodSecurityPolicyList from policy API Group instead.
 *
 */
export interface Iok8sapiextensionsv1beta1PodSecurityPolicyList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1PodSecurityPolicy[]} items items is a
   * list of schema objects.
   */
  items: Iok8sapiextensionsv1beta1PodSecurityPolicy[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ReplicaSetSpec.
 * ReplicaSetSpec is the specification of a ReplicaSet.
 *
 */
export interface Iok8sapiextensionsv1beta1ReplicaSetSpec {
  /**
   * @member {number} [minReadySeconds] Minimum number of seconds for which a
   * newly created pod should be ready without any of its container crashing,
   * for it to be considered available. Defaults to 0 (pod will be considered
   * available as soon as it is ready)
   */
  minReadySeconds?: number;
  /**
   * @member {number} [replicas] Replicas is the number of desired replicas.
   * This is a pointer to distinguish between explicit zero and unspecified.
   * Defaults to 1. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas?: number;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] Selector
   * is a label query over pods that should match the replica count. If the
   * selector is empty, it is defaulted to the labels present on the pod
   * template. Label keys and values that must match in order to be controlled
   * by this replica set. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {V1PodTemplateSpec} [template] Template is the object
   * that describes the pod that will be created if insufficient replicas are
   * detected. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
   */
  template?: V1PodTemplateSpec;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ReplicaSetCondition.
 * ReplicaSetCondition describes the state of a replica set at a certain point.
 *
 */
export interface Iok8sapiextensionsv1beta1ReplicaSetCondition {
  /**
   * @member {Date} [lastTransitionTime] The last time the condition
   * transitioned from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] A human readable message indicating details
   * about the transition.
   */
  message?: string;
  /**
   * @member {string} [reason] The reason for the condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status of the condition, one of True, False,
   * Unknown.
   */
  status: string;
  /**
   * @member {string} type Type of replica set condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ReplicaSetStatus.
 * ReplicaSetStatus represents the current status of a ReplicaSet.
 *
 */
export interface Iok8sapiextensionsv1beta1ReplicaSetStatus {
  /**
   * @member {number} [availableReplicas] The number of available replicas
   * (ready for at least minReadySeconds) for this replica set.
   */
  availableReplicas?: number;
  /**
   * @member {Iok8sapiextensionsv1beta1ReplicaSetCondition[]} [conditions]
   * Represents the latest available observations of a replica set's current
   * state.
   */
  conditions?: Iok8sapiextensionsv1beta1ReplicaSetCondition[];
  /**
   * @member {number} [fullyLabeledReplicas] The number of pods that have
   * labels matching the labels of the pod template of the replicaset.
   */
  fullyLabeledReplicas?: number;
  /**
   * @member {number} [observedGeneration] ObservedGeneration reflects the
   * generation of the most recently observed ReplicaSet.
   */
  observedGeneration?: number;
  /**
   * @member {number} [readyReplicas] The number of ready replicas for this
   * replica set.
   */
  readyReplicas?: number;
  /**
   * @member {number} replicas Replicas is the most recently oberved number of
   * replicas. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
   */
  replicas: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ReplicaSet.
 * DEPRECATED - This group version of ReplicaSet is deprecated by
 * apps/v1beta2/ReplicaSet. See the release notes for more information.
 * ReplicaSet ensures that a specified number of pod replicas are running at
 * any given time.
 *
 */
export interface Iok8sapiextensionsv1beta1ReplicaSet {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] If the
   * Labels of a ReplicaSet are empty, they are defaulted to be the same as the
   * Pod(s) that the ReplicaSet manages. Standard object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1ReplicaSetSpec} [spec] Spec defines the
   * specification of the desired behavior of the ReplicaSet. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  spec?: Iok8sapiextensionsv1beta1ReplicaSetSpec;
  /**
   * @member {Iok8sapiextensionsv1beta1ReplicaSetStatus} [status] Status is the
   * most recently observed status of the ReplicaSet. This data may be out of
   * date by some window of time. Populated by the system. Read-only. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
   */
  status?: Iok8sapiextensionsv1beta1ReplicaSetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ReplicaSetList.
 * ReplicaSetList is a collection of ReplicaSets.
 *
 */
export interface Iok8sapiextensionsv1beta1ReplicaSetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapiextensionsv1beta1ReplicaSet[]} items List of ReplicaSets.
   * More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
   */
  items: Iok8sapiextensionsv1beta1ReplicaSet[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ScaleSpec.
 * describes the attributes of a scale subresource
 *
 */
export interface Iok8sapiextensionsv1beta1ScaleSpec {
  /**
   * @member {number} [replicas] desired number of instances for the scaled
   * object.
   */
  replicas?: number;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1ScaleStatus.
 * represents the current status of a scale subresource.
 *
 */
export interface Iok8sapiextensionsv1beta1ScaleStatus {
  /**
   * @member {number} replicas actual number of observed instances of the
   * scaled object.
   */
  replicas: number;
  /**
   * @member {{ [propertyName: string]: string }} [selector] label query over
   * pods that should match the replicas count. More info:
   * http://kubernetes.io/docs/user-guide/labels#label-selectors
   */
  selector?: { [propertyName: string]: string };
  /**
   * @member {string} [targetSelector] label selector for pods that should
   * match the replicas count. This is a serializated version of both map-based
   * and more expressive set-based selectors. This is done to avoid
   * introspection in the clients. The string will be in the same format as the
   * query-param syntax. If the target type only supports map-based selectors,
   * both this field and map-based selector field are populated. More info:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
   */
  targetSelector?: string;
}

/**
 * @interface
 * An interface representing Iok8sapiextensionsv1beta1Scale.
 * represents a scaling request for a resource.
 *
 */
export interface Iok8sapiextensionsv1beta1Scale {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata; More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapiextensionsv1beta1ScaleSpec} [spec] defines the behavior
   * of the scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   */
  spec?: Iok8sapiextensionsv1beta1ScaleSpec;
  /**
   * @member {Iok8sapiextensionsv1beta1ScaleStatus} [status] current status of
   * the scale. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
   * Read-only.
   */
  status?: Iok8sapiextensionsv1beta1ScaleStatus;
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1IPBlock.
 * IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed
 * to the pods matched by a NetworkPolicySpec's podSelector. The except entry
 * describes CIDRs that should not be included within this rule.
 *
 */
export interface Iok8sapinetworkingv1IPBlock {
  /**
   * @member {string} cidr CIDR is a string representing the IP Block Valid
   * examples are "192.168.1.1/24"
   */
  cidr: string;
  /**
   * @member {string[]} [except] Except is a slice of CIDRs that should not be
   * included within an IP Block Valid examples are "192.168.1.1/24" Except
   * values will be rejected if they are outside the CIDR range
   */
  except?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicyPort.
 * NetworkPolicyPort describes a port to allow traffic on
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicyPort {
  /**
   * @member {string} [port] The port on the given protocol. This can either be
   * a numerical or named port on a pod. If this field is not provided, this
   * matches all port names and numbers.
   */
  port?: string;
  /**
   * @member {string} [protocol] The protocol (TCP or UDP) which traffic must
   * match. If not specified, this field defaults to TCP.
   */
  protocol?: string;
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicyPeer.
 * NetworkPolicyPeer describes a peer to allow traffic from. Only certain
 * combinations of fields are allowed
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicyPeer {
  /**
   * @member {Iok8sapinetworkingv1IPBlock} [ipBlock] IPBlock defines policy on
   * a particular IPBlock. If this field is set then neither of the other
   * fields can be.
   */
  ipBlock?: Iok8sapinetworkingv1IPBlock;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [namespaceSelector]
   * Selects Namespaces using cluster-scoped labels. This field follows
   * standard label selector semantics; if present but empty, it selects all
   * namespaces.
   *
   * If PodSelector is also set, then the NetworkPolicyPeer as a whole selects
   * the Pods matching PodSelector in the Namespaces selected by
   * NamespaceSelector. Otherwise it selects all Pods in the Namespaces
   * selected by NamespaceSelector.
   */
  namespaceSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [podSelector] This
   * is a label selector which selects Pods. This field follows standard label
   * selector semantics; if present but empty, it selects all pods.
   *
   * If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole
   * selects the Pods matching PodSelector in the Namespaces selected by
   * NamespaceSelector. Otherwise it selects the Pods matching PodSelector in
   * the policy's own Namespace.
   */
  podSelector?: Iok8sapimachinerypkgapismetav1LabelSelector;
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicyEgressRule.
 * NetworkPolicyEgressRule describes a particular set of traffic that is
 * allowed out of pods matched by a NetworkPolicySpec's podSelector. The
 * traffic must match both ports and to. This type is beta-level in 1.8
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicyEgressRule {
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyPort[]} [ports] List of
   * destination ports for outgoing traffic. Each item in this list is combined
   * using a logical OR. If this field is empty or missing, this rule matches
   * all ports (traffic not restricted by port). If this field is present and
   * contains at least one item, then this rule allows traffic only if the
   * traffic matches at least one port in the list.
   */
  ports?: Iok8sapinetworkingv1NetworkPolicyPort[];
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyPeer[]} [to] List of
   * destinations for outgoing traffic of pods selected for this rule. Items in
   * this list are combined using a logical OR operation. If this field is
   * empty or missing, this rule matches all destinations (traffic not
   * restricted by destination). If this field is present and contains at least
   * one item, this rule allows traffic only if the traffic matches at least
   * one item in the to list.
   */
  to?: Iok8sapinetworkingv1NetworkPolicyPeer[];
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicyIngressRule.
 * NetworkPolicyIngressRule describes a particular set of traffic that is
 * allowed to the pods matched by a NetworkPolicySpec's podSelector. The
 * traffic must match both ports and from.
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicyIngressRule {
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyPeer[]} [from] List of sources
   * which should be able to access the pods selected for this rule. Items in
   * this list are combined using a logical OR operation. If this field is
   * empty or missing, this rule matches all sources (traffic not restricted by
   * source). If this field is present and contains at least on item, this rule
   * allows traffic only if the traffic matches at least one item in the from
   * list.
   */
  from?: Iok8sapinetworkingv1NetworkPolicyPeer[];
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyPort[]} [ports] List of ports
   * which should be made accessible on the pods selected for this rule. Each
   * item in this list is combined using a logical OR. If this field is empty
   * or missing, this rule matches all ports (traffic not restricted by port).
   * If this field is present and contains at least one item, then this rule
   * allows traffic only if the traffic matches at least one port in the list.
   */
  ports?: Iok8sapinetworkingv1NetworkPolicyPort[];
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicySpec.
 * NetworkPolicySpec provides the specification of a NetworkPolicy
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicySpec {
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyEgressRule[]} [egress] List of
   * egress rules to be applied to the selected pods. Outgoing traffic is
   * allowed if there are no NetworkPolicies selecting the pod (and cluster
   * policy otherwise allows the traffic), OR if the traffic matches at least
   * one egress rule across all of the NetworkPolicy objects whose podSelector
   * matches the pod. If this field is empty then this NetworkPolicy limits all
   * outgoing traffic (and serves solely to ensure that the pods it selects are
   * isolated by default). This field is beta-level in 1.8
   */
  egress?: Iok8sapinetworkingv1NetworkPolicyEgressRule[];
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicyIngressRule[]} [ingress] List of
   * ingress rules to be applied to the selected pods. Traffic is allowed to a
   * pod if there are no NetworkPolicies selecting the pod (and cluster policy
   * otherwise allows the traffic), OR if the traffic source is the pod's local
   * node, OR if the traffic matches at least one ingress rule across all of
   * the NetworkPolicy objects whose podSelector matches the pod. If this field
   * is empty then this NetworkPolicy does not allow any traffic (and serves
   * solely to ensure that the pods it selects are isolated by default)
   */
  ingress?: Iok8sapinetworkingv1NetworkPolicyIngressRule[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} podSelector Selects
   * the pods to which this NetworkPolicy object applies. The array of ingress
   * rules is applied to any pods selected by this field. Multiple network
   * policies can select the same set of pods. In this case, the ingress rules
   * for each are combined additively. This field is NOT optional and follows
   * standard label selector semantics. An empty podSelector matches all pods
   * in this namespace.
   */
  podSelector: Iok8sapimachinerypkgapismetav1LabelSelector;
  /**
   * @member {string[]} [policyTypes] List of rule types that the NetworkPolicy
   * relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this
   * field is not specified, it will default based on the existence of Ingress
   * or Egress rules; policies that contain an Egress section are assumed to
   * affect Egress, and all policies (whether or not they contain an Ingress
   * section) are assumed to affect Ingress. If you want to write an
   * egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
   * Likewise, if you want to write a policy that specifies that no egress is
   * allowed, you must specify a policyTypes value that include "Egress" (since
   * such a policy would not include an Egress section and would otherwise
   * default to just [ "Ingress" ]). This field is beta-level in 1.8
   */
  policyTypes?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicy.
 * NetworkPolicy describes what network traffic is allowed for a set of Pods
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicy {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicySpec} [spec] Specification of
   * the desired behavior for this NetworkPolicy.
   */
  spec?: Iok8sapinetworkingv1NetworkPolicySpec;
}

/**
 * @interface
 * An interface representing Iok8sapinetworkingv1NetworkPolicyList.
 * NetworkPolicyList is a list of NetworkPolicy objects.
 *
 */
export interface Iok8sapinetworkingv1NetworkPolicyList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapinetworkingv1NetworkPolicy[]} items Items is a list of
   * schema objects.
   */
  items: Iok8sapinetworkingv1NetworkPolicy[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1AllowedFlexVolume.
 * AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
 *
 */
export interface Iok8sapipolicyv1beta1AllowedFlexVolume {
  /**
   * @member {string} driver driver is the name of the Flexvolume driver.
   */
  driver: string;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1AllowedHostPath.
 * AllowedHostPath defines the host volume conditions that will be enabled by a
 * policy for pods to use. It requires the path prefix to be defined.
 *
 */
export interface Iok8sapipolicyv1beta1AllowedHostPath {
  /**
   * @member {string} [pathPrefix] pathPrefix is the path prefix that the host
   * volume must match. It does not support `*`. Trailing slashes are trimmed
   * when validating the path prefix with a host path.
   *
   * Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would
   * not allow `/food` or `/etc/foo`
   */
  pathPrefix?: string;
  /**
   * @member {boolean} [readOnly] when set to true, will allow host volumes
   * matching the pathPrefix only if all volume mounts are readOnly.
   */
  readOnly?: boolean;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1Preconditions.
 * Preconditions must be fulfilled before an operation (update, delete, etc.)
 * is carried out.
 *
 */
export interface Iok8sapimachinerypkgapismetav1Preconditions {
  /**
   * @member {string} [uid] Specifies the target UID.
   */
  uid?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1DeleteOptions.
 * DeleteOptions may be provided when deleting an API object.
 *
 */
export interface Iok8sapimachinerypkgapismetav1DeleteOptions {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {Iok8sapimachinerypkgapismetav1Preconditions} [preconditions] Must
   * be fulfilled before a deletion is carried out. If not possible, a 409
   * Conflict status will be returned.
   */
  preconditions?: Iok8sapimachinerypkgapismetav1Preconditions;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1Eviction.
 * Eviction evicts a pod from its node subject to certain policies and safety
 * constraints. This is a subresource of Pod.  A request to cause such an
 * eviction is created by POSTing to .../pods/<pod name>/evictions.
 *
 */
export interface Iok8sapipolicyv1beta1Eviction {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1DeleteOptions} [deleteOptions]
   * DeleteOptions may be provided
   */
  deleteOptions?: Iok8sapimachinerypkgapismetav1DeleteOptions;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] ObjectMeta
   * describes the pod that is being evicted.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1IDRange.
 * IDRange provides a min/max of an allowed range of IDs.
 *
 */
export interface Iok8sapipolicyv1beta1IDRange {
  /**
   * @member {number} max max is the end of the range, inclusive.
   */
  max: number;
  /**
   * @member {number} min min is the start of the range, inclusive.
   */
  min: number;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1FSGroupStrategyOptions.
 * FSGroupStrategyOptions defines the strategy type and options used to create
 * the strategy.
 *
 */
export interface Iok8sapipolicyv1beta1FSGroupStrategyOptions {
  /**
   * @member {Iok8sapipolicyv1beta1IDRange[]} [ranges] ranges are the allowed
   * ranges of fs groups.  If you would like to force a single fs group then
   * supply a single range with the same start and end. Required for MustRunAs.
   */
  ranges?: Iok8sapipolicyv1beta1IDRange[];
  /**
   * @member {string} [rule] rule is the strategy that will dictate what
   * FSGroup is used in the SecurityContext.
   */
  rule?: string;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1HostPortRange.
 * HostPortRange defines a range of host ports that will be enabled by a policy
 * for pods to use.  It requires both the start and end to be defined.
 *
 */
export interface Iok8sapipolicyv1beta1HostPortRange {
  /**
   * @member {number} max max is the end of the range, inclusive.
   */
  max: number;
  /**
   * @member {number} min min is the start of the range, inclusive.
   */
  min: number;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodDisruptionBudgetSpec.
 * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
 *
 */
export interface Iok8sapipolicyv1beta1PodDisruptionBudgetSpec {
  /**
   * @member {string} [maxUnavailable] An eviction is allowed if at most
   * "maxUnavailable" pods selected by "selector" are unavailable after the
   * eviction, i.e. even in absence of the evicted pod. For example, one can
   * prevent all voluntary evictions by specifying 0. This is a mutually
   * exclusive setting with "minAvailable".
   */
  maxUnavailable?: string;
  /**
   * @member {string} [minAvailable] An eviction is allowed if at least
   * "minAvailable" pods selected by "selector" will still be available after
   * the eviction, i.e. even in the absence of the evicted pod.  So for example
   * you can prevent all voluntary evictions by specifying "100%".
   */
  minAvailable?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector} [selector] Label
   * query over pods whose evictions are managed by the disruption budget.
   */
  selector?: Iok8sapimachinerypkgapismetav1LabelSelector;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodDisruptionBudgetStatus.
 * PodDisruptionBudgetStatus represents information about the status of a
 * PodDisruptionBudget. Status may trail the actual state of a system.
 *
 */
export interface Iok8sapipolicyv1beta1PodDisruptionBudgetStatus {
  /**
   * @member {number} currentHealthy current number of healthy pods
   */
  currentHealthy: number;
  /**
   * @member {number} desiredHealthy minimum desired number of healthy pods
   */
  desiredHealthy: number;
  /**
   * @member {{ [propertyName: string]: Date } | { [propertyName: string]:
   * string }} disruptedPods DisruptedPods contains information about pods
   * whose eviction was processed by the API server eviction subresource
   * handler but has not yet been observed by the PodDisruptionBudget
   * controller. A pod will be in this map from the time when the API server
   * processed the eviction request to the time when the pod is seen by PDB
   * controller as having been marked for deletion (or after a timeout). The
   * key in the map is the name of the pod and the value is the time when the
   * API server processed the eviction request. If the deletion didn't occur
   * and a pod is still there it will be removed from the list automatically by
   * PodDisruptionBudget controller after some time. If everything goes smooth
   * this map should be empty for the most of the time. Large number of entries
   * in the map may indicate problems with pod deletions.
   */
  disruptedPods: { [propertyName: string]: Date } | { [propertyName: string]: string };
  /**
   * @member {number} disruptionsAllowed Number of pod disruptions that are
   * currently allowed.
   */
  disruptionsAllowed: number;
  /**
   * @member {number} expectedPods total number of pods counted by this
   * disruption budget
   */
  expectedPods: number;
  /**
   * @member {number} [observedGeneration] Most recent generation observed when
   * updating this PDB status. PodDisruptionsAllowed and other status
   * informatio is valid only if observedGeneration equals to PDB's object
   * generation.
   */
  observedGeneration?: number;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodDisruptionBudget.
 * PodDisruptionBudget is an object to define the max disruption that can be
 * caused to a collection of pods
 *
 */
export interface Iok8sapipolicyv1beta1PodDisruptionBudget {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapipolicyv1beta1PodDisruptionBudgetSpec} [spec]
   * Specification of the desired behavior of the PodDisruptionBudget.
   */
  spec?: Iok8sapipolicyv1beta1PodDisruptionBudgetSpec;
  /**
   * @member {Iok8sapipolicyv1beta1PodDisruptionBudgetStatus} [status] Most
   * recently observed status of the PodDisruptionBudget.
   */
  status?: Iok8sapipolicyv1beta1PodDisruptionBudgetStatus;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodDisruptionBudgetList.
 * PodDisruptionBudgetList is a collection of PodDisruptionBudgets.
 *
 */
export interface Iok8sapipolicyv1beta1PodDisruptionBudgetList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapipolicyv1beta1PodDisruptionBudget[]} items
   */
  items: Iok8sapipolicyv1beta1PodDisruptionBudget[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1RunAsUserStrategyOptions.
 * RunAsUserStrategyOptions defines the strategy type and any options used to
 * create the strategy.
 *
 */
export interface Iok8sapipolicyv1beta1RunAsUserStrategyOptions {
  /**
   * @member {Iok8sapipolicyv1beta1IDRange[]} [ranges] ranges are the allowed
   * ranges of uids that may be used. If you would like to force a single uid
   * then supply a single range with the same start and end. Required for
   * MustRunAs.
   */
  ranges?: Iok8sapipolicyv1beta1IDRange[];
  /**
   * @member {string} rule rule is the strategy that will dictate the allowable
   * RunAsUser values that may be set.
   */
  rule: string;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1SELinuxStrategyOptions.
 * SELinuxStrategyOptions defines the strategy type and any options used to
 * create the strategy.
 *
 */
export interface Iok8sapipolicyv1beta1SELinuxStrategyOptions {
  /**
   * @member {string} rule rule is the strategy that will dictate the allowable
   * labels that may be set.
   */
  rule: string;
  /**
   * @member {V1SELinuxOptions} [seLinuxOptions] seLinuxOptions
   * required to run as; required for MustRunAs More info:
   * https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   */
  seLinuxOptions?: V1SELinuxOptions;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions.
 * SupplementalGroupsStrategyOptions defines the strategy type and options used
 * to create the strategy.
 *
 */
export interface Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions {
  /**
   * @member {Iok8sapipolicyv1beta1IDRange[]} [ranges] ranges are the allowed
   * ranges of supplemental groups.  If you would like to force a single
   * supplemental group then supply a single range with the same start and end.
   * Required for MustRunAs.
   */
  ranges?: Iok8sapipolicyv1beta1IDRange[];
  /**
   * @member {string} [rule] rule is the strategy that will dictate what
   * supplemental groups is used in the SecurityContext.
   */
  rule?: string;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodSecurityPolicySpec.
 * PodSecurityPolicySpec defines the policy enforced.
 *
 */
export interface Iok8sapipolicyv1beta1PodSecurityPolicySpec {
  /**
   * @member {boolean} [allowPrivilegeEscalation] allowPrivilegeEscalation
   * determines if a pod can request to allow privilege escalation. If
   * unspecified, defaults to true.
   */
  allowPrivilegeEscalation?: boolean;
  /**
   * @member {string[]} [allowedCapabilities] allowedCapabilities is a list of
   * capabilities that can be requested to add to the container. Capabilities
   * in this field may be added at the pod author's discretion. You must not
   * list a capability in both allowedCapabilities and
   * requiredDropCapabilities.
   */
  allowedCapabilities?: string[];
  /**
   * @member {Iok8sapipolicyv1beta1AllowedFlexVolume[]} [allowedFlexVolumes]
   * allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil
   * indicates that all Flexvolumes may be used.  This parameter is effective
   * only when the usage of the Flexvolumes is allowed in the "volumes" field.
   */
  allowedFlexVolumes?: Iok8sapipolicyv1beta1AllowedFlexVolume[];
  /**
   * @member {Iok8sapipolicyv1beta1AllowedHostPath[]} [allowedHostPaths]
   * allowedHostPaths is a white list of allowed host paths. Empty indicates
   * that all host paths may be used.
   */
  allowedHostPaths?: Iok8sapipolicyv1beta1AllowedHostPath[];
  /**
   * @member {string[]} [allowedUnsafeSysctls] allowedUnsafeSysctls is a list
   * of explicitly allowed unsafe sysctls, defaults to none. Each entry is
   * either a plain sysctl name or ends in "*" in which case it is considered
   * as a prefix of allowed sysctls. Single * means all unsafe sysctls are
   * allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to
   * avoid rejection.
   *
   * Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * allows "foo.bar", "foo.baz", etc.
   */
  allowedUnsafeSysctls?: string[];
  /**
   * @member {string[]} [defaultAddCapabilities] defaultAddCapabilities is the
   * default set of capabilities that will be added to the container unless the
   * pod spec specifically drops the capability.  You may not list a capability
   * in both defaultAddCapabilities and requiredDropCapabilities. Capabilities
   * added here are implicitly allowed, and need not be included in the
   * allowedCapabilities list.
   */
  defaultAddCapabilities?: string[];
  /**
   * @member {boolean} [defaultAllowPrivilegeEscalation]
   * defaultAllowPrivilegeEscalation controls the default setting for whether a
   * process can gain more privileges than its parent process.
   */
  defaultAllowPrivilegeEscalation?: boolean;
  /**
   * @member {string[]} [forbiddenSysctls] forbiddenSysctls is a list of
   * explicitly forbidden sysctls, defaults to none. Each entry is either a
   * plain sysctl name or ends in "*" in which case it is considered as a
   * prefix of forbidden sysctls. Single * means all sysctls are forbidden.
   *
   * Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*"
   * forbids "foo.bar", "foo.baz", etc.
   */
  forbiddenSysctls?: string[];
  /**
   * @member {Iok8sapipolicyv1beta1FSGroupStrategyOptions} fsGroup fsGroup is
   * the strategy that will dictate what fs group is used by the
   * SecurityContext.
   */
  fsGroup: Iok8sapipolicyv1beta1FSGroupStrategyOptions;
  /**
   * @member {boolean} [hostIPC] hostIPC determines if the policy allows the
   * use of HostIPC in the pod spec.
   */
  hostIPC?: boolean;
  /**
   * @member {boolean} [hostNetwork] hostNetwork determines if the policy
   * allows the use of HostNetwork in the pod spec.
   */
  hostNetwork?: boolean;
  /**
   * @member {boolean} [hostPID] hostPID determines if the policy allows the
   * use of HostPID in the pod spec.
   */
  hostPID?: boolean;
  /**
   * @member {Iok8sapipolicyv1beta1HostPortRange[]} [hostPorts] hostPorts
   * determines which host port ranges are allowed to be exposed.
   */
  hostPorts?: Iok8sapipolicyv1beta1HostPortRange[];
  /**
   * @member {boolean} [privileged] privileged determines if a pod can request
   * to be run as privileged.
   */
  privileged?: boolean;
  /**
   * @member {boolean} [readOnlyRootFilesystem] readOnlyRootFilesystem when set
   * to true will force containers to run with a read only root file system.
   * If the container specifically requests to run with a non-read only root
   * file system the PSP should deny the pod. If set to false the container may
   * run with a read only root file system if it wishes but it will not be
   * forced to.
   */
  readOnlyRootFilesystem?: boolean;
  /**
   * @member {string[]} [requiredDropCapabilities] requiredDropCapabilities are
   * the capabilities that will be dropped from the container.  These are
   * required to be dropped and cannot be added.
   */
  requiredDropCapabilities?: string[];
  /**
   * @member {Iok8sapipolicyv1beta1RunAsUserStrategyOptions} runAsUser
   * runAsUser is the strategy that will dictate the allowable RunAsUser values
   * that may be set.
   */
  runAsUser: Iok8sapipolicyv1beta1RunAsUserStrategyOptions;
  /**
   * @member {Iok8sapipolicyv1beta1SELinuxStrategyOptions} seLinux seLinux is
   * the strategy that will dictate the allowable labels that may be set.
   */
  seLinux: Iok8sapipolicyv1beta1SELinuxStrategyOptions;
  /**
   * @member {Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions}
   * supplementalGroups supplementalGroups is the strategy that will dictate
   * what supplemental groups are used by the SecurityContext.
   */
  supplementalGroups: Iok8sapipolicyv1beta1SupplementalGroupsStrategyOptions;
  /**
   * @member {string[]} [volumes] volumes is a white list of allowed volume
   * plugins. Empty indicates that no volumes may be used. To allow all volumes
   * you may use '*'.
   */
  volumes?: string[];
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodSecurityPolicy.
 * PodSecurityPolicy governs the ability to make requests that affect the
 * Security Context that will be applied to a pod and container.
 *
 */
export interface Iok8sapipolicyv1beta1PodSecurityPolicy {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapipolicyv1beta1PodSecurityPolicySpec} [spec] spec defines
   * the policy enforced.
   */
  spec?: Iok8sapipolicyv1beta1PodSecurityPolicySpec;
}

/**
 * @interface
 * An interface representing Iok8sapipolicyv1beta1PodSecurityPolicyList.
 * PodSecurityPolicyList is a list of PodSecurityPolicy objects.
 *
 */
export interface Iok8sapipolicyv1beta1PodSecurityPolicyList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapipolicyv1beta1PodSecurityPolicy[]} items items is a list
   * of schema objects.
   */
  items: Iok8sapipolicyv1beta1PodSecurityPolicy[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1PolicyRule.
 * PolicyRule holds information that describes a policy rule, but does not
 * contain information about who the rule applies to or which namespace the
 * rule applies to.
 *
 */
export interface Iok8sapirbacv1PolicyRule {
  /**
   * @member {string[]} [apiGroups] APIGroups is the name of the APIGroup that
   * contains the resources.  If multiple API groups are specified, any action
   * requested against one of the enumerated resources in any API group will be
   * allowed.
   */
  apiGroups?: string[];
  /**
   * @member {string[]} [nonResourceURLs] NonResourceURLs is a set of partial
   * urls that a user should have access to.  *s are allowed, but only as the
   * full, final step in the path Since non-resource URLs are not namespaced,
   * this field is only applicable for ClusterRoles referenced from a
   * ClusterRoleBinding. Rules can either apply to API resources (such as
   * "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not
   * both.
   */
  nonResourceURLs?: string[];
  /**
   * @member {string[]} [resourceNames] ResourceNames is an optional white list
   * of names that the rule applies to.  An empty set means that everything is
   * allowed.
   */
  resourceNames?: string[];
  /**
   * @member {string[]} [resources] Resources is a list of resources this rule
   * applies to.  ResourceAll represents all resources.
   */
  resources?: string[];
  /**
   * @member {string[]} verbs Verbs is a list of Verbs that apply to ALL the
   * ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll
   * represents all kinds.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1ClusterRole.
 * ClusterRole is a cluster level, logical grouping of PolicyRules that can be
 * referenced as a unit by a RoleBinding or ClusterRoleBinding.
 *
 */
export interface Iok8sapirbacv1ClusterRole {
  /**
   * @member {Iok8sapirbacv1AggregationRule} [aggregationRule] AggregationRule
   * is an optional field that describes how to build the Rules for this
   * ClusterRole. If AggregationRule is set, then the Rules are controller
   * managed and direct changes to Rules will be stomped by the controller.
   */
  aggregationRule?: Iok8sapirbacv1AggregationRule;
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1PolicyRule[]} rules Rules holds all the PolicyRules
   * for this ClusterRole
   */
  rules: Iok8sapirbacv1PolicyRule[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1RoleRef.
 * RoleRef contains information that points to the role being used
 *
 */
export interface Iok8sapirbacv1RoleRef {
  /**
   * @member {string} apiGroup APIGroup is the group for the resource being
   * referenced
   */
  apiGroup: string;
  /**
   * @member {string} kind Kind is the type of resource being referenced
   */
  kind: string;
  /**
   * @member {string} name Name is the name of resource being referenced
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1Subject.
 * Subject contains a reference to the object or user identities a role binding
 * applies to.  This can either hold a direct API object reference, or a value
 * for non-objects such as user and group names.
 *
 */
export interface Iok8sapirbacv1Subject {
  /**
   * @member {string} [apiGroup] APIGroup holds the API group of the referenced
   * subject. Defaults to "" for ServiceAccount subjects. Defaults to
   * "rbac.authorization.k8s.io" for User and Group subjects.
   */
  apiGroup?: string;
  /**
   * @member {string} kind Kind of object being referenced. Values defined by
   * this API group are "User", "Group", and "ServiceAccount". If the
   * Authorizer does not recognized the kind value, the Authorizer should
   * report an error.
   */
  kind: string;
  /**
   * @member {string} name Name of the object being referenced.
   */
  name: string;
  /**
   * @member {string} [namespace] Namespace of the referenced object.  If the
   * object kind is non-namespace, such as "User" or "Group", and this value is
   * not empty the Authorizer should report an error.
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1ClusterRoleBinding.
 * ClusterRoleBinding references a ClusterRole, but not contain it.  It can
 * reference a ClusterRole in the global namespace, and adds who information
 * via Subject.
 *
 */
export interface Iok8sapirbacv1ClusterRoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1RoleRef} roleRef RoleRef can only reference a
   * ClusterRole in the global namespace. If the RoleRef cannot be resolved,
   * the Authorizer must return an error.
   */
  roleRef: Iok8sapirbacv1RoleRef;
  /**
   * @member {Iok8sapirbacv1Subject[]} [subjects] Subjects holds references to
   * the objects the role applies to.
   */
  subjects?: Iok8sapirbacv1Subject[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1ClusterRoleBindingList.
 * ClusterRoleBindingList is a collection of ClusterRoleBindings
 *
 */
export interface Iok8sapirbacv1ClusterRoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1ClusterRoleBinding[]} items Items is a list of
   * ClusterRoleBindings
   */
  items: Iok8sapirbacv1ClusterRoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1ClusterRoleList.
 * ClusterRoleList is a collection of ClusterRoles
 *
 */
export interface Iok8sapirbacv1ClusterRoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1ClusterRole[]} items Items is a list of
   * ClusterRoles
   */
  items: Iok8sapirbacv1ClusterRole[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1Role.
 * Role is a namespaced, logical grouping of PolicyRules that can be referenced
 * as a unit by a RoleBinding.
 *
 */
export interface Iok8sapirbacv1Role {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1PolicyRule[]} rules Rules holds all the PolicyRules
   * for this Role
   */
  rules: Iok8sapirbacv1PolicyRule[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1RoleBinding.
 * RoleBinding references a role, but does not contain it.  It can reference a
 * Role in the same namespace or a ClusterRole in the global namespace. It adds
 * who information via Subjects and namespace information by which namespace it
 * exists in.  RoleBindings in a given namespace only have effect in that
 * namespace.
 *
 */
export interface Iok8sapirbacv1RoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1RoleRef} roleRef RoleRef can reference a Role in
   * the current namespace or a ClusterRole in the global namespace. If the
   * RoleRef cannot be resolved, the Authorizer must return an error.
   */
  roleRef: Iok8sapirbacv1RoleRef;
  /**
   * @member {Iok8sapirbacv1Subject[]} [subjects] Subjects holds references to
   * the objects the role applies to.
   */
  subjects?: Iok8sapirbacv1Subject[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1RoleBindingList.
 * RoleBindingList is a collection of RoleBindings
 *
 */
export interface Iok8sapirbacv1RoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1RoleBinding[]} items Items is a list of
   * RoleBindings
   */
  items: Iok8sapirbacv1RoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1RoleList.
 * RoleList is a collection of Roles
 *
 */
export interface Iok8sapirbacv1RoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1Role[]} items Items is a list of Roles
   */
  items: Iok8sapirbacv1Role[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1AggregationRule.
 * AggregationRule describes how to locate ClusterRoles to aggregate into the
 * ClusterRole
 *
 */
export interface Iok8sapirbacv1beta1AggregationRule {
  /**
   * @member {Iok8sapimachinerypkgapismetav1LabelSelector[]}
   * [clusterRoleSelectors] ClusterRoleSelectors holds a list of selectors
   * which will be used to find ClusterRoles and create the rules. If any of
   * the selectors match, then the ClusterRole's permissions will be added
   */
  clusterRoleSelectors?: Iok8sapimachinerypkgapismetav1LabelSelector[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1PolicyRule.
 * PolicyRule holds information that describes a policy rule, but does not
 * contain information about who the rule applies to or which namespace the
 * rule applies to.
 *
 */
export interface Iok8sapirbacv1beta1PolicyRule {
  /**
   * @member {string[]} [apiGroups] APIGroups is the name of the APIGroup that
   * contains the resources.  If multiple API groups are specified, any action
   * requested against one of the enumerated resources in any API group will be
   * allowed.
   */
  apiGroups?: string[];
  /**
   * @member {string[]} [nonResourceURLs] NonResourceURLs is a set of partial
   * urls that a user should have access to.  *s are allowed, but only as the
   * full, final step in the path Since non-resource URLs are not namespaced,
   * this field is only applicable for ClusterRoles referenced from a
   * ClusterRoleBinding. Rules can either apply to API resources (such as
   * "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not
   * both.
   */
  nonResourceURLs?: string[];
  /**
   * @member {string[]} [resourceNames] ResourceNames is an optional white list
   * of names that the rule applies to.  An empty set means that everything is
   * allowed.
   */
  resourceNames?: string[];
  /**
   * @member {string[]} [resources] Resources is a list of resources this rule
   * applies to.  '*' represents all resources in the specified apiGroups.
   * '*\/foo' represents the subresource 'foo' for all resources in the
   * specified apiGroups.
   */
  resources?: string[];
  /**
   * @member {string[]} verbs Verbs is a list of Verbs that apply to ALL the
   * ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll
   * represents all kinds.
   */
  verbs: string[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1ClusterRole.
 * ClusterRole is a cluster level, logical grouping of PolicyRules that can be
 * referenced as a unit by a RoleBinding or ClusterRoleBinding.
 *
 */
export interface Iok8sapirbacv1beta1ClusterRole {
  /**
   * @member {Iok8sapirbacv1beta1AggregationRule} [aggregationRule]
   * AggregationRule is an optional field that describes how to build the Rules
   * for this ClusterRole. If AggregationRule is set, then the Rules are
   * controller managed and direct changes to Rules will be stomped by the
   * controller.
   */
  aggregationRule?: Iok8sapirbacv1beta1AggregationRule;
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1beta1PolicyRule[]} rules Rules holds all the
   * PolicyRules for this ClusterRole
   */
  rules: Iok8sapirbacv1beta1PolicyRule[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1RoleRef.
 * RoleRef contains information that points to the role being used
 *
 */
export interface Iok8sapirbacv1beta1RoleRef {
  /**
   * @member {string} apiGroup APIGroup is the group for the resource being
   * referenced
   */
  apiGroup: string;
  /**
   * @member {string} kind Kind is the type of resource being referenced
   */
  kind: string;
  /**
   * @member {string} name Name is the name of resource being referenced
   */
  name: string;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1Subject.
 * Subject contains a reference to the object or user identities a role binding
 * applies to.  This can either hold a direct API object reference, or a value
 * for non-objects such as user and group names.
 *
 */
export interface Iok8sapirbacv1beta1Subject {
  /**
   * @member {string} [apiGroup] APIGroup holds the API group of the referenced
   * subject. Defaults to "" for ServiceAccount subjects. Defaults to
   * "rbac.authorization.k8s.io" for User and Group subjects.
   */
  apiGroup?: string;
  /**
   * @member {string} kind Kind of object being referenced. Values defined by
   * this API group are "User", "Group", and "ServiceAccount". If the
   * Authorizer does not recognized the kind value, the Authorizer should
   * report an error.
   */
  kind: string;
  /**
   * @member {string} name Name of the object being referenced.
   */
  name: string;
  /**
   * @member {string} [namespace] Namespace of the referenced object.  If the
   * object kind is non-namespace, such as "User" or "Group", and this value is
   * not empty the Authorizer should report an error.
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1ClusterRoleBinding.
 * ClusterRoleBinding references a ClusterRole, but not contain it.  It can
 * reference a ClusterRole in the global namespace, and adds who information
 * via Subject.
 *
 */
export interface Iok8sapirbacv1beta1ClusterRoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1beta1RoleRef} roleRef RoleRef can only reference a
   * ClusterRole in the global namespace. If the RoleRef cannot be resolved,
   * the Authorizer must return an error.
   */
  roleRef: Iok8sapirbacv1beta1RoleRef;
  /**
   * @member {Iok8sapirbacv1beta1Subject[]} [subjects] Subjects holds
   * references to the objects the role applies to.
   */
  subjects?: Iok8sapirbacv1beta1Subject[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1ClusterRoleBindingList.
 * ClusterRoleBindingList is a collection of ClusterRoleBindings
 *
 */
export interface Iok8sapirbacv1beta1ClusterRoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1beta1ClusterRoleBinding[]} items Items is a list of
   * ClusterRoleBindings
   */
  items: Iok8sapirbacv1beta1ClusterRoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1ClusterRoleList.
 * ClusterRoleList is a collection of ClusterRoles
 *
 */
export interface Iok8sapirbacv1beta1ClusterRoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1beta1ClusterRole[]} items Items is a list of
   * ClusterRoles
   */
  items: Iok8sapirbacv1beta1ClusterRole[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1Role.
 * Role is a namespaced, logical grouping of PolicyRules that can be referenced
 * as a unit by a RoleBinding.
 *
 */
export interface Iok8sapirbacv1beta1Role {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1beta1PolicyRule[]} rules Rules holds all the
   * PolicyRules for this Role
   */
  rules: Iok8sapirbacv1beta1PolicyRule[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1RoleBinding.
 * RoleBinding references a role, but does not contain it.  It can reference a
 * Role in the same namespace or a ClusterRole in the global namespace. It adds
 * who information via Subjects and namespace information by which namespace it
 * exists in.  RoleBindings in a given namespace only have effect in that
 * namespace.
 *
 */
export interface Iok8sapirbacv1beta1RoleBinding {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapirbacv1beta1RoleRef} roleRef RoleRef can reference a Role
   * in the current namespace or a ClusterRole in the global namespace. If the
   * RoleRef cannot be resolved, the Authorizer must return an error.
   */
  roleRef: Iok8sapirbacv1beta1RoleRef;
  /**
   * @member {Iok8sapirbacv1beta1Subject[]} [subjects] Subjects holds
   * references to the objects the role applies to.
   */
  subjects?: Iok8sapirbacv1beta1Subject[];
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1RoleBindingList.
 * RoleBindingList is a collection of RoleBindings
 *
 */
export interface Iok8sapirbacv1beta1RoleBindingList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1beta1RoleBinding[]} items Items is a list of
   * RoleBindings
   */
  items: Iok8sapirbacv1beta1RoleBinding[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapirbacv1beta1RoleList.
 * RoleList is a collection of Roles
 *
 */
export interface Iok8sapirbacv1beta1RoleList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapirbacv1beta1Role[]} items Items is a list of Roles
   */
  items: Iok8sapirbacv1beta1Role[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard
   * object's metadata.
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapischedulingv1beta1PriorityClass.
 * PriorityClass defines mapping from a priority class name to the priority
 * integer value. The value can be any valid integer.
 *
 */
export interface Iok8sapischedulingv1beta1PriorityClass {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [description] description is an arbitrary string that
   * usually provides guidelines on when this priority class should be used.
   */
  description?: string;
  /**
   * @member {boolean} [globalDefault] globalDefault specifies whether this
   * PriorityClass should be considered as the default priority for pods that
   * do not have any priority class. Only one PriorityClass can be marked as
   * `globalDefault`. However, if more than one PriorityClasses exists with
   * their `globalDefault` field set to true, the smallest value of such global
   * default PriorityClasses will be used as the default priority.
   */
  globalDefault?: boolean;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {number} value The value of this priority class. This is the
   * actual priority that pods receive when they have the name of this class in
   * their pod spec.
   */
  value: number;
}

/**
 * @interface
 * An interface representing Iok8sapischedulingv1beta1PriorityClassList.
 * PriorityClassList is a collection of priority classes.
 *
 */
export interface Iok8sapischedulingv1beta1PriorityClassList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapischedulingv1beta1PriorityClass[]} items items is the list
   * of PriorityClasses
   */
  items: Iok8sapischedulingv1beta1PriorityClass[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1StorageClass.
 * StorageClass describes the parameters for a class of storage for which
 * PersistentVolumes can be dynamically provisioned.
 *
 * StorageClasses are non-namespaced; the name of the storage class according
 * to etcd is in ObjectMeta.Name.
 *
 */
export interface Iok8sapistoragev1StorageClass {
  /**
   * @member {boolean} [allowVolumeExpansion] AllowVolumeExpansion shows
   * whether the storage class allow volume expand
   */
  allowVolumeExpansion?: boolean;
  /**
   * @member {V1TopologySelectorTerm[]} [allowedTopologies]
   * Restrict the node topologies where volumes can be dynamically provisioned.
   * Each volume plugin defines its own supported topology specifications. An
   * empty TopologySelectorTerm list means there is no topology restriction.
   * This field is alpha-level and is only honored by servers that enable the
   * DynamicProvisioningScheduling feature.
   */
  allowedTopologies?: V1TopologySelectorTerm[];
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string[]} [mountOptions] Dynamically provisioned
   * PersistentVolumes of this storage class are created with these
   * mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will
   * simply fail if one is invalid.
   */
  mountOptions?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [parameters] Parameters holds
   * the parameters for the provisioner that should create volumes of this
   * storage class.
   */
  parameters?: { [propertyName: string]: string };
  /**
   * @member {string} provisioner Provisioner indicates the type of the
   * provisioner.
   */
  provisioner: string;
  /**
   * @member {string} [reclaimPolicy] Dynamically provisioned PersistentVolumes
   * of this storage class are created with this reclaimPolicy. Defaults to
   * Delete.
   */
  reclaimPolicy?: string;
  /**
   * @member {string} [volumeBindingMode] VolumeBindingMode indicates how
   * PersistentVolumeClaims should be provisioned and bound.  When unset,
   * VolumeBindingImmediate is used. This field is alpha-level and is only
   * honored by servers that enable the VolumeScheduling feature.
   */
  volumeBindingMode?: string;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1StorageClassList.
 * StorageClassList is a collection of storage classes.
 *
 */
export interface Iok8sapistoragev1StorageClassList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapistoragev1StorageClass[]} items Items is the list of
   * StorageClasses
   */
  items: Iok8sapistoragev1StorageClass[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1StorageClass.
 * StorageClass describes the parameters for a class of storage for which
 * PersistentVolumes can be dynamically provisioned.
 *
 * StorageClasses are non-namespaced; the name of the storage class according
 * to etcd is in ObjectMeta.Name.
 *
 */
export interface Iok8sapistoragev1beta1StorageClass {
  /**
   * @member {boolean} [allowVolumeExpansion] AllowVolumeExpansion shows
   * whether the storage class allow volume expand
   */
  allowVolumeExpansion?: boolean;
  /**
   * @member {V1TopologySelectorTerm[]} [allowedTopologies]
   * Restrict the node topologies where volumes can be dynamically provisioned.
   * Each volume plugin defines its own supported topology specifications. An
   * empty TopologySelectorTerm list means there is no topology restriction.
   * This field is alpha-level and is only honored by servers that enable the
   * DynamicProvisioningScheduling feature.
   */
  allowedTopologies?: V1TopologySelectorTerm[];
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object's metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {string[]} [mountOptions] Dynamically provisioned
   * PersistentVolumes of this storage class are created with these
   * mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will
   * simply fail if one is invalid.
   */
  mountOptions?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [parameters] Parameters holds
   * the parameters for the provisioner that should create volumes of this
   * storage class.
   */
  parameters?: { [propertyName: string]: string };
  /**
   * @member {string} provisioner Provisioner indicates the type of the
   * provisioner.
   */
  provisioner: string;
  /**
   * @member {string} [reclaimPolicy] Dynamically provisioned PersistentVolumes
   * of this storage class are created with this reclaimPolicy. Defaults to
   * Delete.
   */
  reclaimPolicy?: string;
  /**
   * @member {string} [volumeBindingMode] VolumeBindingMode indicates how
   * PersistentVolumeClaims should be provisioned and bound.  When unset,
   * VolumeBindingImmediate is used. This field is alpha-level and is only
   * honored by servers that enable the VolumeScheduling feature.
   */
  volumeBindingMode?: string;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1StorageClassList.
 * StorageClassList is a collection of storage classes.
 *
 */
export interface Iok8sapistoragev1beta1StorageClassList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapistoragev1beta1StorageClass[]} items Items is the list of
   * StorageClasses
   */
  items: Iok8sapistoragev1beta1StorageClass[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeAttachmentSource.
 * VolumeAttachmentSource represents a volume that should be attached. Right
 * now only PersistenVolumes can be attached via external attacher, in future
 * we may allow also inline volumes in pods. Exactly one member can be set.
 *
 */
export interface Iok8sapistoragev1beta1VolumeAttachmentSource {
  /**
   * @member {string} [persistentVolumeName] Name of the persistent volume to
   * attach.
   */
  persistentVolumeName?: string;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeAttachmentSpec.
 * VolumeAttachmentSpec is the specification of a VolumeAttachment request.
 *
 */
export interface Iok8sapistoragev1beta1VolumeAttachmentSpec {
  /**
   * @member {string} attacher Attacher indicates the name of the volume driver
   * that MUST handle this request. This is the name returned by
   * GetPluginName().
   */
  attacher: string;
  /**
   * @member {string} nodeName The node that the volume should be attached to.
   */
  nodeName: string;
  /**
   * @member {Iok8sapistoragev1beta1VolumeAttachmentSource} source Source
   * represents the volume that should be attached.
   */
  source: Iok8sapistoragev1beta1VolumeAttachmentSource;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeError.
 * VolumeError captures an error encountered during a volume operation.
 *
 */
export interface Iok8sapistoragev1beta1VolumeError {
  /**
   * @member {string} [message] String detailing the error encountered during
   * Attach or Detach operation. This string maybe logged, so it should not
   * contain sensitive information.
   */
  message?: string;
  /**
   * @member {Date} [time] Time the error was encountered.
   */
  time?: Date;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeAttachmentStatus.
 * VolumeAttachmentStatus is the status of a VolumeAttachment request.
 *
 */
export interface Iok8sapistoragev1beta1VolumeAttachmentStatus {
  /**
   * @member {Iok8sapistoragev1beta1VolumeError} [attachError] The last error
   * encountered during attach operation, if any. This field must only be set
   * by the entity completing the attach operation, i.e. the external-attacher.
   */
  attachError?: Iok8sapistoragev1beta1VolumeError;
  /**
   * @member {boolean} attached Indicates the volume is successfully attached.
   * This field must only be set by the entity completing the attach operation,
   * i.e. the external-attacher.
   */
  attached: boolean;
  /**
   * @member {{ [propertyName: string]: string }} [attachmentMetadata] Upon
   * successful attach, this field is populated with any information returned
   * by the attach operation that must be passed into subsequent WaitForAttach
   * or Mount calls. This field must only be set by the entity completing the
   * attach operation, i.e. the external-attacher.
   */
  attachmentMetadata?: { [propertyName: string]: string };
  /**
   * @member {Iok8sapistoragev1beta1VolumeError} [detachError] The last error
   * encountered during detach operation, if any. This field must only be set
   * by the entity completing the detach operation, i.e. the external-attacher.
   */
  detachError?: Iok8sapistoragev1beta1VolumeError;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeAttachment.
 * VolumeAttachment captures the intent to attach or detach the specified
 * volume to/from the specified node.
 *
 * VolumeAttachment objects are non-namespaced.
 *
 */
export interface Iok8sapistoragev1beta1VolumeAttachment {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata] Standard
   * object metadata. More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8sapistoragev1beta1VolumeAttachmentSpec} spec Specification of
   * the desired attach/detach volume behavior. Populated by the Kubernetes
   * system.
   */
  spec: Iok8sapistoragev1beta1VolumeAttachmentSpec;
  /**
   * @member {Iok8sapistoragev1beta1VolumeAttachmentStatus} [status] Status of
   * the VolumeAttachment request. Populated by the entity completing the
   * attach or detach operation, i.e. the external-attacher.
   */
  status?: Iok8sapistoragev1beta1VolumeAttachmentStatus;
}

/**
 * @interface
 * An interface representing Iok8sapistoragev1beta1VolumeAttachmentList.
 * VolumeAttachmentList is a collection of VolumeAttachment objects.
 *
 */
export interface Iok8sapistoragev1beta1VolumeAttachmentList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapistoragev1beta1VolumeAttachment[]} items Items is the list
   * of VolumeAttachments
   */
  items: Iok8sapistoragev1beta1VolumeAttachment[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata] Standard list
   * metadata More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery.
 * GroupVersion contains the "group/version" and "version" string of a version.
 * It is made a struct to keep extensibility.
 *
 */
export interface Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery {
  /**
   * @member {string} groupVersion groupVersion specifies the API group and
   * version in the form "group/version"
   */
  groupVersion: string;
  /**
   * @member {string} version version specifies the version in the form of
   * "version". This is to save the clients the trouble of splitting the
   * GroupVersion.
   */
  version: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR.
 * ServerAddressByClientCIDR helps the client to determine the server address
 * that they should use, depending on the clientCIDR that they match.
 *
 */
export interface Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR {
  /**
   * @member {string} clientCIDR The CIDR with which clients can match their IP
   * to figure out the server address that they should use.
   */
  clientCIDR: string;
  /**
   * @member {string} serverAddress Address of this server, suitable for a
   * client that matches the above CIDR. This can be a hostname, hostname:port,
   * IP or IP:port.
   */
  serverAddress: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1APIGroup.
 * APIGroup contains the name, the supported versions, and the preferred
 * version of a group.
 *
 */
export interface Iok8sapimachinerypkgapismetav1APIGroup {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {string} name name is the name of the group.
   */
  name: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery}
   * [preferredVersion] preferredVersion is the version preferred by the API
   * server, which probably is the storage version.
   */
  preferredVersion?: Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR[]}
   * [serverAddressByClientCIDRs] a map of client CIDR to server address that
   * is serving this group. This is to help clients reach servers in the most
   * network-efficient way possible. Clients can use the appropriate server
   * address as per the CIDR that they match. In case of multiple matches,
   * clients should use the longest matching CIDR. The server returns only
   * those CIDRs that it thinks that the client can match. For example: the
   * master will return an internal IP CIDR only, if the client reaches the
   * server using an internal IP. Server looks at X-Forwarded-For header or
   * X-Real-Ip header or request.RemoteAddr (in that order) to get the client
   * IP.
   */
  serverAddressByClientCIDRs?: Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR[];
  /**
   * @member {Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery[]}
   * versions versions are the versions supported in this group.
   */
  versions: Iok8sapimachinerypkgapismetav1GroupVersionForDiscovery[];
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1APIGroupList.
 * APIGroupList is a list of APIGroup, to allow clients to discover the API at
 * /apis.
 *
 */
export interface Iok8sapimachinerypkgapismetav1APIGroupList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1APIGroup[]} groups groups is a list
   * of APIGroup.
   */
  groups: Iok8sapimachinerypkgapismetav1APIGroup[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1APIResource.
 * APIResource specifies the name of a resource and whether it is namespaced.
 *
 */
export interface Iok8sapimachinerypkgapismetav1APIResource {
  /**
   * @member {string[]} [categories] categories is a list of the grouped
   * resources this resource belongs to (e.g. 'all')
   */
  categories?: string[];
  /**
   * @member {string} [group] group is the preferred group of the resource.
   * Empty implies the group of the containing resource list. For subresources,
   * this may have a different value, for example: Scale".
   */
  group?: string;
  /**
   * @member {string} kind kind is the kind for the resource (e.g. 'Foo' is the
   * kind for a resource 'foo')
   */
  kind: string;
  /**
   * @member {string} name name is the plural name of the resource.
   */
  name: string;
  /**
   * @member {boolean} namespaced namespaced indicates if a resource is
   * namespaced or not.
   */
  namespaced: boolean;
  /**
   * @member {string[]} [shortNames] shortNames is a list of suggested short
   * names of the resource.
   */
  shortNames?: string[];
  /**
   * @member {string} singularName singularName is the singular name of the
   * resource.  This allows clients to handle plural and singular opaquely. The
   * singularName is more correct for reporting status on a single item and
   * both singular and plural are allowed from the kubectl CLI interface.
   */
  singularName: string;
  /**
   * @member {string[]} verbs verbs is a list of supported kube verbs (this
   * includes get, list, watch, create, update, patch, delete,
   * deletecollection, and proxy)
   */
  verbs: string[];
  /**
   * @member {string} [version] version is the preferred version of the
   * resource.  Empty implies the version of the containing resource list For
   * subresources, this may have a different value, for example: v1 (while
   * inside a v1beta1 version of the core resource's group)".
   */
  version?: string;
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1APIResourceList.
 * APIResourceList is a list of APIResource, it is used to expose the name of
 * the resources supported in a specific group and version, and if the resource
 * is namespaced.
 *
 */
export interface Iok8sapimachinerypkgapismetav1APIResourceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} groupVersion groupVersion is the group and version this
   * APIResourceList is for.
   */
  groupVersion: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1APIResource[]} resources resources
   * contains the name of the resources and if they are namespaced.
   */
  resources: Iok8sapimachinerypkgapismetav1APIResource[];
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1APIVersions.
 * APIVersions lists the versions that are available, to allow clients to
 * discover the API at /api, which is the root path of the legacy v1 API.
 *
 */
export interface Iok8sapimachinerypkgapismetav1APIVersions {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR[]}
   * serverAddressByClientCIDRs a map of client CIDR to server address that is
   * serving this group. This is to help clients reach servers in the most
   * network-efficient way possible. Clients can use the appropriate server
   * address as per the CIDR that they match. In case of multiple matches,
   * clients should use the longest matching CIDR. The server returns only
   * those CIDRs that it thinks that the client can match. For example: the
   * master will return an internal IP CIDR only, if the client reaches the
   * server using an internal IP. Server looks at X-Forwarded-For header or
   * X-Real-Ip header or request.RemoteAddr (in that order) to get the client
   * IP.
   */
  serverAddressByClientCIDRs: Iok8sapimachinerypkgapismetav1ServerAddressByClientCIDR[];
  /**
   * @member {string[]} versions versions are the api versions that are
   * available.
   */
  versions: string[];
}

/**
 * @interface
 * An interface representing Iok8sapimachinerypkgapismetav1WatchEvent.
 * Event represents a single event to a watched resource.
 *
 */
export interface Iok8sapimachinerypkgapismetav1WatchEvent {
  /**
   * @member {Iok8sapimachinerypkgruntimeRawExtension} object Object is:
   * * If Type is Added or Modified: the new state of the object.
   * * If Type is Deleted: the state of the object immediately before deletion.
   * * If Type is Error: *Status is recommended; other types may make sense
   * depending on context.
   */
  object: Iok8sapimachinerypkgruntimeRawExtension;
  /**
   * @member {string} type
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference.
 * ServiceReference holds a reference to Service.legacy.k8s.io
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference {
  /**
   * @member {string} [name] Name is the name of the service
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace is the namespace of the service
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec.
 * APIServiceSpec contains information for locating and communicating with a
 * server. Only https is supported, though you are able to disable certificate
 * verification.
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec {
  /**
   * @member {Uint8Array} [caBundle] CABundle is a PEM encoded CA bundle which
   * will be used to validate an API server's serving certificate.
   */
  caBundle?: Uint8Array;
  /**
   * @member {string} [group] Group is the API group name this server hosts
   */
  group?: string;
  /**
   * @member {number} groupPriorityMinimum GroupPriorityMininum is the priority
   * this group should have at least. Higher priority means that the group is
   * preferred by clients over lower priority ones. Note that other versions of
   * this group might specify even higher GroupPriorityMininum values such that
   * the whole group gets a higher priority. The primary sort is based on
   * GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The
   * secondary sort is based on the alphabetical comparison of the name of the
   * object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io
   * (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended
   * to be in the 2000s
   */
  groupPriorityMinimum: number;
  /**
   * @member {boolean} [insecureSkipTLSVerify] InsecureSkipTLSVerify disables
   * TLS certificate verification when communicating with this server. This is
   * strongly discouraged.  You should use the CABundle instead.
   */
  insecureSkipTLSVerify?: boolean;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference}
   * service Service is a reference to the service for this API server.  It
   * must communicate on port 443 If the Service is nil, that means the
   * handling for the API groupversion is handled locally on this server. The
   * call will simply delegate to the normal handler chain to be fulfilled.
   */
  service: Iok8skubeAggregatorpkgapisapiregistrationv1ServiceReference;
  /**
   * @member {string} [version] Version is the API version this server hosts.
   * For example, "v1"
   */
  version?: string;
  /**
   * @member {number} versionPriority VersionPriority controls the ordering of
   * this API version inside of its group.  Must be greater than zero. The
   * primary sort is based on VersionPriority, ordered highest to lowest (20
   * before 10). Since it's inside of a group, the number can be small,
   * probably in the 10s. In case of equal version priorities, the version
   * string will be used to compute the order inside a group. If the version
   * string is "kube-like", it will sort above non "kube-like" version strings,
   * which are ordered lexicographically. "Kube-like" versions start with a
   * "v", then are followed by a number (the major version), then optionally
   * the string "alpha" or "beta" and another number (the minor version). These
   * are sorted first by GA > beta > alpha (where GA is a version with no
   * suffix such as beta or alpha), and then by comparing major version, then
   * minor version. An example sorted list of versions: v10, v2, v1, v11beta2,
   * v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
   */
  versionPriority: number;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition.
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human-readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] Unique, one-word, CamelCase reason for the
   * condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status is the status of the condition. Can be
   * True, False, Unknown.
   */
  status: string;
  /**
   * @member {string} type Type is the type of the condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus.
 * APIServiceStatus contains derived information about an API server
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus {
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition[]}
   * [conditions] Current service state of apiService.
   */
  conditions?: Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceCondition[];
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1APIService.
 * APIService represents a server for a particular GroupVersion. Name must be
 * "version.group".
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1APIService {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec} [spec]
   * Spec contains information for locating and communicating with a server
   */
  spec?: Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceSpec;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus}
   * [status] Status contains derived information about an API server
   */
  status?: Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceStatus;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList.
 * APIServiceList is a list of APIService objects.
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1APIService[]} items
   */
  items: Iok8skubeAggregatorpkgapisapiregistrationv1APIService[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference.
 * ServiceReference holds a reference to Service.legacy.k8s.io
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference {
  /**
   * @member {string} [name] Name is the name of the service
   */
  name?: string;
  /**
   * @member {string} [namespace] Namespace is the namespace of the service
   */
  namespace?: string;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec.
 * APIServiceSpec contains information for locating and communicating with a
 * server. Only https is supported, though you are able to disable certificate
 * verification.
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec {
  /**
   * @member {Uint8Array} [caBundle] CABundle is a PEM encoded CA bundle which
   * will be used to validate an API server's serving certificate.
   */
  caBundle?: Uint8Array;
  /**
   * @member {string} [group] Group is the API group name this server hosts
   */
  group?: string;
  /**
   * @member {number} groupPriorityMinimum GroupPriorityMininum is the priority
   * this group should have at least. Higher priority means that the group is
   * preferred by clients over lower priority ones. Note that other versions of
   * this group might specify even higher GroupPriorityMininum values such that
   * the whole group gets a higher priority. The primary sort is based on
   * GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The
   * secondary sort is based on the alphabetical comparison of the name of the
   * object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io
   * (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended
   * to be in the 2000s
   */
  groupPriorityMinimum: number;
  /**
   * @member {boolean} [insecureSkipTLSVerify] InsecureSkipTLSVerify disables
   * TLS certificate verification when communicating with this server. This is
   * strongly discouraged.  You should use the CABundle instead.
   */
  insecureSkipTLSVerify?: boolean;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference}
   * service Service is a reference to the service for this API server.  It
   * must communicate on port 443 If the Service is nil, that means the
   * handling for the API groupversion is handled locally on this server. The
   * call will simply delegate to the normal handler chain to be fulfilled.
   */
  service: Iok8skubeAggregatorpkgapisapiregistrationv1beta1ServiceReference;
  /**
   * @member {string} [version] Version is the API version this server hosts.
   * For example, "v1"
   */
  version?: string;
  /**
   * @member {number} versionPriority VersionPriority controls the ordering of
   * this API version inside of its group.  Must be greater than zero. The
   * primary sort is based on VersionPriority, ordered highest to lowest (20
   * before 10). Since it's inside of a group, the number can be small,
   * probably in the 10s. In case of equal version priorities, the version
   * string will be used to compute the order inside a group. If the version
   * string is "kube-like", it will sort above non "kube-like" version strings,
   * which are ordered lexicographically. "Kube-like" versions start with a
   * "v", then are followed by a number (the major version), then optionally
   * the string "alpha" or "beta" and another number (the minor version). These
   * are sorted first by GA > beta > alpha (where GA is a version with no
   * suffix such as beta or alpha), and then by comparing major version, then
   * minor version. An example sorted list of versions: v10, v2, v1, v11beta2,
   * v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
   */
  versionPriority: number;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition.
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition {
  /**
   * @member {Date} [lastTransitionTime] Last time the condition transitioned
   * from one status to another.
   */
  lastTransitionTime?: Date;
  /**
   * @member {string} [message] Human-readable message indicating details about
   * last transition.
   */
  message?: string;
  /**
   * @member {string} [reason] Unique, one-word, CamelCase reason for the
   * condition's last transition.
   */
  reason?: string;
  /**
   * @member {string} status Status is the status of the condition. Can be
   * True, False, Unknown.
   */
  status: string;
  /**
   * @member {string} type Type is the type of the condition.
   */
  type: string;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus.
 * APIServiceStatus contains derived information about an API server
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus {
  /**
   * @member
   * {Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition[]}
   * [conditions] Current service state of apiService.
   */
  conditions?: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceCondition[];
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService.
 * APIService represents a server for a particular GroupVersion. Name must be
 * "version.group".
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ObjectMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ObjectMeta;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec}
   * [spec] Spec contains information for locating and communicating with a
   * server
   */
  spec?: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceSpec;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus}
   * [status] Status contains derived information about an API server
   */
  status?: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceStatus;
}

/**
 * @interface
 * An interface representing Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList.
 * APIServiceList is a list of APIService objects.
 *
 */
export interface Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList {
  /**
   * @member {string} [apiVersion] APIVersion defines the versioned schema of
   * this representation of an object. Servers should convert recognized
   * schemas to the latest internal value, and may reject unrecognized values.
   * More info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * @member {Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService[]}
   * items
   */
  items: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService[];
  /**
   * @member {string} [kind] Kind is a string value representing the REST
   * resource this object represents. Servers may infer this from the endpoint
   * the client submits requests to. Cannot be updated. In CamelCase. More
   * info:
   * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * @member {Iok8sapimachinerypkgapismetav1ListMeta} [metadata]
   */
  metadata?: Iok8sapimachinerypkgapismetav1ListMeta;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesOptions.
 * @extends ServiceClientOptions
 */
export interface OpenShiftAPIwithKubernetesOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ComponentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ComponentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1ComponentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1ComponentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ConfigMapForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ConfigMapForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1EndpointsForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1EndpointsForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1EventForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1EventForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1LimitRangeForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1LimitRangeForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPersistentVolumeClaimStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodAttachOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodAttachOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [container] The container in which to execute the
   * command. Defaults to only container if there is only one container in the
   * pod.
   */
  container?: string;
  /**
   * @member {boolean} [stderr] Stderr if true indicates that stderr is to be
   * redirected for the attach call. Defaults to true.
   */
  stderr?: boolean;
  /**
   * @member {boolean} [stdin] Stdin if true, redirects the standard input
   * stream of the pod for this call. Defaults to false.
   */
  stdin?: boolean;
  /**
   * @member {boolean} [stdout] Stdout if true indicates that stdout is to be
   * redirected for the attach call. Defaults to true.
   */
  stdout?: boolean;
  /**
   * @member {boolean} [tty] TTY if true indicates that a tty will be allocated
   * for the attach call. This is passed through the container runtime so the
   * tty is allocated on the worker node by the container runtime. Defaults to
   * false.
   */
  tty?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodAttachOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodAttachOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [container] The container in which to execute the
   * command. Defaults to only container if there is only one container in the
   * pod.
   */
  container?: string;
  /**
   * @member {boolean} [stderr] Stderr if true indicates that stderr is to be
   * redirected for the attach call. Defaults to true.
   */
  stderr?: boolean;
  /**
   * @member {boolean} [stdin] Stdin if true, redirects the standard input
   * stream of the pod for this call. Defaults to false.
   */
  stdin?: boolean;
  /**
   * @member {boolean} [stdout] Stdout if true indicates that stdout is to be
   * redirected for the attach call. Defaults to true.
   */
  stdout?: boolean;
  /**
   * @member {boolean} [tty] TTY if true indicates that a tty will be allocated
   * for the attach call. This is passed through the container runtime so the
   * tty is allocated on the worker node by the container runtime. Defaults to
   * false.
   */
  tty?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodEvictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodEvictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodExecOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodExecOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [command] Command is the remote command to execute. argv
   * array. Not executed within a shell.
   */
  command?: string;
  /**
   * @member {string} [container] Container in which to execute the command.
   * Defaults to only container if there is only one container in the pod.
   */
  container?: string;
  /**
   * @member {boolean} [stderr] Redirect the standard error stream of the pod
   * for this call. Defaults to true.
   */
  stderr?: boolean;
  /**
   * @member {boolean} [stdin] Redirect the standard input stream of the pod
   * for this call. Defaults to false.
   */
  stdin?: boolean;
  /**
   * @member {boolean} [stdout] Redirect the standard output stream of the pod
   * for this call. Defaults to true.
   */
  stdout?: boolean;
  /**
   * @member {boolean} [tty] TTY if true indicates that a tty will be allocated
   * for the exec call. Defaults to false.
   */
  tty?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodExecOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodExecOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [command] Command is the remote command to execute. argv
   * array. Not executed within a shell.
   */
  command?: string;
  /**
   * @member {string} [container] Container in which to execute the command.
   * Defaults to only container if there is only one container in the pod.
   */
  container?: string;
  /**
   * @member {boolean} [stderr] Redirect the standard error stream of the pod
   * for this call. Defaults to true.
   */
  stderr?: boolean;
  /**
   * @member {boolean} [stdin] Redirect the standard input stream of the pod
   * for this call. Defaults to false.
   */
  stdin?: boolean;
  /**
   * @member {boolean} [stdout] Redirect the standard output stream of the pod
   * for this call. Defaults to true.
   */
  stdout?: boolean;
  /**
   * @member {boolean} [tty] TTY if true indicates that a tty will be allocated
   * for the exec call. Defaults to false.
   */
  tty?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodLogOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodLogOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [container] The container for which to stream logs.
   * Defaults to only container if there is one container in the pod.
   */
  container?: string;
  /**
   * @member {boolean} [follow] Follow the log stream of the pod. Defaults to
   * false.
   */
  follow?: boolean;
  /**
   * @member {number} [limitBytes] If set, the number of bytes to read from the
   * server before terminating the log output. This may not display a complete
   * final line of logging, and may return slightly more or slightly less than
   * the specified limit.
   */
  limitBytes?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {boolean} [previous] Return previous terminated container logs.
   * Defaults to false.
   */
  previous?: boolean;
  /**
   * @member {number} [sinceSeconds] A relative time in seconds before the
   * current time from which to show logs. If this value precedes the time a
   * pod was started, only logs since the pod start will be returned. If this
   * value is in the future, no logs will be returned. Only one of sinceSeconds
   * or sinceTime may be specified.
   */
  sinceSeconds?: number;
  /**
   * @member {number} [tailLines] If set, the number of lines from the end of
   * the logs to show. If not specified, logs are shown from the creation of
   * the container or sinceSeconds or sinceTime
   */
  tailLines?: number;
  /**
   * @member {boolean} [timestamps] If true, add an RFC3339 or RFC3339Nano
   * timestamp at the beginning of every line of log output. Defaults to false.
   */
  timestamps?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodPortforwardOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodPortforwardOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [ports] List of ports to forward Required when using
   * WebSockets
   */
  ports?: number;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodPortforwardOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodPortforwardOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [ports] List of ports to forward Required when using
   * WebSockets
   */
  ports?: number;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PutNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PutNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1DeleteNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1DeleteNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1HeadNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1HeadNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PatchNamespacedPodProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PatchNamespacedPodProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedReplicationControllerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedReplicationControllerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedReplicationControllerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PutNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PutNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1DeleteNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1DeleteNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1HeadNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1HeadNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PatchNamespacedServiceProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PatchNamespacedServiceProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the part of URLs that include service
   * endpoints, suffixes, and parameters to use for the current proxy request
   * to service. For example, the whole request URL is
   * http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.
   * Path is _search?q=user:kimchy.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespacedServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespacedServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespacedServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceFinalizeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceFinalizeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NamespaceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NamespaceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NamespaceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NamespaceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NamespaceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionNodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1GetNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1GetNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PutNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PutNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PostNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PostNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1DeleteNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1DeleteNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1HeadNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1HeadNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectCoreV1PatchNodeProxyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectCoreV1PatchNodeProxyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to node.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1NodeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1NodeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1NodeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1NodeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1NodeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1NodeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1PersistentVolumeClaimForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1PersistentVolumeClaimForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1CollectionPersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1CollectionPersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCoreV1PersistentVolumeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCoreV1PersistentVolumeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCoreV1PersistentVolumeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCoreV1PersistentVolumeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCoreV1PersistentVolumeStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCoreV1PersistentVolumeStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1PodForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1PodForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1PodTemplateForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1PodTemplateForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ReplicationControllerForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ReplicationControllerForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ResourceQuotaForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ResourceQuotaForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1SecretForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1SecretForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ServiceAccountForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ServiceAccountForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCoreV1ServiceForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCoreV1ServiceForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1ConfigMapListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1ConfigMapListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1EndpointsListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1EndpointsListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1EventListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1EventListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1LimitRangeListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1LimitRangeListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespaceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespaceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedConfigMapListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedConfigMapListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedConfigMapOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedConfigMapOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEndpointsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEndpointsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEndpointsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEndpointsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEventListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEventListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedLimitRangeListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedLimitRangeListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedLimitRangeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedLimitRangeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPersistentVolumeClaimListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPersistentVolumeClaimListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPersistentVolumeClaimOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPersistentVolumeClaimOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodTemplateListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodTemplateListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedPodTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedReplicationControllerListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedReplicationControllerListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedReplicationControllerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedReplicationControllerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedResourceQuotaListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedResourceQuotaListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedSecretListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedSecretListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedSecretOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedSecretOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceAccountListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceAccountListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceAccountOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespacedServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NodeListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NodeListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1NodeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1NodeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeClaimListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeClaimListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1PersistentVolumeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1PodListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1PodListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1PodTemplateListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1PodTemplateListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1ReplicationControllerListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1ReplicationControllerListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1ResourceQuotaListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1ResourceQuotaListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1SecretListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1SecretListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1ServiceAccountListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1ServiceAccountListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCoreV1ServiceListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCoreV1ServiceListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1MutatingWebhookConfigurationListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1MutatingWebhookConfigurationListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1MutatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteApiregistrationV1CollectionAPIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteApiregistrationV1CollectionAPIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadApiregistrationV1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadApiregistrationV1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceApiregistrationV1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceApiregistrationV1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchApiregistrationV1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchApiregistrationV1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchApiregistrationV1APIServiceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchApiregistrationV1APIServiceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchApiregistrationV1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchApiregistrationV1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteApiregistrationV1beta1CollectionAPIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteApiregistrationV1beta1CollectionAPIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadApiregistrationV1beta1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadApiregistrationV1beta1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceApiregistrationV1beta1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceApiregistrationV1beta1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchApiregistrationV1beta1APIServiceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchApiregistrationV1beta1APIServiceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchApiregistrationV1beta1APIServiceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchApiregistrationV1beta1APIServiceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchApiregistrationV1beta1APIServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchApiregistrationV1beta1APIServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsOpenshiftIoV1DeploymentConfigForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsOpenshiftIoV1DeploymentConfigForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigLogOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigLogOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [container] The container for which to stream logs.
   * Defaults to only container if there is one container in the pod.
   */
  container?: string;
  /**
   * @member {boolean} [follow] Follow if true indicates that the build log
   * should be streamed until the build terminates.
   */
  follow?: boolean;
  /**
   * @member {number} [limitBytes] If set, the number of bytes to read from the
   * server before terminating the log output. This may not display a complete
   * final line of logging, and may return slightly more or slightly less than
   * the specified limit.
   */
  limitBytes?: number;
  /**
   * @member {boolean} [nowait] NoWait if true causes the call to return
   * immediately even if the deployment is not available yet. Otherwise the
   * server will wait until the deployment has started.
   */
  nowait?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {boolean} [previous] Return previous deployment logs. Defaults to
   * false.
   */
  previous?: boolean;
  /**
   * @member {number} [sinceSeconds] A relative time in seconds before the
   * current time from which to show logs. If this value precedes the time a
   * pod was started, only logs since the pod start will be returned. If this
   * value is in the future, no logs will be returned. Only one of sinceSeconds
   * or sinceTime may be specified.
   */
  sinceSeconds?: number;
  /**
   * @member {number} [tailLines] If set, the number of lines from the end of
   * the logs to show. If not specified, logs are shown from the creation of
   * the container or sinceSeconds or sinceTime
   */
  tailLines?: number;
  /**
   * @member {boolean} [timestamps] If true, add an RFC3339 or RFC3339Nano
   * timestamp at the beginning of every line of log output. Defaults to false.
   */
  timestamps?: boolean;
  /**
   * @member {number} [version] Version of the deployment for which to view
   * logs.
   */
  version?: number;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigRollbackOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsOpenshiftIoV1NamespacedDeploymentConfigRollbackOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsOpenshiftIoV1NamespacedDeploymentConfigStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1DeploymentConfigListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1DeploymentConfigListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1NamespacedDeploymentConfigListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1NamespacedDeploymentConfigListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsOpenshiftIoV1NamespacedDeploymentConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1ControllerRevisionForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1ControllerRevisionForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1DaemonSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1DaemonSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1DeploymentForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1DeploymentForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1CollectionNamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1ReplicaSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1ReplicaSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1StatefulSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1StatefulSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1ControllerRevisionListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1ControllerRevisionListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1DaemonSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1DaemonSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1DeploymentListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1DeploymentListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedControllerRevisionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedControllerRevisionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDaemonSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDaemonSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDeploymentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDeploymentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedReplicaSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedReplicaSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedStatefulSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedStatefulSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1ReplicaSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1ReplicaSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1StatefulSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1StatefulSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1ControllerRevisionForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1ControllerRevisionForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1DeploymentForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1DeploymentForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedDeploymentRollbackOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedDeploymentRollbackOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1CollectionNamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta1NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta1StatefulSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta1StatefulSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1ControllerRevisionListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1ControllerRevisionListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1DeploymentListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1DeploymentListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedControllerRevisionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedControllerRevisionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedDeploymentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedDeploymentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedStatefulSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedStatefulSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta1StatefulSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta1StatefulSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2ControllerRevisionForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2ControllerRevisionForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2DaemonSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2DaemonSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2DeploymentForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2DeploymentForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2CollectionNamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAppsV1beta2NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAppsV1beta2NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAppsV1beta2NamespacedStatefulSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2ReplicaSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2ReplicaSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAppsV1beta2StatefulSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAppsV1beta2StatefulSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2ControllerRevisionListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2ControllerRevisionListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2DaemonSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2DaemonSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2DeploymentListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2DeploymentListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedControllerRevisionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedControllerRevisionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedControllerRevisionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedControllerRevisionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDaemonSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDaemonSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDeploymentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDeploymentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedReplicaSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedReplicaSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedStatefulSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedStatefulSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedStatefulSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2NamespacedStatefulSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2ReplicaSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2ReplicaSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAppsV1beta2StatefulSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAppsV1beta2StatefulSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthenticationV1TokenReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthenticationV1TokenReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthenticationV1beta1TokenReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthenticationV1beta1TokenReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1SelfSubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1SelfSubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1SelfSubjectRulesReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1SelfSubjectRulesReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1SubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1SubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1NamespacedLocalSubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1NamespacedLocalSubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SelfSubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SelfSubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SelfSubjectRulesReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SelfSubjectRulesReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationV1beta1SubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAuthorizationOpenshiftIoV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedSubjectRulesReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1NamespacedSubjectRulesReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ResourceAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1ResourceAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleBindingForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleBindingForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAuthorizationOpenshiftIoV1RoleForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1SubjectAccessReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAuthorizationOpenshiftIoV1SubjectAccessReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV1NamespacedHorizontalPodAutoscalerListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV1NamespacedHorizontalPodAutoscalerListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBatchV1JobForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBatchV1JobForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBatchV1CollectionNamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBatchV1CollectionNamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBatchV1NamespacedJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBatchV1NamespacedJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBatchV1NamespacedJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBatchV1NamespacedJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBatchV1NamespacedJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBatchV1NamespacedJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1JobListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1JobListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1NamespacedJobListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1NamespacedJobListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1NamespacedJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1NamespacedJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBatchV1beta1CronJobForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBatchV1beta1CronJobForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBatchV1beta1CollectionNamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBatchV1beta1CollectionNamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBatchV1beta1NamespacedCronJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBatchV1beta1NamespacedCronJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBatchV1beta1NamespacedCronJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBatchV1beta1NamespacedCronJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBatchV1beta1NamespacedCronJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBatchV1beta1NamespacedCronJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1beta1CronJobListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1beta1CronJobListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1beta1NamespacedCronJobListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1beta1NamespacedCronJobListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBatchV1beta1NamespacedCronJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBatchV1beta1NamespacedCronJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1BuildConfigForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1BuildConfigForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1BuildForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1BuildForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1CollectionNamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1CollectionNamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildConfigInstantiateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildConfigInstantiateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectBuildOpenshiftIoV1PostNamespacedBuildConfigInstantiatebinaryOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectBuildOpenshiftIoV1PostNamespacedBuildConfigInstantiatebinaryOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [asFile] asFile determines if the binary should be
   * created as a file within the source rather than extracted as an archive
   */
  asFile?: string;
  /**
   * @member {string} [revisionauthorEmail] revision.authorEmail of the source
   * control user
   */
  revisionauthorEmail?: string;
  /**
   * @member {string} [revisionauthorName] revision.authorName of the source
   * control user
   */
  revisionauthorName?: string;
  /**
   * @member {string} [revisioncommit] revision.commit is the value identifying
   * a specific commit
   */
  revisioncommit?: string;
  /**
   * @member {string} [revisioncommitterEmail] revision.committerEmail of the
   * source control user
   */
  revisioncommitterEmail?: string;
  /**
   * @member {string} [revisioncommitterName] revision.committerName of the
   * source control user
   */
  revisioncommitterName?: string;
  /**
   * @member {string} [revisionmessage] revision.message is the description of
   * a specific commit
   */
  revisionmessage?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesConnectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesConnectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [path] Path is the URL path to use for the current proxy
   * request to pod.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1CollectionNamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1CollectionNamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildCloneOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateBuildOpenshiftIoV1NamespacedBuildCloneOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildDetailsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceBuildOpenshiftIoV1NamespacedBuildDetailsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildLogOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadBuildOpenshiftIoV1NamespacedBuildLogOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [container] cointainer for which to stream logs. Defaults
   * to only container if there is one container in the pod.
   */
  container?: string;
  /**
   * @member {boolean} [follow] follow if true indicates that the build log
   * should be streamed until the build terminates.
   */
  follow?: boolean;
  /**
   * @member {number} [limitBytes] limitBytes, If set, is the number of bytes
   * to read from the server before terminating the log output. This may not
   * display a complete final line of logging, and may return slightly more or
   * slightly less than the specified limit.
   */
  limitBytes?: number;
  /**
   * @member {boolean} [nowait] noWait if true causes the call to return
   * immediately even if the build is not available yet. Otherwise the server
   * will wait until the build has started.
   */
  nowait?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {boolean} [previous] previous returns previous build logs.
   * Defaults to false.
   */
  previous?: boolean;
  /**
   * @member {number} [sinceSeconds] sinceSeconds is a relative time in seconds
   * before the current time from which to show logs. If this value precedes
   * the time a pod was started, only logs since the pod start will be
   * returned. If this value is in the future, no logs will be returned. Only
   * one of sinceSeconds or sinceTime may be specified.
   */
  sinceSeconds?: number;
  /**
   * @member {number} [tailLines] tailLines, If set, is the number of lines
   * from the end of the logs to show. If not specified, logs are shown from
   * the creation of the container or sinceSeconds or sinceTime
   */
  tailLines?: number;
  /**
   * @member {boolean} [timestamps] timestamps, If true, add an RFC3339 or
   * RFC3339Nano timestamp at the beginning of every line of log output.
   * Defaults to false.
   */
  timestamps?: boolean;
  /**
   * @member {number} [version] version of the build for which to view logs.
   */
  version?: number;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1BuildConfigListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1BuildConfigListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1BuildListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1BuildListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildConfigListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildConfigListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildConfigOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchBuildOpenshiftIoV1NamespacedBuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCertificatesV1beta1CollectionCertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCertificatesV1beta1CollectionCertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestApprovalOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestApprovalOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadCertificatesV1beta1CertificateSigningRequestStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadCertificatesV1beta1CertificateSigningRequestStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceCertificatesV1beta1CertificateSigningRequestStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchCertificatesV1beta1CertificateSigningRequestStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchCertificatesV1beta1CertificateSigningRequestStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCertificatesV1beta1CertificateSigningRequestListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCertificatesV1beta1CertificateSigningRequestListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchCertificatesV1beta1CertificateSigningRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchCertificatesV1beta1CertificateSigningRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListEventsV1beta1EventForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListEventsV1beta1EventForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteEventsV1beta1CollectionNamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteEventsV1beta1CollectionNamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchEventsV1beta1EventListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchEventsV1beta1EventListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchEventsV1beta1NamespacedEventListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchEventsV1beta1NamespacedEventListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchEventsV1beta1NamespacedEventOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchEventsV1beta1NamespacedEventOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1DaemonSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1DaemonSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1DeploymentForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1DeploymentForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1IngressForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1IngressForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDaemonSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDeploymentRollbackOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedDeploymentRollbackOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedDeploymentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedIngressStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedIngressStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedIngressStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedIngressStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedIngressStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedIngressStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionNamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicaSetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1NamespacedReplicationControllerDummyScaleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1NetworkPolicyForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1NetworkPolicyForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionPodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1CollectionPodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListExtensionsV1beta1ReplicaSetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListExtensionsV1beta1ReplicaSetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1DaemonSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1DaemonSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1DeploymentListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1DeploymentListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1IngressListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1IngressListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDaemonSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDaemonSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDaemonSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDaemonSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDeploymentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDeploymentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDeploymentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedDeploymentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedIngressListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedIngressListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedIngressOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedIngressOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedNetworkPolicyListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedNetworkPolicyListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedReplicaSetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedReplicaSetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedReplicaSetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NamespacedReplicaSetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NetworkPolicyListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1NetworkPolicyListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1PodSecurityPolicyListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1PodSecurityPolicyListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchExtensionsV1beta1ReplicaSetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchExtensionsV1beta1ReplicaSetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1CollectionImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1CollectionImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1ImageSignatureOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1ImageSignatureOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1ImageSignatureOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1ImageSignatureOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageStreamForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageStreamForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageStreamTagForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListImageOpenshiftIoV1ImageStreamTagForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamImportOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamImportOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1CollectionNamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1CollectionNamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamLayersOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamLayersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamSecretsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamSecretsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchImageOpenshiftIoV1NamespacedImageStreamTagOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageStreamListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1ImageStreamListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1NamespacedImageStreamListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1NamespacedImageStreamListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1NamespacedImageStreamOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchImageOpenshiftIoV1NamespacedImageStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1EgressNetworkPolicyForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1EgressNetworkPolicyForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionHostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionHostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionNamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionNamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionNetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1CollectionNetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1ClusterNetworkListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1ClusterNetworkListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1ClusterNetworkOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1ClusterNetworkOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1EgressNetworkPolicyListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1EgressNetworkPolicyListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1HostSubnetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1HostSubnetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1HostSubnetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1HostSubnetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NetNamespaceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NetNamespaceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NetNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkOpenshiftIoV1NetNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkingV1CollectionNamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkingV1CollectionNamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListNetworkingV1NetworkPolicyForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListNetworkingV1NetworkPolicyForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkingV1NamespacedNetworkPolicyListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkingV1NamespacedNetworkPolicyListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkingV1NamespacedNetworkPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkingV1NamespacedNetworkPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchNetworkingV1NetworkPolicyListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchNetworkingV1NetworkPolicyListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1CollectionOAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAccessTokenListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAccessTokenListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAccessTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAccessTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAuthorizeTokenListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAuthorizeTokenListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthAuthorizeTokenOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientAuthorizationListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientAuthorizationListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientAuthorizationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchOauthOpenshiftIoV1OAuthClientOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreatePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreatePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplacePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplacePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeletePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeletePolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadPolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadPolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplacePolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplacePolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListPolicyV1beta1PodDisruptionBudgetForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListPolicyV1beta1PodDisruptionBudgetForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListPolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListPolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreatePolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreatePolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeletePolicyV1beta1CollectionPodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeletePolicyV1beta1CollectionPodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadPolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadPolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplacePolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplacePolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeletePolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeletePolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchPolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchPolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchPolicyV1beta1NamespacedPodDisruptionBudgetListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchPolicyV1beta1NamespacedPodDisruptionBudgetListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchPolicyV1beta1NamespacedPodDisruptionBudgetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodDisruptionBudgetListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodDisruptionBudgetListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodSecurityPolicyListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodSecurityPolicyListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodSecurityPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchPolicyV1beta1PodSecurityPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListProjectOpenshiftIoV1ProjectRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListProjectOpenshiftIoV1ProjectRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateProjectOpenshiftIoV1ProjectRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateProjectOpenshiftIoV1ProjectRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchProjectOpenshiftIoV1ProjectListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchProjectOpenshiftIoV1ProjectListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchProjectOpenshiftIoV1ProjectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchProjectOpenshiftIoV1ProjectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteQuotaOpenshiftIoV1CollectionClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteQuotaOpenshiftIoV1CollectionClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchQuotaOpenshiftIoV1ClusterResourceQuotaStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchQuotaOpenshiftIoV1ClusterResourceQuotaListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchQuotaOpenshiftIoV1ClusterResourceQuotaListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchQuotaOpenshiftIoV1ClusterResourceQuotaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionNamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionNamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionNamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1CollectionNamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1RoleBindingForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1RoleBindingForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1RoleForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1RoleForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleBindingListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleBindingListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleBindingListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleBindingListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1RoleBindingListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1RoleBindingListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1RoleListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1RoleListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionNamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionNamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionNamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1CollectionNamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1RoleBindingForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1RoleBindingForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1RoleForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRbacAuthorizationV1beta1RoleForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleBindingListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleBindingListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1ClusterRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleBindingListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleBindingListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleBindingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1NamespacedRoleOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1RoleBindingListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1RoleBindingListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1RoleListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRbacAuthorizationV1beta1RoleListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRouteOpenshiftIoV1CollectionNamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRouteOpenshiftIoV1CollectionNamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchRouteOpenshiftIoV1NamespacedRouteStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListRouteOpenshiftIoV1RouteForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListRouteOpenshiftIoV1RouteForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1NamespacedRouteListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1NamespacedRouteListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1NamespacedRouteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1NamespacedRouteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1RouteListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchRouteOpenshiftIoV1RouteListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSchedulingV1beta1CollectionPriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSchedulingV1beta1CollectionPriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSchedulingV1beta1PriorityClassListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSchedulingV1beta1PriorityClassListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSchedulingV1beta1PriorityClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSchedulingV1beta1PriorityClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicyReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicyReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySelfSubjectReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySelfSubjectReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySubjectReviewOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySubjectReviewOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1CollectionRangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1CollectionRangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1CollectionSecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1CollectionSecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1RangeAllocationListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1RangeAllocationListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1RangeAllocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1RangeAllocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1SecurityContextConstraintsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1SecurityContextConstraintsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchSecurityOpenshiftIoV1SecurityContextConstraintsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1CollectionStorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1CollectionStorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1StorageClassListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1StorageClassListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1beta1CollectionStorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1beta1CollectionStorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1beta1CollectionVolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1beta1CollectionVolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1beta1StorageClassListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1beta1StorageClassListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1beta1StorageClassOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1beta1StorageClassOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1beta1VolumeAttachmentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1beta1VolumeAttachmentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchStorageV1beta1VolumeAttachmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchStorageV1beta1VolumeAttachmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateNamespacedProcessedTemplateV1OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateNamespacedProcessedTemplateV1OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1TemplateInstanceForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1TemplateInstanceForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1TemplateForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListTemplateOpenshiftIoV1TemplateForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1BrokerTemplateInstanceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1BrokerTemplateInstanceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1BrokerTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateInstanceListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateInstanceListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1NamespacedTemplateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1TemplateListForAllNamespacesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchTemplateOpenshiftIoV1TemplateListForAllNamespacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionIdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionIdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1UserIdentityMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1UserIdentityMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1UserIdentityMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1UserIdentityMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1UserIdentityMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1UserIdentityMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1UserIdentityMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1UserIdentityMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1UserIdentityMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1UserIdentityMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesListUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesListUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesCreateUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionUserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1CollectionUserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReadUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [exact] Should the export be exact.  Exact export
   * maintains cluster-specific fields like 'Namespace'.
   */
  exact?: boolean;
  /**
   * @member {boolean} [exportParameter] Should this value be exported.  Export
   * strips fields that a user can not specify.
   */
  exportParameter?: boolean;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesReplaceUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesDeleteUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [gracePeriodSeconds] The duration in seconds before the
   * object should be deleted. Value must be non-negative integer. The value
   * zero indicates delete immediately. If this value is nil, the default grace
   * period for the specified type will be used. Defaults to a per object value
   * if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * @member {boolean} [orphanDependents] Deprecated: please use the
   * PropagationPolicy, this field will be deprecated in 1.7. Should the
   * dependent objects be orphaned. If true/false, the "orphan" finalizer will
   * be added to/removed from the object's finalizers list. Either this field
   * or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * @member {string} [propagationPolicy] Whether and how garbage collection
   * will be performed. Either this field or OrphanDependents may be set, but
   * not both. The default policy is decided by the existing finalizer set in
   * the metadata.finalizers and the resource-specific default policy.
   * Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
   * allow the garbage collector to delete the dependents in the background;
   * 'Foreground' - a cascading policy that deletes all dependents in the
   * foreground.
   */
  propagationPolicy?: string;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesPatchUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1GroupListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1GroupListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1GroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1GroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1IdentityListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1IdentityListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1IdentityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1IdentityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1UserListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1UserListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * @interface
 * An interface representing OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1UserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenShiftAPIwithKubernetesWatchUserOpenshiftIoV1UserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continueParameter] The continue option should be set
   * when retrieving more results from the server. Since this value is server
   * defined, clients may only use the continue value from a previous query
   * result with identical query parameters (except for the value of continue)
   * and the server may reject a continue value it does not recognize. If the
   * specified continue value is no longer valid whether due to expiration
   * (generally five to fifteen minutes) or a configuration change on the
   * server the server will respond with a 410 ResourceExpired error indicating
   * the client must restart their list without the continue field. This field
   * is not supported when watch is true. Clients may start a watch from the
   * last resourceVersion value returned by the server and not miss any
   * modifications.
   */
  continueParameter?: string;
  /**
   * @member {string} [fieldSelector] A selector to restrict the list of
   * returned objects by their fields. Defaults to everything.
   */
  fieldSelector?: string;
  /**
   * @member {boolean} [includeUninitialized] If true, partially initialized
   * resources are included in the response.
   */
  includeUninitialized?: boolean;
  /**
   * @member {string} [labelSelector] A selector to restrict the list of
   * returned objects by their labels. Defaults to everything.
   */
  labelSelector?: string;
  /**
   * @member {number} [limit] limit is a maximum number of responses to return
   * for a list call. If more items exist, the server will set the `continue`
   * field on the list metadata to a value that can be used with the same
   * initial query to retrieve the next set of results. Setting a limit may
   * return fewer than the requested amount of items (up to zero items) in the
   * event all requested objects are filtered out and clients should only use
   * the presence of the continue field to determine whether more results are
   * available. Servers may choose not to support the limit argument and will
   * return all of the available results. If limit is specified and the
   * continue field is empty, clients may assume that no more results are
   * available. This field is not supported if watch is true.
   *
   * The server guarantees that the objects returned when using continue will
   * be identical to issuing a single list call without a limit - that is, no
   * objects created, modified, or deleted after the first request is issued
   * will be included in any subsequent continued requests. This is sometimes
   * referred to as a consistent snapshot, and ensures that a client that is
   * using limit to receive smaller chunks of a very large result can ensure
   * they see all possible objects. If objects are updated during a chunked
   * list the version of the object that was present at the time the first list
   * result was calculated is returned.
   */
  limit?: number;
  /**
   * @member {string} [pretty] If 'true', then the output is pretty printed.
   */
  pretty?: string;
  /**
   * @member {string} [resourceVersion] When specified with a watch call, shows
   * changes that occur after that particular version of a resource. Defaults
   * to changes from the beginning of history. When specified for list: - if
   * unset, then the result is returned from remote storage based on
   * quorum-read flag; - if it's 0, then we simply return what we currently
   * have in cache, no guarantee; - if set to non zero, then the result is at
   * least as fresh as given rv.
   */
  resourceVersion?: string;
  /**
   * @member {number} [timeoutSeconds] Timeout for the list/watch call. This
   * limits the duration of the call, regardless of any activity or inactivity.
   */
  timeoutSeconds?: number;
  /**
   * @member {boolean} [watch] Watch for changes to the described resources and
   * return them as a stream of add, update, and remove notifications. Specify
   * resourceVersion.
   */
  watch?: boolean;
}

/**
 * Contains response data for the getCoreLegacyAPIVersions operation.
 */
export type GetCoreLegacyAPIVersionsResponse = Iok8sapimachinerypkgapismetav1APIVersions & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIVersions;
    };
};

/**
 * Contains response data for the getCoreV1APIResources operation.
 */
export type GetCoreV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listCoreV1ComponentStatus operation.
 */
export type ListCoreV1ComponentStatusResponse = V1ComponentStatusList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ComponentStatusList;
    };
};

/**
 * Contains response data for the readCoreV1ComponentStatus operation.
 */
export type ReadCoreV1ComponentStatusResponse = V1ComponentStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ComponentStatus;
    };
};

/**
 * Contains response data for the listCoreV1ConfigMapForAllNamespaces operation.
 */
export type ListCoreV1ConfigMapForAllNamespacesResponse = V1ConfigMapList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMapList;
    };
};

/**
 * Contains response data for the listCoreV1EndpointsForAllNamespaces operation.
 */
export type ListCoreV1EndpointsForAllNamespacesResponse = V1EndpointsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1EndpointsList;
    };
};

/**
 * Contains response data for the listCoreV1EventForAllNamespaces operation.
 */
export type ListCoreV1EventForAllNamespacesResponse = V1EventList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1EventList;
    };
};

/**
 * Contains response data for the listCoreV1LimitRangeForAllNamespaces operation.
 */
export type ListCoreV1LimitRangeForAllNamespacesResponse = V1LimitRangeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRangeList;
    };
};

/**
 * Contains response data for the listCoreV1Namespace operation.
 */
export type ListCoreV1NamespaceResponse = V1NamespaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1NamespaceList;
    };
};

/**
 * Contains response data for the createCoreV1Namespace operation.
 */
export type CreateCoreV1NamespaceResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedBinding operation.
 */
export type CreateCoreV1NamespacedBindingResponse = V1Binding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Binding;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedConfigMap operation.
 */
export type ListCoreV1NamespacedConfigMapResponse = V1ConfigMapList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMapList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedConfigMap operation.
 */
export type CreateCoreV1NamespacedConfigMapResponse = V1ConfigMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMap;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedConfigMap operation.
 */
export type DeleteCoreV1CollectionNamespacedConfigMapResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedConfigMap operation.
 */
export type ReadCoreV1NamespacedConfigMapResponse = V1ConfigMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMap;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedConfigMap operation.
 */
export type ReplaceCoreV1NamespacedConfigMapResponse = V1ConfigMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMap;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedConfigMap operation.
 */
export type DeleteCoreV1NamespacedConfigMapResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedConfigMap operation.
 */
export type PatchCoreV1NamespacedConfigMapResponse = V1ConfigMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ConfigMap;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedEndpoints operation.
 */
export type ListCoreV1NamespacedEndpointsResponse = V1EndpointsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1EndpointsList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedEndpoints operation.
 */
export type CreateCoreV1NamespacedEndpointsResponse = V1Endpoints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Endpoints;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedEndpoints operation.
 */
export type DeleteCoreV1CollectionNamespacedEndpointsResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedEndpoints operation.
 */
export type ReadCoreV1NamespacedEndpointsResponse = V1Endpoints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Endpoints;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedEndpoints operation.
 */
export type ReplaceCoreV1NamespacedEndpointsResponse = V1Endpoints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Endpoints;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedEndpoints operation.
 */
export type DeleteCoreV1NamespacedEndpointsResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedEndpoints operation.
 */
export type PatchCoreV1NamespacedEndpointsResponse = V1Endpoints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Endpoints;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedEvent operation.
 */
export type ListCoreV1NamespacedEventResponse = V1EventList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1EventList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedEvent operation.
 */
export type CreateCoreV1NamespacedEventResponse = V1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Event;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedEvent operation.
 */
export type DeleteCoreV1CollectionNamespacedEventResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedEvent operation.
 */
export type ReadCoreV1NamespacedEventResponse = V1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Event;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedEvent operation.
 */
export type ReplaceCoreV1NamespacedEventResponse = V1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Event;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedEvent operation.
 */
export type DeleteCoreV1NamespacedEventResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedEvent operation.
 */
export type PatchCoreV1NamespacedEventResponse = V1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Event;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedLimitRange operation.
 */
export type ListCoreV1NamespacedLimitRangeResponse = V1LimitRangeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRangeList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedLimitRange operation.
 */
export type CreateCoreV1NamespacedLimitRangeResponse = V1LimitRange & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRange;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedLimitRange operation.
 */
export type DeleteCoreV1CollectionNamespacedLimitRangeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedLimitRange operation.
 */
export type ReadCoreV1NamespacedLimitRangeResponse = V1LimitRange & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRange;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedLimitRange operation.
 */
export type ReplaceCoreV1NamespacedLimitRangeResponse = V1LimitRange & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRange;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedLimitRange operation.
 */
export type DeleteCoreV1NamespacedLimitRangeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedLimitRange operation.
 */
export type PatchCoreV1NamespacedLimitRangeResponse = V1LimitRange & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1LimitRange;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type ListCoreV1NamespacedPersistentVolumeClaimResponse = V1PersistentVolumeClaimList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaimList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type CreateCoreV1NamespacedPersistentVolumeClaimResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedPersistentVolumeClaim operation.
 */
export type DeleteCoreV1CollectionNamespacedPersistentVolumeClaimResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type ReadCoreV1NamespacedPersistentVolumeClaimResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type ReplaceCoreV1NamespacedPersistentVolumeClaimResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type DeleteCoreV1NamespacedPersistentVolumeClaimResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type PatchCoreV1NamespacedPersistentVolumeClaimResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPersistentVolumeClaimStatus operation.
 */
export type ReadCoreV1NamespacedPersistentVolumeClaimStatusResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedPersistentVolumeClaimStatus operation.
 */
export type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedPersistentVolumeClaimStatus operation.
 */
export type PatchCoreV1NamespacedPersistentVolumeClaimStatusResponse = V1PersistentVolumeClaim & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaim;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedPod operation.
 */
export type ListCoreV1NamespacedPodResponse = V1PodList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedPod operation.
 */
export type CreateCoreV1NamespacedPodResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedPod operation.
 */
export type DeleteCoreV1CollectionNamespacedPodResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPod operation.
 */
export type ReadCoreV1NamespacedPodResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedPod operation.
 */
export type ReplaceCoreV1NamespacedPodResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedPod operation.
 */
export type DeleteCoreV1NamespacedPodResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedPod operation.
 */
export type PatchCoreV1NamespacedPodResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedPodAttach operation.
 */
export type ConnectCoreV1GetNamespacedPodAttachResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedPodAttach operation.
 */
export type ConnectCoreV1PostNamespacedPodAttachResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedPodBinding operation.
 */
export type CreateCoreV1NamespacedPodBindingResponse = V1Binding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Binding;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedPodEviction operation.
 */
export type CreateCoreV1NamespacedPodEvictionResponse = Iok8sapipolicyv1beta1Eviction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1Eviction;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedPodExec operation.
 */
export type ConnectCoreV1GetNamespacedPodExecResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedPodExec operation.
 */
export type ConnectCoreV1PostNamespacedPodExecResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPodLog operation.
 */
export type ReadCoreV1NamespacedPodLogResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedPodPortforward operation.
 */
export type ConnectCoreV1GetNamespacedPodPortforwardResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedPodPortforward operation.
 */
export type ConnectCoreV1PostNamespacedPodPortforwardResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedPodProxy operation.
 */
export type ConnectCoreV1GetNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNamespacedPodProxy operation.
 */
export type ConnectCoreV1PutNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedPodProxy operation.
 */
export type ConnectCoreV1PostNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNamespacedPodProxy operation.
 */
export type ConnectCoreV1DeleteNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNamespacedPodProxy operation.
 */
export type ConnectCoreV1HeadNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNamespacedPodProxy operation.
 */
export type ConnectCoreV1PatchNamespacedPodProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1GetNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1PutNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1PostNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1DeleteNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1HeadNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNamespacedPodProxyWithPath operation.
 */
export type ConnectCoreV1PatchNamespacedPodProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPodStatus operation.
 */
export type ReadCoreV1NamespacedPodStatusResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedPodStatus operation.
 */
export type ReplaceCoreV1NamespacedPodStatusResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedPodStatus operation.
 */
export type PatchCoreV1NamespacedPodStatusResponse = V1Pod & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Pod;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedPodTemplate operation.
 */
export type ListCoreV1NamespacedPodTemplateResponse = V1PodTemplateList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplateList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedPodTemplate operation.
 */
export type CreateCoreV1NamespacedPodTemplateResponse = V1PodTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplate;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedPodTemplate operation.
 */
export type DeleteCoreV1CollectionNamespacedPodTemplateResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedPodTemplate operation.
 */
export type ReadCoreV1NamespacedPodTemplateResponse = V1PodTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplate;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedPodTemplate operation.
 */
export type ReplaceCoreV1NamespacedPodTemplateResponse = V1PodTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplate;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedPodTemplate operation.
 */
export type DeleteCoreV1NamespacedPodTemplateResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedPodTemplate operation.
 */
export type PatchCoreV1NamespacedPodTemplateResponse = V1PodTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplate;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedReplicationController operation.
 */
export type ListCoreV1NamespacedReplicationControllerResponse = V1ReplicationControllerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationControllerList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedReplicationController operation.
 */
export type CreateCoreV1NamespacedReplicationControllerResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedReplicationController operation.
 */
export type DeleteCoreV1CollectionNamespacedReplicationControllerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedReplicationController operation.
 */
export type ReadCoreV1NamespacedReplicationControllerResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedReplicationController operation.
 */
export type ReplaceCoreV1NamespacedReplicationControllerResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedReplicationController operation.
 */
export type DeleteCoreV1NamespacedReplicationControllerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedReplicationController operation.
 */
export type PatchCoreV1NamespacedReplicationControllerResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedReplicationControllerScale operation.
 */
export type ReadCoreV1NamespacedReplicationControllerScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedReplicationControllerScale operation.
 */
export type ReplaceCoreV1NamespacedReplicationControllerScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedReplicationControllerScale operation.
 */
export type PatchCoreV1NamespacedReplicationControllerScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedReplicationControllerStatus operation.
 */
export type ReadCoreV1NamespacedReplicationControllerStatusResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedReplicationControllerStatus operation.
 */
export type ReplaceCoreV1NamespacedReplicationControllerStatusResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedReplicationControllerStatus operation.
 */
export type PatchCoreV1NamespacedReplicationControllerStatusResponse = V1ReplicationController & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationController;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedResourceQuota operation.
 */
export type ListCoreV1NamespacedResourceQuotaResponse = V1ResourceQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuotaList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedResourceQuota operation.
 */
export type CreateCoreV1NamespacedResourceQuotaResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedResourceQuota operation.
 */
export type DeleteCoreV1CollectionNamespacedResourceQuotaResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedResourceQuota operation.
 */
export type ReadCoreV1NamespacedResourceQuotaResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedResourceQuota operation.
 */
export type ReplaceCoreV1NamespacedResourceQuotaResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedResourceQuota operation.
 */
export type DeleteCoreV1NamespacedResourceQuotaResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedResourceQuota operation.
 */
export type PatchCoreV1NamespacedResourceQuotaResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedResourceQuotaStatus operation.
 */
export type ReadCoreV1NamespacedResourceQuotaStatusResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedResourceQuotaStatus operation.
 */
export type ReplaceCoreV1NamespacedResourceQuotaStatusResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedResourceQuotaStatus operation.
 */
export type PatchCoreV1NamespacedResourceQuotaStatusResponse = V1ResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuota;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedSecret operation.
 */
export type ListCoreV1NamespacedSecretResponse = V1SecretList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1SecretList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedSecret operation.
 */
export type CreateCoreV1NamespacedSecretResponse = V1Secret & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Secret;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedSecret operation.
 */
export type DeleteCoreV1CollectionNamespacedSecretResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedSecret operation.
 */
export type ReadCoreV1NamespacedSecretResponse = V1Secret & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Secret;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedSecret operation.
 */
export type ReplaceCoreV1NamespacedSecretResponse = V1Secret & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Secret;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedSecret operation.
 */
export type DeleteCoreV1NamespacedSecretResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedSecret operation.
 */
export type PatchCoreV1NamespacedSecretResponse = V1Secret & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Secret;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedServiceAccount operation.
 */
export type ListCoreV1NamespacedServiceAccountResponse = V1ServiceAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccountList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedServiceAccount operation.
 */
export type CreateCoreV1NamespacedServiceAccountResponse = V1ServiceAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccount;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNamespacedServiceAccount operation.
 */
export type DeleteCoreV1CollectionNamespacedServiceAccountResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedServiceAccount operation.
 */
export type ReadCoreV1NamespacedServiceAccountResponse = V1ServiceAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccount;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedServiceAccount operation.
 */
export type ReplaceCoreV1NamespacedServiceAccountResponse = V1ServiceAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccount;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedServiceAccount operation.
 */
export type DeleteCoreV1NamespacedServiceAccountResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedServiceAccount operation.
 */
export type PatchCoreV1NamespacedServiceAccountResponse = V1ServiceAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccount;
    };
};

/**
 * Contains response data for the listCoreV1NamespacedService operation.
 */
export type ListCoreV1NamespacedServiceResponse = V1ServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceList;
    };
};

/**
 * Contains response data for the createCoreV1NamespacedService operation.
 */
export type CreateCoreV1NamespacedServiceResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedService operation.
 */
export type ReadCoreV1NamespacedServiceResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedService operation.
 */
export type ReplaceCoreV1NamespacedServiceResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the deleteCoreV1NamespacedService operation.
 */
export type DeleteCoreV1NamespacedServiceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedService operation.
 */
export type PatchCoreV1NamespacedServiceResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedServiceProxy operation.
 */
export type ConnectCoreV1GetNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNamespacedServiceProxy operation.
 */
export type ConnectCoreV1PutNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedServiceProxy operation.
 */
export type ConnectCoreV1PostNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNamespacedServiceProxy operation.
 */
export type ConnectCoreV1DeleteNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNamespacedServiceProxy operation.
 */
export type ConnectCoreV1HeadNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNamespacedServiceProxy operation.
 */
export type ConnectCoreV1PatchNamespacedServiceProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1GetNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1GetNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1PutNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1PostNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1DeleteNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1HeadNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNamespacedServiceProxyWithPath operation.
 */
export type ConnectCoreV1PatchNamespacedServiceProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the readCoreV1NamespacedServiceStatus operation.
 */
export type ReadCoreV1NamespacedServiceStatusResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespacedServiceStatus operation.
 */
export type ReplaceCoreV1NamespacedServiceStatusResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the patchCoreV1NamespacedServiceStatus operation.
 */
export type PatchCoreV1NamespacedServiceStatusResponse = V1Service & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Service;
    };
};

/**
 * Contains response data for the readCoreV1Namespace operation.
 */
export type ReadCoreV1NamespaceResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the replaceCoreV1Namespace operation.
 */
export type ReplaceCoreV1NamespaceResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the deleteCoreV1Namespace operation.
 */
export type DeleteCoreV1NamespaceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1Namespace operation.
 */
export type PatchCoreV1NamespaceResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespaceFinalize operation.
 */
export type ReplaceCoreV1NamespaceFinalizeResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the readCoreV1NamespaceStatus operation.
 */
export type ReadCoreV1NamespaceStatusResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the replaceCoreV1NamespaceStatus operation.
 */
export type ReplaceCoreV1NamespaceStatusResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the patchCoreV1NamespaceStatus operation.
 */
export type PatchCoreV1NamespaceStatusResponse = V1Namespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Namespace;
    };
};

/**
 * Contains response data for the listCoreV1Node operation.
 */
export type ListCoreV1NodeResponse = V1NodeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1NodeList;
    };
};

/**
 * Contains response data for the createCoreV1Node operation.
 */
export type CreateCoreV1NodeResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionNode operation.
 */
export type DeleteCoreV1CollectionNodeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1Node operation.
 */
export type ReadCoreV1NodeResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the replaceCoreV1Node operation.
 */
export type ReplaceCoreV1NodeResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the deleteCoreV1Node operation.
 */
export type DeleteCoreV1NodeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1Node operation.
 */
export type PatchCoreV1NodeResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the connectCoreV1GetNodeProxy operation.
 */
export type ConnectCoreV1GetNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNodeProxy operation.
 */
export type ConnectCoreV1PutNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNodeProxy operation.
 */
export type ConnectCoreV1PostNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNodeProxy operation.
 */
export type ConnectCoreV1DeleteNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNodeProxy operation.
 */
export type ConnectCoreV1HeadNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNodeProxy operation.
 */
export type ConnectCoreV1PatchNodeProxyResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1GetNodeProxyWithPath operation.
 */
export type ConnectCoreV1GetNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PutNodeProxyWithPath operation.
 */
export type ConnectCoreV1PutNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PostNodeProxyWithPath operation.
 */
export type ConnectCoreV1PostNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1DeleteNodeProxyWithPath operation.
 */
export type ConnectCoreV1DeleteNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1HeadNodeProxyWithPath operation.
 */
export type ConnectCoreV1HeadNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the connectCoreV1PatchNodeProxyWithPath operation.
 */
export type ConnectCoreV1PatchNodeProxyWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the readCoreV1NodeStatus operation.
 */
export type ReadCoreV1NodeStatusResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the replaceCoreV1NodeStatus operation.
 */
export type ReplaceCoreV1NodeStatusResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the patchCoreV1NodeStatus operation.
 */
export type PatchCoreV1NodeStatusResponse = V1Node & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1Node;
    };
};

/**
 * Contains response data for the listCoreV1PersistentVolumeClaimForAllNamespaces operation.
 */
export type ListCoreV1PersistentVolumeClaimForAllNamespacesResponse = V1PersistentVolumeClaimList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeClaimList;
    };
};

/**
 * Contains response data for the listCoreV1PersistentVolume operation.
 */
export type ListCoreV1PersistentVolumeResponse = V1PersistentVolumeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolumeList;
    };
};

/**
 * Contains response data for the createCoreV1PersistentVolume operation.
 */
export type CreateCoreV1PersistentVolumeResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the deleteCoreV1CollectionPersistentVolume operation.
 */
export type DeleteCoreV1CollectionPersistentVolumeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCoreV1PersistentVolume operation.
 */
export type ReadCoreV1PersistentVolumeResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the replaceCoreV1PersistentVolume operation.
 */
export type ReplaceCoreV1PersistentVolumeResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the deleteCoreV1PersistentVolume operation.
 */
export type DeleteCoreV1PersistentVolumeResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCoreV1PersistentVolume operation.
 */
export type PatchCoreV1PersistentVolumeResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the readCoreV1PersistentVolumeStatus operation.
 */
export type ReadCoreV1PersistentVolumeStatusResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the replaceCoreV1PersistentVolumeStatus operation.
 */
export type ReplaceCoreV1PersistentVolumeStatusResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the patchCoreV1PersistentVolumeStatus operation.
 */
export type PatchCoreV1PersistentVolumeStatusResponse = V1PersistentVolume & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PersistentVolume;
    };
};

/**
 * Contains response data for the listCoreV1PodForAllNamespaces operation.
 */
export type ListCoreV1PodForAllNamespacesResponse = V1PodList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodList;
    };
};

/**
 * Contains response data for the listCoreV1PodTemplateForAllNamespaces operation.
 */
export type ListCoreV1PodTemplateForAllNamespacesResponse = V1PodTemplateList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1PodTemplateList;
    };
};

/**
 * Contains response data for the listCoreV1ReplicationControllerForAllNamespaces operation.
 */
export type ListCoreV1ReplicationControllerForAllNamespacesResponse = V1ReplicationControllerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ReplicationControllerList;
    };
};

/**
 * Contains response data for the listCoreV1ResourceQuotaForAllNamespaces operation.
 */
export type ListCoreV1ResourceQuotaForAllNamespacesResponse = V1ResourceQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ResourceQuotaList;
    };
};

/**
 * Contains response data for the listCoreV1SecretForAllNamespaces operation.
 */
export type ListCoreV1SecretForAllNamespacesResponse = V1SecretList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1SecretList;
    };
};

/**
 * Contains response data for the listCoreV1ServiceAccountForAllNamespaces operation.
 */
export type ListCoreV1ServiceAccountForAllNamespacesResponse = V1ServiceAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceAccountList;
    };
};

/**
 * Contains response data for the listCoreV1ServiceForAllNamespaces operation.
 */
export type ListCoreV1ServiceForAllNamespacesResponse = V1ServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1ServiceList;
    };
};

/**
 * Contains response data for the watchCoreV1ConfigMapListForAllNamespaces operation.
 */
export type WatchCoreV1ConfigMapListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1EndpointsListForAllNamespaces operation.
 */
export type WatchCoreV1EndpointsListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1EventListForAllNamespaces operation.
 */
export type WatchCoreV1EventListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1LimitRangeListForAllNamespaces operation.
 */
export type WatchCoreV1LimitRangeListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespaceList operation.
 */
export type WatchCoreV1NamespaceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedConfigMapList operation.
 */
export type WatchCoreV1NamespacedConfigMapListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedConfigMap operation.
 */
export type WatchCoreV1NamespacedConfigMapResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedEndpointsList operation.
 */
export type WatchCoreV1NamespacedEndpointsListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedEndpoints operation.
 */
export type WatchCoreV1NamespacedEndpointsResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedEventList operation.
 */
export type WatchCoreV1NamespacedEventListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedEvent operation.
 */
export type WatchCoreV1NamespacedEventResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedLimitRangeList operation.
 */
export type WatchCoreV1NamespacedLimitRangeListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedLimitRange operation.
 */
export type WatchCoreV1NamespacedLimitRangeResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPersistentVolumeClaimList operation.
 */
export type WatchCoreV1NamespacedPersistentVolumeClaimListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPersistentVolumeClaim operation.
 */
export type WatchCoreV1NamespacedPersistentVolumeClaimResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPodList operation.
 */
export type WatchCoreV1NamespacedPodListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPod operation.
 */
export type WatchCoreV1NamespacedPodResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPodTemplateList operation.
 */
export type WatchCoreV1NamespacedPodTemplateListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedPodTemplate operation.
 */
export type WatchCoreV1NamespacedPodTemplateResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedReplicationControllerList operation.
 */
export type WatchCoreV1NamespacedReplicationControllerListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedReplicationController operation.
 */
export type WatchCoreV1NamespacedReplicationControllerResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedResourceQuotaList operation.
 */
export type WatchCoreV1NamespacedResourceQuotaListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedResourceQuota operation.
 */
export type WatchCoreV1NamespacedResourceQuotaResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedSecretList operation.
 */
export type WatchCoreV1NamespacedSecretListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedSecret operation.
 */
export type WatchCoreV1NamespacedSecretResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedServiceAccountList operation.
 */
export type WatchCoreV1NamespacedServiceAccountListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedServiceAccount operation.
 */
export type WatchCoreV1NamespacedServiceAccountResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedServiceList operation.
 */
export type WatchCoreV1NamespacedServiceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NamespacedService operation.
 */
export type WatchCoreV1NamespacedServiceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1Namespace operation.
 */
export type WatchCoreV1NamespaceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1NodeList operation.
 */
export type WatchCoreV1NodeListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1Node operation.
 */
export type WatchCoreV1NodeResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1PersistentVolumeClaimListForAllNamespaces operation.
 */
export type WatchCoreV1PersistentVolumeClaimListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1PersistentVolumeList operation.
 */
export type WatchCoreV1PersistentVolumeListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1PersistentVolume operation.
 */
export type WatchCoreV1PersistentVolumeResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1PodListForAllNamespaces operation.
 */
export type WatchCoreV1PodListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1PodTemplateListForAllNamespaces operation.
 */
export type WatchCoreV1PodTemplateListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1ReplicationControllerListForAllNamespaces operation.
 */
export type WatchCoreV1ReplicationControllerListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1ResourceQuotaListForAllNamespaces operation.
 */
export type WatchCoreV1ResourceQuotaListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1SecretListForAllNamespaces operation.
 */
export type WatchCoreV1SecretListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1ServiceAccountListForAllNamespaces operation.
 */
export type WatchCoreV1ServiceAccountListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCoreV1ServiceListForAllNamespaces operation.
 */
export type WatchCoreV1ServiceListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAPIVersions operation.
 */
export type GetAPIVersionsResponse = Iok8sapimachinerypkgapismetav1APIGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroupList;
    };
};

/**
 * Contains response data for the getAdmissionregistrationAPIGroup operation.
 */
export type GetAdmissionregistrationAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAdmissionregistrationV1beta1APIResources operation.
 */
export type GetAdmissionregistrationV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type ListAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfigurationList;
    };
};

/**
 * Contains response data for the createAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type CreateAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the
 * deleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfiguration operation.
 */
export type DeleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type ReadAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the replaceAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type ReplaceAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the deleteAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type DeleteAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type PatchAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1MutatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the listAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type ListAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfigurationList;
    };
};

/**
 * Contains response data for the createAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type CreateAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the
 * deleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfiguration operation.
 */
export type DeleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type ReadAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the replaceAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type ReplaceAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the deleteAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type DeleteAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type PatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiadmissionregistrationv1beta1ValidatingWebhookConfiguration;
    };
};

/**
 * Contains response data for the watchAdmissionregistrationV1beta1MutatingWebhookConfigurationList
 * operation.
 */
export type WatchAdmissionregistrationV1beta1MutatingWebhookConfigurationListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAdmissionregistrationV1beta1MutatingWebhookConfiguration
 * operation.
 */
export type WatchAdmissionregistrationV1beta1MutatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the
 * watchAdmissionregistrationV1beta1ValidatingWebhookConfigurationList operation.
 */
export type WatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAdmissionregistrationV1beta1ValidatingWebhookConfiguration
 * operation.
 */
export type WatchAdmissionregistrationV1beta1ValidatingWebhookConfigurationResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getApiregistrationAPIGroup operation.
 */
export type GetApiregistrationAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getApiregistrationV1APIResources operation.
 */
export type GetApiregistrationV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listApiregistrationV1APIService operation.
 */
export type ListApiregistrationV1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIServiceList;
    };
};

/**
 * Contains response data for the createApiregistrationV1APIService operation.
 */
export type CreateApiregistrationV1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the deleteApiregistrationV1CollectionAPIService operation.
 */
export type DeleteApiregistrationV1CollectionAPIServiceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readApiregistrationV1APIService operation.
 */
export type ReadApiregistrationV1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the replaceApiregistrationV1APIService operation.
 */
export type ReplaceApiregistrationV1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the deleteApiregistrationV1APIService operation.
 */
export type DeleteApiregistrationV1APIServiceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchApiregistrationV1APIService operation.
 */
export type PatchApiregistrationV1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the readApiregistrationV1APIServiceStatus operation.
 */
export type ReadApiregistrationV1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the replaceApiregistrationV1APIServiceStatus operation.
 */
export type ReplaceApiregistrationV1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the patchApiregistrationV1APIServiceStatus operation.
 */
export type PatchApiregistrationV1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1APIService;
    };
};

/**
 * Contains response data for the watchApiregistrationV1APIServiceList operation.
 */
export type WatchApiregistrationV1APIServiceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchApiregistrationV1APIService operation.
 */
export type WatchApiregistrationV1APIServiceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getApiregistrationV1beta1APIResources operation.
 */
export type GetApiregistrationV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listApiregistrationV1beta1APIService operation.
 */
export type ListApiregistrationV1beta1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIServiceList;
    };
};

/**
 * Contains response data for the createApiregistrationV1beta1APIService operation.
 */
export type CreateApiregistrationV1beta1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the deleteApiregistrationV1beta1CollectionAPIService operation.
 */
export type DeleteApiregistrationV1beta1CollectionAPIServiceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readApiregistrationV1beta1APIService operation.
 */
export type ReadApiregistrationV1beta1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the replaceApiregistrationV1beta1APIService operation.
 */
export type ReplaceApiregistrationV1beta1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the deleteApiregistrationV1beta1APIService operation.
 */
export type DeleteApiregistrationV1beta1APIServiceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchApiregistrationV1beta1APIService operation.
 */
export type PatchApiregistrationV1beta1APIServiceResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the readApiregistrationV1beta1APIServiceStatus operation.
 */
export type ReadApiregistrationV1beta1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the replaceApiregistrationV1beta1APIServiceStatus operation.
 */
export type ReplaceApiregistrationV1beta1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the patchApiregistrationV1beta1APIServiceStatus operation.
 */
export type PatchApiregistrationV1beta1APIServiceStatusResponse = Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8skubeAggregatorpkgapisapiregistrationv1beta1APIService;
    };
};

/**
 * Contains response data for the watchApiregistrationV1beta1APIServiceList operation.
 */
export type WatchApiregistrationV1beta1APIServiceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchApiregistrationV1beta1APIService operation.
 */
export type WatchApiregistrationV1beta1APIServiceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAppsOpenshiftIoAPIGroup operation.
 */
export type GetAppsOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAppsOpenshiftIoV1APIResources operation.
 */
export type GetAppsOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAppsOpenshiftIoV1DeploymentConfigForAllNamespaces operation.
 */
export type ListAppsOpenshiftIoV1DeploymentConfigForAllNamespacesResponse = Comgithubopenshiftapiappsv1DeploymentConfigList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfigList;
    };
};

/**
 * Contains response data for the listAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type ListAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Comgithubopenshiftapiappsv1DeploymentConfigList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfigList;
    };
};

/**
 * Contains response data for the createAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type CreateAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the deleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfig
 * operation.
 */
export type DeleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfigResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type ReadAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the replaceAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type ReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the deleteAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type DeleteAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type PatchAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the createAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiate
 * operation.
 */
export type CreateAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiateResponse = Comgithubopenshiftapiappsv1DeploymentRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentRequest;
    };
};

/**
 * Contains response data for the readAppsOpenshiftIoV1NamespacedDeploymentConfigLog operation.
 */
export type ReadAppsOpenshiftIoV1NamespacedDeploymentConfigLogResponse = Comgithubopenshiftapiappsv1DeploymentLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentLog;
    };
};

/**
 * Contains response data for the createAppsOpenshiftIoV1NamespacedDeploymentConfigRollback
 * operation.
 */
export type CreateAppsOpenshiftIoV1NamespacedDeploymentConfigRollbackResponse = Comgithubopenshiftapiappsv1DeploymentConfigRollback & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfigRollback;
    };
};

/**
 * Contains response data for the readAppsOpenshiftIoV1NamespacedDeploymentConfigScale operation.
 */
export type ReadAppsOpenshiftIoV1NamespacedDeploymentConfigScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceAppsOpenshiftIoV1NamespacedDeploymentConfigScale
 * operation.
 */
export type ReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchAppsOpenshiftIoV1NamespacedDeploymentConfigScale operation.
 */
export type PatchAppsOpenshiftIoV1NamespacedDeploymentConfigScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the readAppsOpenshiftIoV1NamespacedDeploymentConfigStatus operation.
 */
export type ReadAppsOpenshiftIoV1NamespacedDeploymentConfigStatusResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the replaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatus
 * operation.
 */
export type ReplaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatusResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the patchAppsOpenshiftIoV1NamespacedDeploymentConfigStatus operation.
 */
export type PatchAppsOpenshiftIoV1NamespacedDeploymentConfigStatusResponse = Comgithubopenshiftapiappsv1DeploymentConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiappsv1DeploymentConfig;
    };
};

/**
 * Contains response data for the watchAppsOpenshiftIoV1DeploymentConfigListForAllNamespaces
 * operation.
 */
export type WatchAppsOpenshiftIoV1DeploymentConfigListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsOpenshiftIoV1NamespacedDeploymentConfigList operation.
 */
export type WatchAppsOpenshiftIoV1NamespacedDeploymentConfigListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsOpenshiftIoV1NamespacedDeploymentConfig operation.
 */
export type WatchAppsOpenshiftIoV1NamespacedDeploymentConfigResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAppsAPIGroup operation.
 */
export type GetAppsAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAppsV1APIResources operation.
 */
export type GetAppsV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAppsV1ControllerRevisionForAllNamespaces operation.
 */
export type ListAppsV1ControllerRevisionForAllNamespacesResponse = Iok8sapiappsv1ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevisionList;
    };
};

/**
 * Contains response data for the listAppsV1DaemonSetForAllNamespaces operation.
 */
export type ListAppsV1DaemonSetForAllNamespacesResponse = Iok8sapiappsv1DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSetList;
    };
};

/**
 * Contains response data for the listAppsV1DeploymentForAllNamespaces operation.
 */
export type ListAppsV1DeploymentForAllNamespacesResponse = Iok8sapiappsv1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DeploymentList;
    };
};

/**
 * Contains response data for the listAppsV1NamespacedControllerRevision operation.
 */
export type ListAppsV1NamespacedControllerRevisionResponse = Iok8sapiappsv1ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevisionList;
    };
};

/**
 * Contains response data for the createAppsV1NamespacedControllerRevision operation.
 */
export type CreateAppsV1NamespacedControllerRevisionResponse = Iok8sapiappsv1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1CollectionNamespacedControllerRevision operation.
 */
export type DeleteAppsV1CollectionNamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedControllerRevision operation.
 */
export type ReadAppsV1NamespacedControllerRevisionResponse = Iok8sapiappsv1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevision;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedControllerRevision operation.
 */
export type ReplaceAppsV1NamespacedControllerRevisionResponse = Iok8sapiappsv1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1NamespacedControllerRevision operation.
 */
export type DeleteAppsV1NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedControllerRevision operation.
 */
export type PatchAppsV1NamespacedControllerRevisionResponse = Iok8sapiappsv1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ControllerRevision;
    };
};

/**
 * Contains response data for the listAppsV1NamespacedDaemonSet operation.
 */
export type ListAppsV1NamespacedDaemonSetResponse = Iok8sapiappsv1DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSetList;
    };
};

/**
 * Contains response data for the createAppsV1NamespacedDaemonSet operation.
 */
export type CreateAppsV1NamespacedDaemonSetResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the deleteAppsV1CollectionNamespacedDaemonSet operation.
 */
export type DeleteAppsV1CollectionNamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedDaemonSet operation.
 */
export type ReadAppsV1NamespacedDaemonSetResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedDaemonSet operation.
 */
export type ReplaceAppsV1NamespacedDaemonSetResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the deleteAppsV1NamespacedDaemonSet operation.
 */
export type DeleteAppsV1NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedDaemonSet operation.
 */
export type PatchAppsV1NamespacedDaemonSetResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedDaemonSetStatus operation.
 */
export type ReadAppsV1NamespacedDaemonSetStatusResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedDaemonSetStatus operation.
 */
export type ReplaceAppsV1NamespacedDaemonSetStatusResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedDaemonSetStatus operation.
 */
export type PatchAppsV1NamespacedDaemonSetStatusResponse = Iok8sapiappsv1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DaemonSet;
    };
};

/**
 * Contains response data for the listAppsV1NamespacedDeployment operation.
 */
export type ListAppsV1NamespacedDeploymentResponse = Iok8sapiappsv1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1DeploymentList;
    };
};

/**
 * Contains response data for the createAppsV1NamespacedDeployment operation.
 */
export type CreateAppsV1NamespacedDeploymentResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1CollectionNamespacedDeployment operation.
 */
export type DeleteAppsV1CollectionNamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedDeployment operation.
 */
export type ReadAppsV1NamespacedDeploymentResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedDeployment operation.
 */
export type ReplaceAppsV1NamespacedDeploymentResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1NamespacedDeployment operation.
 */
export type DeleteAppsV1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedDeployment operation.
 */
export type PatchAppsV1NamespacedDeploymentResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedDeploymentScale operation.
 */
export type ReadAppsV1NamespacedDeploymentScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedDeploymentScale operation.
 */
export type ReplaceAppsV1NamespacedDeploymentScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedDeploymentScale operation.
 */
export type PatchAppsV1NamespacedDeploymentScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedDeploymentStatus operation.
 */
export type ReadAppsV1NamespacedDeploymentStatusResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedDeploymentStatus operation.
 */
export type ReplaceAppsV1NamespacedDeploymentStatusResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedDeploymentStatus operation.
 */
export type PatchAppsV1NamespacedDeploymentStatusResponse = Iok8sapiappsv1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1Deployment;
    };
};

/**
 * Contains response data for the listAppsV1NamespacedReplicaSet operation.
 */
export type ListAppsV1NamespacedReplicaSetResponse = Iok8sapiappsv1ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSetList;
    };
};

/**
 * Contains response data for the createAppsV1NamespacedReplicaSet operation.
 */
export type CreateAppsV1NamespacedReplicaSetResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the deleteAppsV1CollectionNamespacedReplicaSet operation.
 */
export type DeleteAppsV1CollectionNamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedReplicaSet operation.
 */
export type ReadAppsV1NamespacedReplicaSetResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedReplicaSet operation.
 */
export type ReplaceAppsV1NamespacedReplicaSetResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the deleteAppsV1NamespacedReplicaSet operation.
 */
export type DeleteAppsV1NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedReplicaSet operation.
 */
export type PatchAppsV1NamespacedReplicaSetResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedReplicaSetScale operation.
 */
export type ReadAppsV1NamespacedReplicaSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedReplicaSetScale operation.
 */
export type ReplaceAppsV1NamespacedReplicaSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedReplicaSetScale operation.
 */
export type PatchAppsV1NamespacedReplicaSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedReplicaSetStatus operation.
 */
export type ReadAppsV1NamespacedReplicaSetStatusResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedReplicaSetStatus operation.
 */
export type ReplaceAppsV1NamespacedReplicaSetStatusResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedReplicaSetStatus operation.
 */
export type PatchAppsV1NamespacedReplicaSetStatusResponse = Iok8sapiappsv1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSet;
    };
};

/**
 * Contains response data for the listAppsV1NamespacedStatefulSet operation.
 */
export type ListAppsV1NamespacedStatefulSetResponse = Iok8sapiappsv1StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSetList;
    };
};

/**
 * Contains response data for the createAppsV1NamespacedStatefulSet operation.
 */
export type CreateAppsV1NamespacedStatefulSetResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1CollectionNamespacedStatefulSet operation.
 */
export type DeleteAppsV1CollectionNamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedStatefulSet operation.
 */
export type ReadAppsV1NamespacedStatefulSetResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedStatefulSet operation.
 */
export type ReplaceAppsV1NamespacedStatefulSetResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1NamespacedStatefulSet operation.
 */
export type DeleteAppsV1NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedStatefulSet operation.
 */
export type PatchAppsV1NamespacedStatefulSetResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedStatefulSetScale operation.
 */
export type ReadAppsV1NamespacedStatefulSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedStatefulSetScale operation.
 */
export type ReplaceAppsV1NamespacedStatefulSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedStatefulSetScale operation.
 */
export type PatchAppsV1NamespacedStatefulSetScaleResponse = Iok8sapiautoscalingv1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1Scale;
    };
};

/**
 * Contains response data for the readAppsV1NamespacedStatefulSetStatus operation.
 */
export type ReadAppsV1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1NamespacedStatefulSetStatus operation.
 */
export type ReplaceAppsV1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the patchAppsV1NamespacedStatefulSetStatus operation.
 */
export type PatchAppsV1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSet;
    };
};

/**
 * Contains response data for the listAppsV1ReplicaSetForAllNamespaces operation.
 */
export type ListAppsV1ReplicaSetForAllNamespacesResponse = Iok8sapiappsv1ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1ReplicaSetList;
    };
};

/**
 * Contains response data for the listAppsV1StatefulSetForAllNamespaces operation.
 */
export type ListAppsV1StatefulSetForAllNamespacesResponse = Iok8sapiappsv1StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1StatefulSetList;
    };
};

/**
 * Contains response data for the watchAppsV1ControllerRevisionListForAllNamespaces operation.
 */
export type WatchAppsV1ControllerRevisionListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1DaemonSetListForAllNamespaces operation.
 */
export type WatchAppsV1DaemonSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1DeploymentListForAllNamespaces operation.
 */
export type WatchAppsV1DeploymentListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedControllerRevisionList operation.
 */
export type WatchAppsV1NamespacedControllerRevisionListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedControllerRevision operation.
 */
export type WatchAppsV1NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedDaemonSetList operation.
 */
export type WatchAppsV1NamespacedDaemonSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedDaemonSet operation.
 */
export type WatchAppsV1NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedDeploymentList operation.
 */
export type WatchAppsV1NamespacedDeploymentListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedDeployment operation.
 */
export type WatchAppsV1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedReplicaSetList operation.
 */
export type WatchAppsV1NamespacedReplicaSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedReplicaSet operation.
 */
export type WatchAppsV1NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedStatefulSetList operation.
 */
export type WatchAppsV1NamespacedStatefulSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1NamespacedStatefulSet operation.
 */
export type WatchAppsV1NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1ReplicaSetListForAllNamespaces operation.
 */
export type WatchAppsV1ReplicaSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1StatefulSetListForAllNamespaces operation.
 */
export type WatchAppsV1StatefulSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAppsV1beta1APIResources operation.
 */
export type GetAppsV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAppsV1beta1ControllerRevisionForAllNamespaces operation.
 */
export type ListAppsV1beta1ControllerRevisionForAllNamespacesResponse = Iok8sapiappsv1beta1ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevisionList;
    };
};

/**
 * Contains response data for the listAppsV1beta1DeploymentForAllNamespaces operation.
 */
export type ListAppsV1beta1DeploymentForAllNamespacesResponse = Iok8sapiappsv1beta1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1DeploymentList;
    };
};

/**
 * Contains response data for the listAppsV1beta1NamespacedControllerRevision operation.
 */
export type ListAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapiappsv1beta1ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevisionList;
    };
};

/**
 * Contains response data for the createAppsV1beta1NamespacedControllerRevision operation.
 */
export type CreateAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapiappsv1beta1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1CollectionNamespacedControllerRevision
 * operation.
 */
export type DeleteAppsV1beta1CollectionNamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedControllerRevision operation.
 */
export type ReadAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapiappsv1beta1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevision;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedControllerRevision operation.
 */
export type ReplaceAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapiappsv1beta1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1NamespacedControllerRevision operation.
 */
export type DeleteAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedControllerRevision operation.
 */
export type PatchAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapiappsv1beta1ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1ControllerRevision;
    };
};

/**
 * Contains response data for the listAppsV1beta1NamespacedDeployment operation.
 */
export type ListAppsV1beta1NamespacedDeploymentResponse = Iok8sapiappsv1beta1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1DeploymentList;
    };
};

/**
 * Contains response data for the createAppsV1beta1NamespacedDeployment operation.
 */
export type CreateAppsV1beta1NamespacedDeploymentResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1CollectionNamespacedDeployment operation.
 */
export type DeleteAppsV1beta1CollectionNamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedDeployment operation.
 */
export type ReadAppsV1beta1NamespacedDeploymentResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedDeployment operation.
 */
export type ReplaceAppsV1beta1NamespacedDeploymentResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1NamespacedDeployment operation.
 */
export type DeleteAppsV1beta1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedDeployment operation.
 */
export type PatchAppsV1beta1NamespacedDeploymentResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the createAppsV1beta1NamespacedDeploymentRollback operation.
 */
export type CreateAppsV1beta1NamespacedDeploymentRollbackResponse = Iok8sapiappsv1beta1DeploymentRollback & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1DeploymentRollback;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedDeploymentScale operation.
 */
export type ReadAppsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedDeploymentScale operation.
 */
export type ReplaceAppsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedDeploymentScale operation.
 */
export type PatchAppsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedDeploymentStatus operation.
 */
export type ReadAppsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedDeploymentStatus operation.
 */
export type ReplaceAppsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedDeploymentStatus operation.
 */
export type PatchAppsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Deployment;
    };
};

/**
 * Contains response data for the listAppsV1beta1NamespacedStatefulSet operation.
 */
export type ListAppsV1beta1NamespacedStatefulSetResponse = Iok8sapiappsv1beta1StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSetList;
    };
};

/**
 * Contains response data for the createAppsV1beta1NamespacedStatefulSet operation.
 */
export type CreateAppsV1beta1NamespacedStatefulSetResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1CollectionNamespacedStatefulSet operation.
 */
export type DeleteAppsV1beta1CollectionNamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedStatefulSet operation.
 */
export type ReadAppsV1beta1NamespacedStatefulSetResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedStatefulSet operation.
 */
export type ReplaceAppsV1beta1NamespacedStatefulSetResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta1NamespacedStatefulSet operation.
 */
export type DeleteAppsV1beta1NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedStatefulSet operation.
 */
export type PatchAppsV1beta1NamespacedStatefulSetResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedStatefulSetScale operation.
 */
export type ReadAppsV1beta1NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedStatefulSetScale operation.
 */
export type ReplaceAppsV1beta1NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedStatefulSetScale operation.
 */
export type PatchAppsV1beta1NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1Scale;
    };
};

/**
 * Contains response data for the readAppsV1beta1NamespacedStatefulSetStatus operation.
 */
export type ReadAppsV1beta1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta1NamespacedStatefulSetStatus operation.
 */
export type ReplaceAppsV1beta1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the patchAppsV1beta1NamespacedStatefulSetStatus operation.
 */
export type PatchAppsV1beta1NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta1StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSet;
    };
};

/**
 * Contains response data for the listAppsV1beta1StatefulSetForAllNamespaces operation.
 */
export type ListAppsV1beta1StatefulSetForAllNamespacesResponse = Iok8sapiappsv1beta1StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta1StatefulSetList;
    };
};

/**
 * Contains response data for the watchAppsV1beta1ControllerRevisionListForAllNamespaces operation.
 */
export type WatchAppsV1beta1ControllerRevisionListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1DeploymentListForAllNamespaces operation.
 */
export type WatchAppsV1beta1DeploymentListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedControllerRevisionList operation.
 */
export type WatchAppsV1beta1NamespacedControllerRevisionListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedControllerRevision operation.
 */
export type WatchAppsV1beta1NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedDeploymentList operation.
 */
export type WatchAppsV1beta1NamespacedDeploymentListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedDeployment operation.
 */
export type WatchAppsV1beta1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedStatefulSetList operation.
 */
export type WatchAppsV1beta1NamespacedStatefulSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1NamespacedStatefulSet operation.
 */
export type WatchAppsV1beta1NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta1StatefulSetListForAllNamespaces operation.
 */
export type WatchAppsV1beta1StatefulSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAppsV1beta2APIResources operation.
 */
export type GetAppsV1beta2APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAppsV1beta2ControllerRevisionForAllNamespaces operation.
 */
export type ListAppsV1beta2ControllerRevisionForAllNamespacesResponse = Iok8sapiappsv1beta2ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevisionList;
    };
};

/**
 * Contains response data for the listAppsV1beta2DaemonSetForAllNamespaces operation.
 */
export type ListAppsV1beta2DaemonSetForAllNamespacesResponse = Iok8sapiappsv1beta2DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSetList;
    };
};

/**
 * Contains response data for the listAppsV1beta2DeploymentForAllNamespaces operation.
 */
export type ListAppsV1beta2DeploymentForAllNamespacesResponse = Iok8sapiappsv1beta2DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DeploymentList;
    };
};

/**
 * Contains response data for the listAppsV1beta2NamespacedControllerRevision operation.
 */
export type ListAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapiappsv1beta2ControllerRevisionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevisionList;
    };
};

/**
 * Contains response data for the createAppsV1beta2NamespacedControllerRevision operation.
 */
export type CreateAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapiappsv1beta2ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2CollectionNamespacedControllerRevision
 * operation.
 */
export type DeleteAppsV1beta2CollectionNamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedControllerRevision operation.
 */
export type ReadAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapiappsv1beta2ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevision;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedControllerRevision operation.
 */
export type ReplaceAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapiappsv1beta2ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevision;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2NamespacedControllerRevision operation.
 */
export type DeleteAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedControllerRevision operation.
 */
export type PatchAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapiappsv1beta2ControllerRevision & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ControllerRevision;
    };
};

/**
 * Contains response data for the listAppsV1beta2NamespacedDaemonSet operation.
 */
export type ListAppsV1beta2NamespacedDaemonSetResponse = Iok8sapiappsv1beta2DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSetList;
    };
};

/**
 * Contains response data for the createAppsV1beta2NamespacedDaemonSet operation.
 */
export type CreateAppsV1beta2NamespacedDaemonSetResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2CollectionNamespacedDaemonSet operation.
 */
export type DeleteAppsV1beta2CollectionNamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedDaemonSet operation.
 */
export type ReadAppsV1beta2NamespacedDaemonSetResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedDaemonSet operation.
 */
export type ReplaceAppsV1beta2NamespacedDaemonSetResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2NamespacedDaemonSet operation.
 */
export type DeleteAppsV1beta2NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedDaemonSet operation.
 */
export type PatchAppsV1beta2NamespacedDaemonSetResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedDaemonSetStatus operation.
 */
export type ReadAppsV1beta2NamespacedDaemonSetStatusResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedDaemonSetStatus operation.
 */
export type ReplaceAppsV1beta2NamespacedDaemonSetStatusResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedDaemonSetStatus operation.
 */
export type PatchAppsV1beta2NamespacedDaemonSetStatusResponse = Iok8sapiappsv1beta2DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DaemonSet;
    };
};

/**
 * Contains response data for the listAppsV1beta2NamespacedDeployment operation.
 */
export type ListAppsV1beta2NamespacedDeploymentResponse = Iok8sapiappsv1beta2DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2DeploymentList;
    };
};

/**
 * Contains response data for the createAppsV1beta2NamespacedDeployment operation.
 */
export type CreateAppsV1beta2NamespacedDeploymentResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2CollectionNamespacedDeployment operation.
 */
export type DeleteAppsV1beta2CollectionNamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedDeployment operation.
 */
export type ReadAppsV1beta2NamespacedDeploymentResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedDeployment operation.
 */
export type ReplaceAppsV1beta2NamespacedDeploymentResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2NamespacedDeployment operation.
 */
export type DeleteAppsV1beta2NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedDeployment operation.
 */
export type PatchAppsV1beta2NamespacedDeploymentResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedDeploymentScale operation.
 */
export type ReadAppsV1beta2NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedDeploymentScale operation.
 */
export type ReplaceAppsV1beta2NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedDeploymentScale operation.
 */
export type PatchAppsV1beta2NamespacedDeploymentScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedDeploymentStatus operation.
 */
export type ReadAppsV1beta2NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedDeploymentStatus operation.
 */
export type ReplaceAppsV1beta2NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedDeploymentStatus operation.
 */
export type PatchAppsV1beta2NamespacedDeploymentStatusResponse = Iok8sapiappsv1beta2Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Deployment;
    };
};

/**
 * Contains response data for the listAppsV1beta2NamespacedReplicaSet operation.
 */
export type ListAppsV1beta2NamespacedReplicaSetResponse = Iok8sapiappsv1beta2ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSetList;
    };
};

/**
 * Contains response data for the createAppsV1beta2NamespacedReplicaSet operation.
 */
export type CreateAppsV1beta2NamespacedReplicaSetResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2CollectionNamespacedReplicaSet operation.
 */
export type DeleteAppsV1beta2CollectionNamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedReplicaSet operation.
 */
export type ReadAppsV1beta2NamespacedReplicaSetResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedReplicaSet operation.
 */
export type ReplaceAppsV1beta2NamespacedReplicaSetResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2NamespacedReplicaSet operation.
 */
export type DeleteAppsV1beta2NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedReplicaSet operation.
 */
export type PatchAppsV1beta2NamespacedReplicaSetResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedReplicaSetScale operation.
 */
export type ReadAppsV1beta2NamespacedReplicaSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedReplicaSetScale operation.
 */
export type ReplaceAppsV1beta2NamespacedReplicaSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedReplicaSetScale operation.
 */
export type PatchAppsV1beta2NamespacedReplicaSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedReplicaSetStatus operation.
 */
export type ReadAppsV1beta2NamespacedReplicaSetStatusResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedReplicaSetStatus operation.
 */
export type ReplaceAppsV1beta2NamespacedReplicaSetStatusResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedReplicaSetStatus operation.
 */
export type PatchAppsV1beta2NamespacedReplicaSetStatusResponse = Iok8sapiappsv1beta2ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSet;
    };
};

/**
 * Contains response data for the listAppsV1beta2NamespacedStatefulSet operation.
 */
export type ListAppsV1beta2NamespacedStatefulSetResponse = Iok8sapiappsv1beta2StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSetList;
    };
};

/**
 * Contains response data for the createAppsV1beta2NamespacedStatefulSet operation.
 */
export type CreateAppsV1beta2NamespacedStatefulSetResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2CollectionNamespacedStatefulSet operation.
 */
export type DeleteAppsV1beta2CollectionNamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedStatefulSet operation.
 */
export type ReadAppsV1beta2NamespacedStatefulSetResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedStatefulSet operation.
 */
export type ReplaceAppsV1beta2NamespacedStatefulSetResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the deleteAppsV1beta2NamespacedStatefulSet operation.
 */
export type DeleteAppsV1beta2NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedStatefulSet operation.
 */
export type PatchAppsV1beta2NamespacedStatefulSetResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedStatefulSetScale operation.
 */
export type ReadAppsV1beta2NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedStatefulSetScale operation.
 */
export type ReplaceAppsV1beta2NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedStatefulSetScale operation.
 */
export type PatchAppsV1beta2NamespacedStatefulSetScaleResponse = Iok8sapiappsv1beta2Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2Scale;
    };
};

/**
 * Contains response data for the readAppsV1beta2NamespacedStatefulSetStatus operation.
 */
export type ReadAppsV1beta2NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the replaceAppsV1beta2NamespacedStatefulSetStatus operation.
 */
export type ReplaceAppsV1beta2NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the patchAppsV1beta2NamespacedStatefulSetStatus operation.
 */
export type PatchAppsV1beta2NamespacedStatefulSetStatusResponse = Iok8sapiappsv1beta2StatefulSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSet;
    };
};

/**
 * Contains response data for the listAppsV1beta2ReplicaSetForAllNamespaces operation.
 */
export type ListAppsV1beta2ReplicaSetForAllNamespacesResponse = Iok8sapiappsv1beta2ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2ReplicaSetList;
    };
};

/**
 * Contains response data for the listAppsV1beta2StatefulSetForAllNamespaces operation.
 */
export type ListAppsV1beta2StatefulSetForAllNamespacesResponse = Iok8sapiappsv1beta2StatefulSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiappsv1beta2StatefulSetList;
    };
};

/**
 * Contains response data for the watchAppsV1beta2ControllerRevisionListForAllNamespaces operation.
 */
export type WatchAppsV1beta2ControllerRevisionListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2DaemonSetListForAllNamespaces operation.
 */
export type WatchAppsV1beta2DaemonSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2DeploymentListForAllNamespaces operation.
 */
export type WatchAppsV1beta2DeploymentListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedControllerRevisionList operation.
 */
export type WatchAppsV1beta2NamespacedControllerRevisionListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedControllerRevision operation.
 */
export type WatchAppsV1beta2NamespacedControllerRevisionResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedDaemonSetList operation.
 */
export type WatchAppsV1beta2NamespacedDaemonSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedDaemonSet operation.
 */
export type WatchAppsV1beta2NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedDeploymentList operation.
 */
export type WatchAppsV1beta2NamespacedDeploymentListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedDeployment operation.
 */
export type WatchAppsV1beta2NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedReplicaSetList operation.
 */
export type WatchAppsV1beta2NamespacedReplicaSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedReplicaSet operation.
 */
export type WatchAppsV1beta2NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedStatefulSetList operation.
 */
export type WatchAppsV1beta2NamespacedStatefulSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2NamespacedStatefulSet operation.
 */
export type WatchAppsV1beta2NamespacedStatefulSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2ReplicaSetListForAllNamespaces operation.
 */
export type WatchAppsV1beta2ReplicaSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAppsV1beta2StatefulSetListForAllNamespaces operation.
 */
export type WatchAppsV1beta2StatefulSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAuthenticationAPIGroup operation.
 */
export type GetAuthenticationAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAuthenticationV1APIResources operation.
 */
export type GetAuthenticationV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the createAuthenticationV1TokenReview operation.
 */
export type CreateAuthenticationV1TokenReviewResponse = Iok8sapiauthenticationv1TokenReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthenticationv1TokenReview;
    };
};

/**
 * Contains response data for the getAuthenticationV1beta1APIResources operation.
 */
export type GetAuthenticationV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the createAuthenticationV1beta1TokenReview operation.
 */
export type CreateAuthenticationV1beta1TokenReviewResponse = Iok8sapiauthenticationv1beta1TokenReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthenticationv1beta1TokenReview;
    };
};

/**
 * Contains response data for the getAuthorizationAPIGroup operation.
 */
export type GetAuthorizationAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAuthorizationV1APIResources operation.
 */
export type GetAuthorizationV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the createAuthorizationV1NamespacedLocalSubjectAccessReview
 * operation.
 */
export type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewResponse = Iok8sapiauthorizationv1LocalSubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1LocalSubjectAccessReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1SelfSubjectAccessReview operation.
 */
export type CreateAuthorizationV1SelfSubjectAccessReviewResponse = Iok8sapiauthorizationv1SelfSubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1SelfSubjectAccessReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1SelfSubjectRulesReview operation.
 */
export type CreateAuthorizationV1SelfSubjectRulesReviewResponse = Iok8sapiauthorizationv1SelfSubjectRulesReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1SelfSubjectRulesReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1SubjectAccessReview operation.
 */
export type CreateAuthorizationV1SubjectAccessReviewResponse = Iok8sapiauthorizationv1SubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1SubjectAccessReview;
    };
};

/**
 * Contains response data for the getAuthorizationV1beta1APIResources operation.
 */
export type GetAuthorizationV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the createAuthorizationV1beta1NamespacedLocalSubjectAccessReview
 * operation.
 */
export type CreateAuthorizationV1beta1NamespacedLocalSubjectAccessReviewResponse = Iok8sapiauthorizationv1beta1LocalSubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1beta1LocalSubjectAccessReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1beta1SelfSubjectAccessReview operation.
 */
export type CreateAuthorizationV1beta1SelfSubjectAccessReviewResponse = Iok8sapiauthorizationv1beta1SelfSubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1beta1SelfSubjectAccessReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1beta1SelfSubjectRulesReview operation.
 */
export type CreateAuthorizationV1beta1SelfSubjectRulesReviewResponse = Iok8sapiauthorizationv1beta1SelfSubjectRulesReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1beta1SelfSubjectRulesReview;
    };
};

/**
 * Contains response data for the createAuthorizationV1beta1SubjectAccessReview operation.
 */
export type CreateAuthorizationV1beta1SubjectAccessReviewResponse = Iok8sapiauthorizationv1beta1SubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiauthorizationv1beta1SubjectAccessReview;
    };
};

/**
 * Contains response data for the getAuthorizationOpenshiftIoAPIGroup operation.
 */
export type GetAuthorizationOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAuthorizationOpenshiftIoV1APIResources operation.
 */
export type GetAuthorizationOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type ListAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleBindingList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type CreateAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the readAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type ReadAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the replaceAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type ReplaceAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the deleteAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type DeleteAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAuthorizationOpenshiftIoV1ClusterRoleBinding operation.
 */
export type PatchAuthorizationOpenshiftIoV1ClusterRoleBindingResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type ListAuthorizationOpenshiftIoV1ClusterRoleResponse = Comgithubopenshiftapiauthorizationv1ClusterRoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRoleList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type CreateAuthorizationOpenshiftIoV1ClusterRoleResponse = Comgithubopenshiftapiauthorizationv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRole;
    };
};

/**
 * Contains response data for the readAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type ReadAuthorizationOpenshiftIoV1ClusterRoleResponse = Comgithubopenshiftapiauthorizationv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRole;
    };
};

/**
 * Contains response data for the replaceAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type ReplaceAuthorizationOpenshiftIoV1ClusterRoleResponse = Comgithubopenshiftapiauthorizationv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRole;
    };
};

/**
 * Contains response data for the deleteAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type DeleteAuthorizationOpenshiftIoV1ClusterRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAuthorizationOpenshiftIoV1ClusterRole operation.
 */
export type PatchAuthorizationOpenshiftIoV1ClusterRoleResponse = Comgithubopenshiftapiauthorizationv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ClusterRole;
    };
};

/**
 * Contains response data for the
 * createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReviewResponse = Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1LocalResourceAccessReview;
    };
};

/**
 * Contains response data for the
 * createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReviewResponse = Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1LocalSubjectAccessReview;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type ListAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestriction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestriction;
    };
};

/**
 * Contains response data for the
 * deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction operation.
 */
export type DeleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestrictionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type ReadAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestriction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestriction;
    };
};

/**
 * Contains response data for the replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type ReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestriction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestriction;
    };
};

/**
 * Contains response data for the deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type DeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type PatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestriction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestriction;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type ListAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Comgithubopenshiftapiauthorizationv1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Comgithubopenshiftapiauthorizationv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBinding;
    };
};

/**
 * Contains response data for the readAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type ReadAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Comgithubopenshiftapiauthorizationv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBinding;
    };
};

/**
 * Contains response data for the replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type ReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Comgithubopenshiftapiauthorizationv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBinding;
    };
};

/**
 * Contains response data for the deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type DeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAuthorizationOpenshiftIoV1NamespacedRoleBinding operation.
 */
export type PatchAuthorizationOpenshiftIoV1NamespacedRoleBindingResponse = Comgithubopenshiftapiauthorizationv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBinding;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type ListAuthorizationOpenshiftIoV1NamespacedRoleResponse = Comgithubopenshiftapiauthorizationv1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedRoleResponse = Comgithubopenshiftapiauthorizationv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1Role;
    };
};

/**
 * Contains response data for the readAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type ReadAuthorizationOpenshiftIoV1NamespacedRoleResponse = Comgithubopenshiftapiauthorizationv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1Role;
    };
};

/**
 * Contains response data for the replaceAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type ReplaceAuthorizationOpenshiftIoV1NamespacedRoleResponse = Comgithubopenshiftapiauthorizationv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1Role;
    };
};

/**
 * Contains response data for the deleteAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type DeleteAuthorizationOpenshiftIoV1NamespacedRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAuthorizationOpenshiftIoV1NamespacedRole operation.
 */
export type PatchAuthorizationOpenshiftIoV1NamespacedRoleResponse = Comgithubopenshiftapiauthorizationv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1Role;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview
 * operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReviewResponse = Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1SelfSubjectRulesReview;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview
 * operation.
 */
export type CreateAuthorizationOpenshiftIoV1NamespacedSubjectRulesReviewResponse = Comgithubopenshiftapiauthorizationv1SubjectRulesReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1SubjectRulesReview;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1ResourceAccessReview operation.
 */
export type CreateAuthorizationOpenshiftIoV1ResourceAccessReviewResponse = Comgithubopenshiftapiauthorizationv1ResourceAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1ResourceAccessReview;
    };
};

/**
 * Contains response data for the
 * listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces operation.
 */
export type ListAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespacesResponse = Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingRestrictionList;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces
 * operation.
 */
export type ListAuthorizationOpenshiftIoV1RoleBindingForAllNamespacesResponse = Comgithubopenshiftapiauthorizationv1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleBindingList;
    };
};

/**
 * Contains response data for the listAuthorizationOpenshiftIoV1RoleForAllNamespaces operation.
 */
export type ListAuthorizationOpenshiftIoV1RoleForAllNamespacesResponse = Comgithubopenshiftapiauthorizationv1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1RoleList;
    };
};

/**
 * Contains response data for the createAuthorizationOpenshiftIoV1SubjectAccessReview operation.
 */
export type CreateAuthorizationOpenshiftIoV1SubjectAccessReviewResponse = Comgithubopenshiftapiauthorizationv1SubjectAccessReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiauthorizationv1SubjectAccessReview;
    };
};

/**
 * Contains response data for the
 * watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList operation.
 */
export type WatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
 * operation.
 */
export type WatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the
 * watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces operation.
 */
export type WatchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAutoscalingAPIGroup operation.
 */
export type GetAutoscalingAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getAutoscalingV1APIResources operation.
 */
export type GetAutoscalingV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces
 * operation.
 */
export type ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesResponse = Iok8sapiautoscalingv1HorizontalPodAutoscalerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscalerList;
    };
};

/**
 * Contains response data for the listAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type ListAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv1HorizontalPodAutoscalerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscalerList;
    };
};

/**
 * Contains response data for the createAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type CreateAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler
 * operation.
 */
export type DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type ReadAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the replaceAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the deleteAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type PatchAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces
 * operation.
 */
export type WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAutoscalingV1NamespacedHorizontalPodAutoscalerList
 * operation.
 */
export type WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAutoscalingV1NamespacedHorizontalPodAutoscaler operation.
 */
export type WatchAutoscalingV1NamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getAutoscalingV2beta1APIResources operation.
 */
export type GetAutoscalingV2beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces
 * operation.
 */
export type ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList;
    };
};

/**
 * Contains response data for the listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerList;
    };
};

/**
 * Contains response data for the createAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the
 * deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler operation.
 */
export type DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the deleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the patchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus
 * operation.
 */
export type PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusResponse = Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiautoscalingv2beta1HorizontalPodAutoscaler;
    };
};

/**
 * Contains response data for the
 * watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces operation.
 */
export type WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList
 * operation.
 */
export type WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler
 * operation.
 */
export type WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getBatchAPIGroup operation.
 */
export type GetBatchAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getBatchV1APIResources operation.
 */
export type GetBatchV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listBatchV1JobForAllNamespaces operation.
 */
export type ListBatchV1JobForAllNamespacesResponse = Iok8sapibatchv1JobList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1JobList;
    };
};

/**
 * Contains response data for the listBatchV1NamespacedJob operation.
 */
export type ListBatchV1NamespacedJobResponse = Iok8sapibatchv1JobList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1JobList;
    };
};

/**
 * Contains response data for the createBatchV1NamespacedJob operation.
 */
export type CreateBatchV1NamespacedJobResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the deleteBatchV1CollectionNamespacedJob operation.
 */
export type DeleteBatchV1CollectionNamespacedJobResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readBatchV1NamespacedJob operation.
 */
export type ReadBatchV1NamespacedJobResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the replaceBatchV1NamespacedJob operation.
 */
export type ReplaceBatchV1NamespacedJobResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the deleteBatchV1NamespacedJob operation.
 */
export type DeleteBatchV1NamespacedJobResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchBatchV1NamespacedJob operation.
 */
export type PatchBatchV1NamespacedJobResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the readBatchV1NamespacedJobStatus operation.
 */
export type ReadBatchV1NamespacedJobStatusResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the replaceBatchV1NamespacedJobStatus operation.
 */
export type ReplaceBatchV1NamespacedJobStatusResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the patchBatchV1NamespacedJobStatus operation.
 */
export type PatchBatchV1NamespacedJobStatusResponse = Iok8sapibatchv1Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1Job;
    };
};

/**
 * Contains response data for the watchBatchV1JobListForAllNamespaces operation.
 */
export type WatchBatchV1JobListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBatchV1NamespacedJobList operation.
 */
export type WatchBatchV1NamespacedJobListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBatchV1NamespacedJob operation.
 */
export type WatchBatchV1NamespacedJobResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getBatchV1beta1APIResources operation.
 */
export type GetBatchV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listBatchV1beta1CronJobForAllNamespaces operation.
 */
export type ListBatchV1beta1CronJobForAllNamespacesResponse = Iok8sapibatchv1beta1CronJobList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJobList;
    };
};

/**
 * Contains response data for the listBatchV1beta1NamespacedCronJob operation.
 */
export type ListBatchV1beta1NamespacedCronJobResponse = Iok8sapibatchv1beta1CronJobList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJobList;
    };
};

/**
 * Contains response data for the createBatchV1beta1NamespacedCronJob operation.
 */
export type CreateBatchV1beta1NamespacedCronJobResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the deleteBatchV1beta1CollectionNamespacedCronJob operation.
 */
export type DeleteBatchV1beta1CollectionNamespacedCronJobResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readBatchV1beta1NamespacedCronJob operation.
 */
export type ReadBatchV1beta1NamespacedCronJobResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the replaceBatchV1beta1NamespacedCronJob operation.
 */
export type ReplaceBatchV1beta1NamespacedCronJobResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the deleteBatchV1beta1NamespacedCronJob operation.
 */
export type DeleteBatchV1beta1NamespacedCronJobResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchBatchV1beta1NamespacedCronJob operation.
 */
export type PatchBatchV1beta1NamespacedCronJobResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the readBatchV1beta1NamespacedCronJobStatus operation.
 */
export type ReadBatchV1beta1NamespacedCronJobStatusResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the replaceBatchV1beta1NamespacedCronJobStatus operation.
 */
export type ReplaceBatchV1beta1NamespacedCronJobStatusResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the patchBatchV1beta1NamespacedCronJobStatus operation.
 */
export type PatchBatchV1beta1NamespacedCronJobStatusResponse = Iok8sapibatchv1beta1CronJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapibatchv1beta1CronJob;
    };
};

/**
 * Contains response data for the watchBatchV1beta1CronJobListForAllNamespaces operation.
 */
export type WatchBatchV1beta1CronJobListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBatchV1beta1NamespacedCronJobList operation.
 */
export type WatchBatchV1beta1NamespacedCronJobListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBatchV1beta1NamespacedCronJob operation.
 */
export type WatchBatchV1beta1NamespacedCronJobResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getBuildOpenshiftIoAPIGroup operation.
 */
export type GetBuildOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getBuildOpenshiftIoV1APIResources operation.
 */
export type GetBuildOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listBuildOpenshiftIoV1BuildConfigForAllNamespaces operation.
 */
export type ListBuildOpenshiftIoV1BuildConfigForAllNamespacesResponse = Comgithubopenshiftapibuildv1BuildConfigList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfigList;
    };
};

/**
 * Contains response data for the listBuildOpenshiftIoV1BuildForAllNamespaces operation.
 */
export type ListBuildOpenshiftIoV1BuildForAllNamespacesResponse = Comgithubopenshiftapibuildv1BuildList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildList;
    };
};

/**
 * Contains response data for the listBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type ListBuildOpenshiftIoV1NamespacedBuildConfigResponse = Comgithubopenshiftapibuildv1BuildConfigList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfigList;
    };
};

/**
 * Contains response data for the createBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type CreateBuildOpenshiftIoV1NamespacedBuildConfigResponse = Comgithubopenshiftapibuildv1BuildConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfig;
    };
};

/**
 * Contains response data for the deleteBuildOpenshiftIoV1CollectionNamespacedBuildConfig
 * operation.
 */
export type DeleteBuildOpenshiftIoV1CollectionNamespacedBuildConfigResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type ReadBuildOpenshiftIoV1NamespacedBuildConfigResponse = Comgithubopenshiftapibuildv1BuildConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfig;
    };
};

/**
 * Contains response data for the replaceBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type ReplaceBuildOpenshiftIoV1NamespacedBuildConfigResponse = Comgithubopenshiftapibuildv1BuildConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfig;
    };
};

/**
 * Contains response data for the deleteBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type DeleteBuildOpenshiftIoV1NamespacedBuildConfigResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type PatchBuildOpenshiftIoV1NamespacedBuildConfigResponse = Comgithubopenshiftapibuildv1BuildConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildConfig;
    };
};

/**
 * Contains response data for the createBuildOpenshiftIoV1NamespacedBuildConfigInstantiate
 * operation.
 */
export type CreateBuildOpenshiftIoV1NamespacedBuildConfigInstantiateResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the
 * connectBuildOpenshiftIoV1PostNamespacedBuildConfigInstantiatebinary operation.
 */
export type ConnectBuildOpenshiftIoV1PostNamespacedBuildConfigInstantiatebinaryResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the connectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooks
 * operation.
 */
export type ConnectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the
 * connectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksWithPath operation.
 */
export type ConnectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksWithPathResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type ListBuildOpenshiftIoV1NamespacedBuildResponse = Comgithubopenshiftapibuildv1BuildList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildList;
    };
};

/**
 * Contains response data for the createBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type CreateBuildOpenshiftIoV1NamespacedBuildResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the deleteBuildOpenshiftIoV1CollectionNamespacedBuild operation.
 */
export type DeleteBuildOpenshiftIoV1CollectionNamespacedBuildResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type ReadBuildOpenshiftIoV1NamespacedBuildResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the replaceBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type ReplaceBuildOpenshiftIoV1NamespacedBuildResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the deleteBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type DeleteBuildOpenshiftIoV1NamespacedBuildResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type PatchBuildOpenshiftIoV1NamespacedBuildResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the createBuildOpenshiftIoV1NamespacedBuildClone operation.
 */
export type CreateBuildOpenshiftIoV1NamespacedBuildCloneResponse = Comgithubopenshiftapibuildv1BuildRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildRequest;
    };
};

/**
 * Contains response data for the replaceBuildOpenshiftIoV1NamespacedBuildDetails operation.
 */
export type ReplaceBuildOpenshiftIoV1NamespacedBuildDetailsResponse = Comgithubopenshiftapibuildv1Build & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1Build;
    };
};

/**
 * Contains response data for the readBuildOpenshiftIoV1NamespacedBuildLog operation.
 */
export type ReadBuildOpenshiftIoV1NamespacedBuildLogResponse = Comgithubopenshiftapibuildv1BuildLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapibuildv1BuildLog;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1BuildConfigListForAllNamespaces operation.
 */
export type WatchBuildOpenshiftIoV1BuildConfigListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1BuildListForAllNamespaces operation.
 */
export type WatchBuildOpenshiftIoV1BuildListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1NamespacedBuildConfigList operation.
 */
export type WatchBuildOpenshiftIoV1NamespacedBuildConfigListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1NamespacedBuildConfig operation.
 */
export type WatchBuildOpenshiftIoV1NamespacedBuildConfigResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1NamespacedBuildList operation.
 */
export type WatchBuildOpenshiftIoV1NamespacedBuildListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchBuildOpenshiftIoV1NamespacedBuild operation.
 */
export type WatchBuildOpenshiftIoV1NamespacedBuildResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getCertificatesAPIGroup operation.
 */
export type GetCertificatesAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getCertificatesV1beta1APIResources operation.
 */
export type GetCertificatesV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listCertificatesV1beta1CertificateSigningRequest operation.
 */
export type ListCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapicertificatesv1beta1CertificateSigningRequestList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequestList;
    };
};

/**
 * Contains response data for the createCertificatesV1beta1CertificateSigningRequest operation.
 */
export type CreateCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the deleteCertificatesV1beta1CollectionCertificateSigningRequest
 * operation.
 */
export type DeleteCertificatesV1beta1CollectionCertificateSigningRequestResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readCertificatesV1beta1CertificateSigningRequest operation.
 */
export type ReadCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the replaceCertificatesV1beta1CertificateSigningRequest operation.
 */
export type ReplaceCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the deleteCertificatesV1beta1CertificateSigningRequest operation.
 */
export type DeleteCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchCertificatesV1beta1CertificateSigningRequest operation.
 */
export type PatchCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the replaceCertificatesV1beta1CertificateSigningRequestApproval
 * operation.
 */
export type ReplaceCertificatesV1beta1CertificateSigningRequestApprovalResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the readCertificatesV1beta1CertificateSigningRequestStatus operation.
 */
export type ReadCertificatesV1beta1CertificateSigningRequestStatusResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the replaceCertificatesV1beta1CertificateSigningRequestStatus
 * operation.
 */
export type ReplaceCertificatesV1beta1CertificateSigningRequestStatusResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the patchCertificatesV1beta1CertificateSigningRequestStatus
 * operation.
 */
export type PatchCertificatesV1beta1CertificateSigningRequestStatusResponse = Iok8sapicertificatesv1beta1CertificateSigningRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapicertificatesv1beta1CertificateSigningRequest;
    };
};

/**
 * Contains response data for the watchCertificatesV1beta1CertificateSigningRequestList operation.
 */
export type WatchCertificatesV1beta1CertificateSigningRequestListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchCertificatesV1beta1CertificateSigningRequest operation.
 */
export type WatchCertificatesV1beta1CertificateSigningRequestResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getEventsAPIGroup operation.
 */
export type GetEventsAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getEventsV1beta1APIResources operation.
 */
export type GetEventsV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listEventsV1beta1EventForAllNamespaces operation.
 */
export type ListEventsV1beta1EventForAllNamespacesResponse = Iok8sapieventsv1beta1EventList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1EventList;
    };
};

/**
 * Contains response data for the listEventsV1beta1NamespacedEvent operation.
 */
export type ListEventsV1beta1NamespacedEventResponse = Iok8sapieventsv1beta1EventList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1EventList;
    };
};

/**
 * Contains response data for the createEventsV1beta1NamespacedEvent operation.
 */
export type CreateEventsV1beta1NamespacedEventResponse = Iok8sapieventsv1beta1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1Event;
    };
};

/**
 * Contains response data for the deleteEventsV1beta1CollectionNamespacedEvent operation.
 */
export type DeleteEventsV1beta1CollectionNamespacedEventResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readEventsV1beta1NamespacedEvent operation.
 */
export type ReadEventsV1beta1NamespacedEventResponse = Iok8sapieventsv1beta1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1Event;
    };
};

/**
 * Contains response data for the replaceEventsV1beta1NamespacedEvent operation.
 */
export type ReplaceEventsV1beta1NamespacedEventResponse = Iok8sapieventsv1beta1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1Event;
    };
};

/**
 * Contains response data for the deleteEventsV1beta1NamespacedEvent operation.
 */
export type DeleteEventsV1beta1NamespacedEventResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchEventsV1beta1NamespacedEvent operation.
 */
export type PatchEventsV1beta1NamespacedEventResponse = Iok8sapieventsv1beta1Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapieventsv1beta1Event;
    };
};

/**
 * Contains response data for the watchEventsV1beta1EventListForAllNamespaces operation.
 */
export type WatchEventsV1beta1EventListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchEventsV1beta1NamespacedEventList operation.
 */
export type WatchEventsV1beta1NamespacedEventListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchEventsV1beta1NamespacedEvent operation.
 */
export type WatchEventsV1beta1NamespacedEventResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getExtensionsAPIGroup operation.
 */
export type GetExtensionsAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getExtensionsV1beta1APIResources operation.
 */
export type GetExtensionsV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1DaemonSetForAllNamespaces operation.
 */
export type ListExtensionsV1beta1DaemonSetForAllNamespacesResponse = Iok8sapiextensionsv1beta1DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSetList;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1DeploymentForAllNamespaces operation.
 */
export type ListExtensionsV1beta1DeploymentForAllNamespacesResponse = Iok8sapiextensionsv1beta1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DeploymentList;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1IngressForAllNamespaces operation.
 */
export type ListExtensionsV1beta1IngressForAllNamespacesResponse = Iok8sapiextensionsv1beta1IngressList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1IngressList;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type ListExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapiextensionsv1beta1DaemonSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSetList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type CreateExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionNamespacedDaemonSet operation.
 */
export type DeleteExtensionsV1beta1CollectionNamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type ReadExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type ReplaceExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type DeleteExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type PatchExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedDaemonSetStatus operation.
 */
export type ReadExtensionsV1beta1NamespacedDaemonSetStatusResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedDaemonSetStatus operation.
 */
export type ReplaceExtensionsV1beta1NamespacedDaemonSetStatusResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedDaemonSetStatus operation.
 */
export type PatchExtensionsV1beta1NamespacedDaemonSetStatusResponse = Iok8sapiextensionsv1beta1DaemonSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DaemonSet;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NamespacedDeployment operation.
 */
export type ListExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapiextensionsv1beta1DeploymentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DeploymentList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedDeployment operation.
 */
export type CreateExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionNamespacedDeployment operation.
 */
export type DeleteExtensionsV1beta1CollectionNamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedDeployment operation.
 */
export type ReadExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedDeployment operation.
 */
export type ReplaceExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1NamespacedDeployment operation.
 */
export type DeleteExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedDeployment operation.
 */
export type PatchExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedDeploymentRollback operation.
 */
export type CreateExtensionsV1beta1NamespacedDeploymentRollbackResponse = Iok8sapiextensionsv1beta1DeploymentRollback & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1DeploymentRollback;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedDeploymentScale operation.
 */
export type ReadExtensionsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedDeploymentScale operation.
 */
export type ReplaceExtensionsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedDeploymentScale operation.
 */
export type PatchExtensionsV1beta1NamespacedDeploymentScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedDeploymentStatus operation.
 */
export type ReadExtensionsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedDeploymentStatus operation.
 */
export type ReplaceExtensionsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedDeploymentStatus operation.
 */
export type PatchExtensionsV1beta1NamespacedDeploymentStatusResponse = Iok8sapiextensionsv1beta1Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Deployment;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NamespacedIngress operation.
 */
export type ListExtensionsV1beta1NamespacedIngressResponse = Iok8sapiextensionsv1beta1IngressList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1IngressList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedIngress operation.
 */
export type CreateExtensionsV1beta1NamespacedIngressResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionNamespacedIngress operation.
 */
export type DeleteExtensionsV1beta1CollectionNamespacedIngressResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedIngress operation.
 */
export type ReadExtensionsV1beta1NamespacedIngressResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedIngress operation.
 */
export type ReplaceExtensionsV1beta1NamespacedIngressResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1NamespacedIngress operation.
 */
export type DeleteExtensionsV1beta1NamespacedIngressResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedIngress operation.
 */
export type PatchExtensionsV1beta1NamespacedIngressResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedIngressStatus operation.
 */
export type ReadExtensionsV1beta1NamespacedIngressStatusResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedIngressStatus operation.
 */
export type ReplaceExtensionsV1beta1NamespacedIngressStatusResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedIngressStatus operation.
 */
export type PatchExtensionsV1beta1NamespacedIngressStatusResponse = Iok8sapiextensionsv1beta1Ingress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Ingress;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type ListExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapiextensionsv1beta1NetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicyList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type CreateExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapiextensionsv1beta1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicy;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy
 * operation.
 */
export type DeleteExtensionsV1beta1CollectionNamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type ReadExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapiextensionsv1beta1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicy;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type ReplaceExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapiextensionsv1beta1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicy;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type DeleteExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type PatchExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapiextensionsv1beta1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicy;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type ListExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapiextensionsv1beta1ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSetList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type CreateExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionNamespacedReplicaSet operation.
 */
export type DeleteExtensionsV1beta1CollectionNamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type ReadExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type ReplaceExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type DeleteExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type PatchExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedReplicaSetScale operation.
 */
export type ReadExtensionsV1beta1NamespacedReplicaSetScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedReplicaSetScale operation.
 */
export type ReplaceExtensionsV1beta1NamespacedReplicaSetScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedReplicaSetScale operation.
 */
export type PatchExtensionsV1beta1NamespacedReplicaSetScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedReplicaSetStatus operation.
 */
export type ReadExtensionsV1beta1NamespacedReplicaSetStatusResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedReplicaSetStatus operation.
 */
export type ReplaceExtensionsV1beta1NamespacedReplicaSetStatusResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedReplicaSetStatus operation.
 */
export type PatchExtensionsV1beta1NamespacedReplicaSetStatusResponse = Iok8sapiextensionsv1beta1ReplicaSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSet;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1NamespacedReplicationControllerDummyScale
 * operation.
 */
export type ReadExtensionsV1beta1NamespacedReplicationControllerDummyScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1NamespacedReplicationControllerDummyScale
 * operation.
 */
export type ReplaceExtensionsV1beta1NamespacedReplicationControllerDummyScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1NamespacedReplicationControllerDummyScale
 * operation.
 */
export type PatchExtensionsV1beta1NamespacedReplicationControllerDummyScaleResponse = Iok8sapiextensionsv1beta1Scale & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1Scale;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1NetworkPolicyForAllNamespaces operation.
 */
export type ListExtensionsV1beta1NetworkPolicyForAllNamespacesResponse = Iok8sapiextensionsv1beta1NetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1NetworkPolicyList;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1PodSecurityPolicy operation.
 */
export type ListExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapiextensionsv1beta1PodSecurityPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1PodSecurityPolicyList;
    };
};

/**
 * Contains response data for the createExtensionsV1beta1PodSecurityPolicy operation.
 */
export type CreateExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapiextensionsv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1CollectionPodSecurityPolicy operation.
 */
export type DeleteExtensionsV1beta1CollectionPodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readExtensionsV1beta1PodSecurityPolicy operation.
 */
export type ReadExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapiextensionsv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the replaceExtensionsV1beta1PodSecurityPolicy operation.
 */
export type ReplaceExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapiextensionsv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the deleteExtensionsV1beta1PodSecurityPolicy operation.
 */
export type DeleteExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchExtensionsV1beta1PodSecurityPolicy operation.
 */
export type PatchExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapiextensionsv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the listExtensionsV1beta1ReplicaSetForAllNamespaces operation.
 */
export type ListExtensionsV1beta1ReplicaSetForAllNamespacesResponse = Iok8sapiextensionsv1beta1ReplicaSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapiextensionsv1beta1ReplicaSetList;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1DaemonSetListForAllNamespaces operation.
 */
export type WatchExtensionsV1beta1DaemonSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1DeploymentListForAllNamespaces operation.
 */
export type WatchExtensionsV1beta1DeploymentListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1IngressListForAllNamespaces operation.
 */
export type WatchExtensionsV1beta1IngressListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedDaemonSetList operation.
 */
export type WatchExtensionsV1beta1NamespacedDaemonSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedDaemonSet operation.
 */
export type WatchExtensionsV1beta1NamespacedDaemonSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedDeploymentList operation.
 */
export type WatchExtensionsV1beta1NamespacedDeploymentListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedDeployment operation.
 */
export type WatchExtensionsV1beta1NamespacedDeploymentResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedIngressList operation.
 */
export type WatchExtensionsV1beta1NamespacedIngressListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedIngress operation.
 */
export type WatchExtensionsV1beta1NamespacedIngressResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedNetworkPolicyList operation.
 */
export type WatchExtensionsV1beta1NamespacedNetworkPolicyListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedNetworkPolicy operation.
 */
export type WatchExtensionsV1beta1NamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedReplicaSetList operation.
 */
export type WatchExtensionsV1beta1NamespacedReplicaSetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NamespacedReplicaSet operation.
 */
export type WatchExtensionsV1beta1NamespacedReplicaSetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1NetworkPolicyListForAllNamespaces
 * operation.
 */
export type WatchExtensionsV1beta1NetworkPolicyListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1PodSecurityPolicyList operation.
 */
export type WatchExtensionsV1beta1PodSecurityPolicyListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1PodSecurityPolicy operation.
 */
export type WatchExtensionsV1beta1PodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchExtensionsV1beta1ReplicaSetListForAllNamespaces operation.
 */
export type WatchExtensionsV1beta1ReplicaSetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getImageOpenshiftIoAPIGroup operation.
 */
export type GetImageOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getImageOpenshiftIoV1APIResources operation.
 */
export type GetImageOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listImageOpenshiftIoV1Image operation.
 */
export type ListImageOpenshiftIoV1ImageResponse = Comgithubopenshiftapiimagev1ImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageList;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1Image operation.
 */
export type CreateImageOpenshiftIoV1ImageResponse = Comgithubopenshiftapiimagev1Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1Image;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1CollectionImage operation.
 */
export type DeleteImageOpenshiftIoV1CollectionImageResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1Image operation.
 */
export type ReadImageOpenshiftIoV1ImageResponse = Comgithubopenshiftapiimagev1Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1Image;
    };
};

/**
 * Contains response data for the replaceImageOpenshiftIoV1Image operation.
 */
export type ReplaceImageOpenshiftIoV1ImageResponse = Comgithubopenshiftapiimagev1Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1Image;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1Image operation.
 */
export type DeleteImageOpenshiftIoV1ImageResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchImageOpenshiftIoV1Image operation.
 */
export type PatchImageOpenshiftIoV1ImageResponse = Comgithubopenshiftapiimagev1Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1Image;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1ImageSignature operation.
 */
export type CreateImageOpenshiftIoV1ImageSignatureResponse = Comgithubopenshiftapiimagev1ImageSignature & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageSignature;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1ImageSignature operation.
 */
export type DeleteImageOpenshiftIoV1ImageSignatureResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the listImageOpenshiftIoV1ImageStreamForAllNamespaces operation.
 */
export type ListImageOpenshiftIoV1ImageStreamForAllNamespacesResponse = Comgithubopenshiftapiimagev1ImageStreamList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamList;
    };
};

/**
 * Contains response data for the listImageOpenshiftIoV1ImageStreamTagForAllNamespaces operation.
 */
export type ListImageOpenshiftIoV1ImageStreamTagForAllNamespacesResponse = Comgithubopenshiftapiimagev1ImageStreamTagList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTagList;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStreamImage operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamImageResponse = Comgithubopenshiftapiimagev1ImageStreamImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamImage;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1NamespacedImageStreamImport operation.
 */
export type CreateImageOpenshiftIoV1NamespacedImageStreamImportResponse = Comgithubopenshiftapiimagev1ImageStreamImport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamImport;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1NamespacedImageStreamMapping operation.
 */
export type CreateImageOpenshiftIoV1NamespacedImageStreamMappingResponse = Comgithubopenshiftapiimagev1ImageStreamMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamMapping;
    };
};

/**
 * Contains response data for the listImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type ListImageOpenshiftIoV1NamespacedImageStreamResponse = Comgithubopenshiftapiimagev1ImageStreamList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamList;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type CreateImageOpenshiftIoV1NamespacedImageStreamResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1CollectionNamespacedImageStream
 * operation.
 */
export type DeleteImageOpenshiftIoV1CollectionNamespacedImageStreamResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the replaceImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type ReplaceImageOpenshiftIoV1NamespacedImageStreamResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type DeleteImageOpenshiftIoV1NamespacedImageStreamResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type PatchImageOpenshiftIoV1NamespacedImageStreamResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStreamLayers operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamLayersResponse = Comgithubopenshiftapiimagev1ImageStreamLayers & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamLayers;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStreamSecrets operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamSecretsResponse = V1SecretList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: V1SecretList;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStreamStatus operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamStatusResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the replaceImageOpenshiftIoV1NamespacedImageStreamStatus operation.
 */
export type ReplaceImageOpenshiftIoV1NamespacedImageStreamStatusResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the patchImageOpenshiftIoV1NamespacedImageStreamStatus operation.
 */
export type PatchImageOpenshiftIoV1NamespacedImageStreamStatusResponse = Comgithubopenshiftapiimagev1ImageStream & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStream;
    };
};

/**
 * Contains response data for the listImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type ListImageOpenshiftIoV1NamespacedImageStreamTagResponse = Comgithubopenshiftapiimagev1ImageStreamTagList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTagList;
    };
};

/**
 * Contains response data for the createImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type CreateImageOpenshiftIoV1NamespacedImageStreamTagResponse = Comgithubopenshiftapiimagev1ImageStreamTag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTag;
    };
};

/**
 * Contains response data for the readImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type ReadImageOpenshiftIoV1NamespacedImageStreamTagResponse = Comgithubopenshiftapiimagev1ImageStreamTag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTag;
    };
};

/**
 * Contains response data for the replaceImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type ReplaceImageOpenshiftIoV1NamespacedImageStreamTagResponse = Comgithubopenshiftapiimagev1ImageStreamTag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTag;
    };
};

/**
 * Contains response data for the deleteImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type DeleteImageOpenshiftIoV1NamespacedImageStreamTagResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchImageOpenshiftIoV1NamespacedImageStreamTag operation.
 */
export type PatchImageOpenshiftIoV1NamespacedImageStreamTagResponse = Comgithubopenshiftapiimagev1ImageStreamTag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiimagev1ImageStreamTag;
    };
};

/**
 * Contains response data for the watchImageOpenshiftIoV1ImageList operation.
 */
export type WatchImageOpenshiftIoV1ImageListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchImageOpenshiftIoV1Image operation.
 */
export type WatchImageOpenshiftIoV1ImageResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchImageOpenshiftIoV1ImageStreamListForAllNamespaces operation.
 */
export type WatchImageOpenshiftIoV1ImageStreamListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchImageOpenshiftIoV1NamespacedImageStreamList operation.
 */
export type WatchImageOpenshiftIoV1NamespacedImageStreamListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchImageOpenshiftIoV1NamespacedImageStream operation.
 */
export type WatchImageOpenshiftIoV1NamespacedImageStreamResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getNetworkOpenshiftIoAPIGroup operation.
 */
export type GetNetworkOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getNetworkOpenshiftIoV1APIResources operation.
 */
export type GetNetworkOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type ListNetworkOpenshiftIoV1ClusterNetworkResponse = Comgithubopenshiftapinetworkv1ClusterNetworkList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1ClusterNetworkList;
    };
};

/**
 * Contains response data for the createNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type CreateNetworkOpenshiftIoV1ClusterNetworkResponse = Comgithubopenshiftapinetworkv1ClusterNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1ClusterNetwork;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1CollectionClusterNetwork operation.
 */
export type DeleteNetworkOpenshiftIoV1CollectionClusterNetworkResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type ReadNetworkOpenshiftIoV1ClusterNetworkResponse = Comgithubopenshiftapinetworkv1ClusterNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1ClusterNetwork;
    };
};

/**
 * Contains response data for the replaceNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type ReplaceNetworkOpenshiftIoV1ClusterNetworkResponse = Comgithubopenshiftapinetworkv1ClusterNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1ClusterNetwork;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type DeleteNetworkOpenshiftIoV1ClusterNetworkResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type PatchNetworkOpenshiftIoV1ClusterNetworkResponse = Comgithubopenshiftapinetworkv1ClusterNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1ClusterNetwork;
    };
};

/**
 * Contains response data for the listNetworkOpenshiftIoV1EgressNetworkPolicyForAllNamespaces
 * operation.
 */
export type ListNetworkOpenshiftIoV1EgressNetworkPolicyForAllNamespacesResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicyList;
    };
};

/**
 * Contains response data for the listNetworkOpenshiftIoV1HostSubnet operation.
 */
export type ListNetworkOpenshiftIoV1HostSubnetResponse = Comgithubopenshiftapinetworkv1HostSubnetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1HostSubnetList;
    };
};

/**
 * Contains response data for the createNetworkOpenshiftIoV1HostSubnet operation.
 */
export type CreateNetworkOpenshiftIoV1HostSubnetResponse = Comgithubopenshiftapinetworkv1HostSubnet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1HostSubnet;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1CollectionHostSubnet operation.
 */
export type DeleteNetworkOpenshiftIoV1CollectionHostSubnetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readNetworkOpenshiftIoV1HostSubnet operation.
 */
export type ReadNetworkOpenshiftIoV1HostSubnetResponse = Comgithubopenshiftapinetworkv1HostSubnet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1HostSubnet;
    };
};

/**
 * Contains response data for the replaceNetworkOpenshiftIoV1HostSubnet operation.
 */
export type ReplaceNetworkOpenshiftIoV1HostSubnetResponse = Comgithubopenshiftapinetworkv1HostSubnet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1HostSubnet;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1HostSubnet operation.
 */
export type DeleteNetworkOpenshiftIoV1HostSubnetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchNetworkOpenshiftIoV1HostSubnet operation.
 */
export type PatchNetworkOpenshiftIoV1HostSubnetResponse = Comgithubopenshiftapinetworkv1HostSubnet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1HostSubnet;
    };
};

/**
 * Contains response data for the listNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy operation.
 */
export type ListNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicyList;
    };
};

/**
 * Contains response data for the createNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy
 * operation.
 */
export type CreateNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicy;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1CollectionNamespacedEgressNetworkPolicy
 * operation.
 */
export type DeleteNetworkOpenshiftIoV1CollectionNamespacedEgressNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy operation.
 */
export type ReadNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicy;
    };
};

/**
 * Contains response data for the replaceNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy
 * operation.
 */
export type ReplaceNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicy;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy
 * operation.
 */
export type DeleteNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy operation.
 */
export type PatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Comgithubopenshiftapinetworkv1EgressNetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1EgressNetworkPolicy;
    };
};

/**
 * Contains response data for the listNetworkOpenshiftIoV1NetNamespace operation.
 */
export type ListNetworkOpenshiftIoV1NetNamespaceResponse = Comgithubopenshiftapinetworkv1NetNamespaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1NetNamespaceList;
    };
};

/**
 * Contains response data for the createNetworkOpenshiftIoV1NetNamespace operation.
 */
export type CreateNetworkOpenshiftIoV1NetNamespaceResponse = Comgithubopenshiftapinetworkv1NetNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1NetNamespace;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1CollectionNetNamespace operation.
 */
export type DeleteNetworkOpenshiftIoV1CollectionNetNamespaceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readNetworkOpenshiftIoV1NetNamespace operation.
 */
export type ReadNetworkOpenshiftIoV1NetNamespaceResponse = Comgithubopenshiftapinetworkv1NetNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1NetNamespace;
    };
};

/**
 * Contains response data for the replaceNetworkOpenshiftIoV1NetNamespace operation.
 */
export type ReplaceNetworkOpenshiftIoV1NetNamespaceResponse = Comgithubopenshiftapinetworkv1NetNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1NetNamespace;
    };
};

/**
 * Contains response data for the deleteNetworkOpenshiftIoV1NetNamespace operation.
 */
export type DeleteNetworkOpenshiftIoV1NetNamespaceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchNetworkOpenshiftIoV1NetNamespace operation.
 */
export type PatchNetworkOpenshiftIoV1NetNamespaceResponse = Comgithubopenshiftapinetworkv1NetNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapinetworkv1NetNamespace;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1ClusterNetworkList operation.
 */
export type WatchNetworkOpenshiftIoV1ClusterNetworkListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1ClusterNetwork operation.
 */
export type WatchNetworkOpenshiftIoV1ClusterNetworkResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1EgressNetworkPolicyListForAllNamespaces
 * operation.
 */
export type WatchNetworkOpenshiftIoV1EgressNetworkPolicyListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1HostSubnetList operation.
 */
export type WatchNetworkOpenshiftIoV1HostSubnetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1HostSubnet operation.
 */
export type WatchNetworkOpenshiftIoV1HostSubnetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyList
 * operation.
 */
export type WatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy operation.
 */
export type WatchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1NetNamespaceList operation.
 */
export type WatchNetworkOpenshiftIoV1NetNamespaceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkOpenshiftIoV1NetNamespace operation.
 */
export type WatchNetworkOpenshiftIoV1NetNamespaceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getNetworkingAPIGroup operation.
 */
export type GetNetworkingAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getNetworkingV1APIResources operation.
 */
export type GetNetworkingV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listNetworkingV1NamespacedNetworkPolicy operation.
 */
export type ListNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapinetworkingv1NetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicyList;
    };
};

/**
 * Contains response data for the createNetworkingV1NamespacedNetworkPolicy operation.
 */
export type CreateNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapinetworkingv1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicy;
    };
};

/**
 * Contains response data for the deleteNetworkingV1CollectionNamespacedNetworkPolicy operation.
 */
export type DeleteNetworkingV1CollectionNamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readNetworkingV1NamespacedNetworkPolicy operation.
 */
export type ReadNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapinetworkingv1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicy;
    };
};

/**
 * Contains response data for the replaceNetworkingV1NamespacedNetworkPolicy operation.
 */
export type ReplaceNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapinetworkingv1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicy;
    };
};

/**
 * Contains response data for the deleteNetworkingV1NamespacedNetworkPolicy operation.
 */
export type DeleteNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchNetworkingV1NamespacedNetworkPolicy operation.
 */
export type PatchNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapinetworkingv1NetworkPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicy;
    };
};

/**
 * Contains response data for the listNetworkingV1NetworkPolicyForAllNamespaces operation.
 */
export type ListNetworkingV1NetworkPolicyForAllNamespacesResponse = Iok8sapinetworkingv1NetworkPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapinetworkingv1NetworkPolicyList;
    };
};

/**
 * Contains response data for the watchNetworkingV1NamespacedNetworkPolicyList operation.
 */
export type WatchNetworkingV1NamespacedNetworkPolicyListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkingV1NamespacedNetworkPolicy operation.
 */
export type WatchNetworkingV1NamespacedNetworkPolicyResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchNetworkingV1NetworkPolicyListForAllNamespaces operation.
 */
export type WatchNetworkingV1NetworkPolicyListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getOauthOpenshiftIoAPIGroup operation.
 */
export type GetOauthOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getOauthOpenshiftIoV1APIResources operation.
 */
export type GetOauthOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type ListOauthOpenshiftIoV1OAuthAccessTokenResponse = Comgithubopenshiftapioauthv1OAuthAccessTokenList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAccessTokenList;
    };
};

/**
 * Contains response data for the createOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type CreateOauthOpenshiftIoV1OAuthAccessTokenResponse = Comgithubopenshiftapioauthv1OAuthAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAccessToken;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1CollectionOAuthAccessToken operation.
 */
export type DeleteOauthOpenshiftIoV1CollectionOAuthAccessTokenResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type ReadOauthOpenshiftIoV1OAuthAccessTokenResponse = Comgithubopenshiftapioauthv1OAuthAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAccessToken;
    };
};

/**
 * Contains response data for the replaceOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type ReplaceOauthOpenshiftIoV1OAuthAccessTokenResponse = Comgithubopenshiftapioauthv1OAuthAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAccessToken;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type DeleteOauthOpenshiftIoV1OAuthAccessTokenResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type PatchOauthOpenshiftIoV1OAuthAccessTokenResponse = Comgithubopenshiftapioauthv1OAuthAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAccessToken;
    };
};

/**
 * Contains response data for the listOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type ListOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAuthorizeTokenList;
    };
};

/**
 * Contains response data for the createOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type CreateOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Comgithubopenshiftapioauthv1OAuthAuthorizeToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAuthorizeToken;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1CollectionOAuthAuthorizeToken operation.
 */
export type DeleteOauthOpenshiftIoV1CollectionOAuthAuthorizeTokenResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type ReadOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Comgithubopenshiftapioauthv1OAuthAuthorizeToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAuthorizeToken;
    };
};

/**
 * Contains response data for the replaceOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type ReplaceOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Comgithubopenshiftapioauthv1OAuthAuthorizeToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAuthorizeToken;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type DeleteOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type PatchOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Comgithubopenshiftapioauthv1OAuthAuthorizeToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthAuthorizeToken;
    };
};

/**
 * Contains response data for the listOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type ListOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Comgithubopenshiftapioauthv1OAuthClientAuthorizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientAuthorizationList;
    };
};

/**
 * Contains response data for the createOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type CreateOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Comgithubopenshiftapioauthv1OAuthClientAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientAuthorization;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1CollectionOAuthClientAuthorization
 * operation.
 */
export type DeleteOauthOpenshiftIoV1CollectionOAuthClientAuthorizationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type ReadOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Comgithubopenshiftapioauthv1OAuthClientAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientAuthorization;
    };
};

/**
 * Contains response data for the replaceOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type ReplaceOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Comgithubopenshiftapioauthv1OAuthClientAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientAuthorization;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type DeleteOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type PatchOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Comgithubopenshiftapioauthv1OAuthClientAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientAuthorization;
    };
};

/**
 * Contains response data for the listOauthOpenshiftIoV1OAuthClient operation.
 */
export type ListOauthOpenshiftIoV1OAuthClientResponse = Comgithubopenshiftapioauthv1OAuthClientList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClientList;
    };
};

/**
 * Contains response data for the createOauthOpenshiftIoV1OAuthClient operation.
 */
export type CreateOauthOpenshiftIoV1OAuthClientResponse = Comgithubopenshiftapioauthv1OAuthClient & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClient;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1CollectionOAuthClient operation.
 */
export type DeleteOauthOpenshiftIoV1CollectionOAuthClientResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readOauthOpenshiftIoV1OAuthClient operation.
 */
export type ReadOauthOpenshiftIoV1OAuthClientResponse = Comgithubopenshiftapioauthv1OAuthClient & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClient;
    };
};

/**
 * Contains response data for the replaceOauthOpenshiftIoV1OAuthClient operation.
 */
export type ReplaceOauthOpenshiftIoV1OAuthClientResponse = Comgithubopenshiftapioauthv1OAuthClient & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClient;
    };
};

/**
 * Contains response data for the deleteOauthOpenshiftIoV1OAuthClient operation.
 */
export type DeleteOauthOpenshiftIoV1OAuthClientResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchOauthOpenshiftIoV1OAuthClient operation.
 */
export type PatchOauthOpenshiftIoV1OAuthClientResponse = Comgithubopenshiftapioauthv1OAuthClient & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapioauthv1OAuthClient;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthAccessTokenList operation.
 */
export type WatchOauthOpenshiftIoV1OAuthAccessTokenListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthAccessToken operation.
 */
export type WatchOauthOpenshiftIoV1OAuthAccessTokenResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthAuthorizeTokenList operation.
 */
export type WatchOauthOpenshiftIoV1OAuthAuthorizeTokenListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthAuthorizeToken operation.
 */
export type WatchOauthOpenshiftIoV1OAuthAuthorizeTokenResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthClientAuthorizationList operation.
 */
export type WatchOauthOpenshiftIoV1OAuthClientAuthorizationListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthClientAuthorization operation.
 */
export type WatchOauthOpenshiftIoV1OAuthClientAuthorizationResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthClientList operation.
 */
export type WatchOauthOpenshiftIoV1OAuthClientListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchOauthOpenshiftIoV1OAuthClient operation.
 */
export type WatchOauthOpenshiftIoV1OAuthClientResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getPolicyAPIGroup operation.
 */
export type GetPolicyAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getPolicyV1beta1APIResources operation.
 */
export type GetPolicyV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listPolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type ListPolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapipolicyv1beta1PodDisruptionBudgetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudgetList;
    };
};

/**
 * Contains response data for the createPolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type CreatePolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget
 * operation.
 */
export type DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readPolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type ReadPolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the replacePolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type ReplacePolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the deletePolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type DeletePolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchPolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type PatchPolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the readPolicyV1beta1NamespacedPodDisruptionBudgetStatus operation.
 */
export type ReadPolicyV1beta1NamespacedPodDisruptionBudgetStatusResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus
 * operation.
 */
export type ReplacePolicyV1beta1NamespacedPodDisruptionBudgetStatusResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus operation.
 */
export type PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusResponse = Iok8sapipolicyv1beta1PodDisruptionBudget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudget;
    };
};

/**
 * Contains response data for the listPolicyV1beta1PodDisruptionBudgetForAllNamespaces operation.
 */
export type ListPolicyV1beta1PodDisruptionBudgetForAllNamespacesResponse = Iok8sapipolicyv1beta1PodDisruptionBudgetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodDisruptionBudgetList;
    };
};

/**
 * Contains response data for the listPolicyV1beta1PodSecurityPolicy operation.
 */
export type ListPolicyV1beta1PodSecurityPolicyResponse = Iok8sapipolicyv1beta1PodSecurityPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodSecurityPolicyList;
    };
};

/**
 * Contains response data for the createPolicyV1beta1PodSecurityPolicy operation.
 */
export type CreatePolicyV1beta1PodSecurityPolicyResponse = Iok8sapipolicyv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the deletePolicyV1beta1CollectionPodSecurityPolicy operation.
 */
export type DeletePolicyV1beta1CollectionPodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readPolicyV1beta1PodSecurityPolicy operation.
 */
export type ReadPolicyV1beta1PodSecurityPolicyResponse = Iok8sapipolicyv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the replacePolicyV1beta1PodSecurityPolicy operation.
 */
export type ReplacePolicyV1beta1PodSecurityPolicyResponse = Iok8sapipolicyv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the deletePolicyV1beta1PodSecurityPolicy operation.
 */
export type DeletePolicyV1beta1PodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchPolicyV1beta1PodSecurityPolicy operation.
 */
export type PatchPolicyV1beta1PodSecurityPolicyResponse = Iok8sapipolicyv1beta1PodSecurityPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapipolicyv1beta1PodSecurityPolicy;
    };
};

/**
 * Contains response data for the watchPolicyV1beta1NamespacedPodDisruptionBudgetList operation.
 */
export type WatchPolicyV1beta1NamespacedPodDisruptionBudgetListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchPolicyV1beta1NamespacedPodDisruptionBudget operation.
 */
export type WatchPolicyV1beta1NamespacedPodDisruptionBudgetResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces
 * operation.
 */
export type WatchPolicyV1beta1PodDisruptionBudgetListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchPolicyV1beta1PodSecurityPolicyList operation.
 */
export type WatchPolicyV1beta1PodSecurityPolicyListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchPolicyV1beta1PodSecurityPolicy operation.
 */
export type WatchPolicyV1beta1PodSecurityPolicyResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getProjectOpenshiftIoAPIGroup operation.
 */
export type GetProjectOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getProjectOpenshiftIoV1APIResources operation.
 */
export type GetProjectOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listProjectOpenshiftIoV1ProjectRequest operation.
 */
export type ListProjectOpenshiftIoV1ProjectRequestResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the createProjectOpenshiftIoV1ProjectRequest operation.
 */
export type CreateProjectOpenshiftIoV1ProjectRequestResponse = Comgithubopenshiftapiprojectv1ProjectRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1ProjectRequest;
    };
};

/**
 * Contains response data for the listProjectOpenshiftIoV1Project operation.
 */
export type ListProjectOpenshiftIoV1ProjectResponse = Comgithubopenshiftapiprojectv1ProjectList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1ProjectList;
    };
};

/**
 * Contains response data for the createProjectOpenshiftIoV1Project operation.
 */
export type CreateProjectOpenshiftIoV1ProjectResponse = Comgithubopenshiftapiprojectv1Project & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1Project;
    };
};

/**
 * Contains response data for the readProjectOpenshiftIoV1Project operation.
 */
export type ReadProjectOpenshiftIoV1ProjectResponse = Comgithubopenshiftapiprojectv1Project & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1Project;
    };
};

/**
 * Contains response data for the replaceProjectOpenshiftIoV1Project operation.
 */
export type ReplaceProjectOpenshiftIoV1ProjectResponse = Comgithubopenshiftapiprojectv1Project & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1Project;
    };
};

/**
 * Contains response data for the deleteProjectOpenshiftIoV1Project operation.
 */
export type DeleteProjectOpenshiftIoV1ProjectResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchProjectOpenshiftIoV1Project operation.
 */
export type PatchProjectOpenshiftIoV1ProjectResponse = Comgithubopenshiftapiprojectv1Project & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiprojectv1Project;
    };
};

/**
 * Contains response data for the watchProjectOpenshiftIoV1ProjectList operation.
 */
export type WatchProjectOpenshiftIoV1ProjectListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchProjectOpenshiftIoV1Project operation.
 */
export type WatchProjectOpenshiftIoV1ProjectResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getQuotaOpenshiftIoAPIGroup operation.
 */
export type GetQuotaOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getQuotaOpenshiftIoV1APIResources operation.
 */
export type GetQuotaOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespaces
 * operation.
 */
export type ListQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespacesResponse = Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList;
    };
};

/**
 * Contains response data for the listQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type ListQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1ClusterResourceQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuotaList;
    };
};

/**
 * Contains response data for the createQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type CreateQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the deleteQuotaOpenshiftIoV1CollectionClusterResourceQuota operation.
 */
export type DeleteQuotaOpenshiftIoV1CollectionClusterResourceQuotaResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type ReadQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the replaceQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type ReplaceQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the deleteQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type DeleteQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type PatchQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the readQuotaOpenshiftIoV1ClusterResourceQuotaStatus operation.
 */
export type ReadQuotaOpenshiftIoV1ClusterResourceQuotaStatusResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the replaceQuotaOpenshiftIoV1ClusterResourceQuotaStatus operation.
 */
export type ReplaceQuotaOpenshiftIoV1ClusterResourceQuotaStatusResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the patchQuotaOpenshiftIoV1ClusterResourceQuotaStatus operation.
 */
export type PatchQuotaOpenshiftIoV1ClusterResourceQuotaStatusResponse = Comgithubopenshiftapiquotav1ClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1ClusterResourceQuota;
    };
};

/**
 * Contains response data for the listQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota
 * operation.
 */
export type ListQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1AppliedClusterResourceQuotaList;
    };
};

/**
 * Contains response data for the readQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota
 * operation.
 */
export type ReadQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaResponse = Comgithubopenshiftapiquotav1AppliedClusterResourceQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiquotav1AppliedClusterResourceQuota;
    };
};

/**
 * Contains response data for the watchQuotaOpenshiftIoV1ClusterResourceQuotaList operation.
 */
export type WatchQuotaOpenshiftIoV1ClusterResourceQuotaListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchQuotaOpenshiftIoV1ClusterResourceQuota operation.
 */
export type WatchQuotaOpenshiftIoV1ClusterResourceQuotaResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getRbacAuthorizationAPIGroup operation.
 */
export type GetRbacAuthorizationAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getRbacAuthorizationV1APIResources operation.
 */
export type GetRbacAuthorizationV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type ListRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapirbacv1ClusterRoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleBindingList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type CreateRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapirbacv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1CollectionClusterRoleBinding operation.
 */
export type DeleteRbacAuthorizationV1CollectionClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type ReadRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapirbacv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type ReplaceRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapirbacv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type DeleteRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type PatchRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapirbacv1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1ClusterRole operation.
 */
export type ListRbacAuthorizationV1ClusterRoleResponse = Iok8sapirbacv1ClusterRoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRoleList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1ClusterRole operation.
 */
export type CreateRbacAuthorizationV1ClusterRoleResponse = Iok8sapirbacv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRole;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1CollectionClusterRole operation.
 */
export type DeleteRbacAuthorizationV1CollectionClusterRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1ClusterRole operation.
 */
export type ReadRbacAuthorizationV1ClusterRoleResponse = Iok8sapirbacv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRole;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1ClusterRole operation.
 */
export type ReplaceRbacAuthorizationV1ClusterRoleResponse = Iok8sapirbacv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRole;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1ClusterRole operation.
 */
export type DeleteRbacAuthorizationV1ClusterRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1ClusterRole operation.
 */
export type PatchRbacAuthorizationV1ClusterRoleResponse = Iok8sapirbacv1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1ClusterRole;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type ListRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapirbacv1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBindingList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type CreateRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapirbacv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1CollectionNamespacedRoleBinding
 * operation.
 */
export type DeleteRbacAuthorizationV1CollectionNamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type ReadRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapirbacv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBinding;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type ReplaceRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapirbacv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type DeleteRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type PatchRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapirbacv1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBinding;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1NamespacedRole operation.
 */
export type ListRbacAuthorizationV1NamespacedRoleResponse = Iok8sapirbacv1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1NamespacedRole operation.
 */
export type CreateRbacAuthorizationV1NamespacedRoleResponse = Iok8sapirbacv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1Role;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1CollectionNamespacedRole operation.
 */
export type DeleteRbacAuthorizationV1CollectionNamespacedRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1NamespacedRole operation.
 */
export type ReadRbacAuthorizationV1NamespacedRoleResponse = Iok8sapirbacv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1Role;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1NamespacedRole operation.
 */
export type ReplaceRbacAuthorizationV1NamespacedRoleResponse = Iok8sapirbacv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1Role;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1NamespacedRole operation.
 */
export type DeleteRbacAuthorizationV1NamespacedRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1NamespacedRole operation.
 */
export type PatchRbacAuthorizationV1NamespacedRoleResponse = Iok8sapirbacv1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1Role;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1RoleBindingForAllNamespaces operation.
 */
export type ListRbacAuthorizationV1RoleBindingForAllNamespacesResponse = Iok8sapirbacv1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleBindingList;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1RoleForAllNamespaces operation.
 */
export type ListRbacAuthorizationV1RoleForAllNamespacesResponse = Iok8sapirbacv1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1RoleList;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1ClusterRoleBindingList operation.
 */
export type WatchRbacAuthorizationV1ClusterRoleBindingListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1ClusterRoleBinding operation.
 */
export type WatchRbacAuthorizationV1ClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1ClusterRoleList operation.
 */
export type WatchRbacAuthorizationV1ClusterRoleListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1ClusterRole operation.
 */
export type WatchRbacAuthorizationV1ClusterRoleResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1NamespacedRoleBindingList operation.
 */
export type WatchRbacAuthorizationV1NamespacedRoleBindingListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1NamespacedRoleBinding operation.
 */
export type WatchRbacAuthorizationV1NamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1NamespacedRoleList operation.
 */
export type WatchRbacAuthorizationV1NamespacedRoleListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1NamespacedRole operation.
 */
export type WatchRbacAuthorizationV1NamespacedRoleResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1RoleBindingListForAllNamespaces
 * operation.
 */
export type WatchRbacAuthorizationV1RoleBindingListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1RoleListForAllNamespaces operation.
 */
export type WatchRbacAuthorizationV1RoleListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getRbacAuthorizationV1beta1APIResources operation.
 */
export type GetRbacAuthorizationV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type ListRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapirbacv1beta1ClusterRoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleBindingList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type CreateRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapirbacv1beta1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1CollectionClusterRoleBinding
 * operation.
 */
export type DeleteRbacAuthorizationV1beta1CollectionClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type ReadRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapirbacv1beta1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type ReplaceRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapirbacv1beta1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type DeleteRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type PatchRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapirbacv1beta1ClusterRoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleBinding;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1ClusterRole operation.
 */
export type ListRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapirbacv1beta1ClusterRoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRoleList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1beta1ClusterRole operation.
 */
export type CreateRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapirbacv1beta1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRole;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1CollectionClusterRole operation.
 */
export type DeleteRbacAuthorizationV1beta1CollectionClusterRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1beta1ClusterRole operation.
 */
export type ReadRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapirbacv1beta1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRole;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1beta1ClusterRole operation.
 */
export type ReplaceRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapirbacv1beta1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRole;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1ClusterRole operation.
 */
export type DeleteRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1beta1ClusterRole operation.
 */
export type PatchRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapirbacv1beta1ClusterRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1ClusterRole;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type ListRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapirbacv1beta1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBindingList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type CreateRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapirbacv1beta1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1CollectionNamespacedRoleBinding
 * operation.
 */
export type DeleteRbacAuthorizationV1beta1CollectionNamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type ReadRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapirbacv1beta1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBinding;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type ReplaceRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapirbacv1beta1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBinding;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type DeleteRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type PatchRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapirbacv1beta1RoleBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBinding;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type ListRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapirbacv1beta1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleList;
    };
};

/**
 * Contains response data for the createRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type CreateRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapirbacv1beta1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1Role;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1CollectionNamespacedRole operation.
 */
export type DeleteRbacAuthorizationV1beta1CollectionNamespacedRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type ReadRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapirbacv1beta1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1Role;
    };
};

/**
 * Contains response data for the replaceRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type ReplaceRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapirbacv1beta1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1Role;
    };
};

/**
 * Contains response data for the deleteRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type DeleteRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type PatchRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapirbacv1beta1Role & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1Role;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1RoleBindingForAllNamespaces
 * operation.
 */
export type ListRbacAuthorizationV1beta1RoleBindingForAllNamespacesResponse = Iok8sapirbacv1beta1RoleBindingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleBindingList;
    };
};

/**
 * Contains response data for the listRbacAuthorizationV1beta1RoleForAllNamespaces operation.
 */
export type ListRbacAuthorizationV1beta1RoleForAllNamespacesResponse = Iok8sapirbacv1beta1RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapirbacv1beta1RoleList;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1ClusterRoleBindingList operation.
 */
export type WatchRbacAuthorizationV1beta1ClusterRoleBindingListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1ClusterRoleBinding operation.
 */
export type WatchRbacAuthorizationV1beta1ClusterRoleBindingResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1ClusterRoleList operation.
 */
export type WatchRbacAuthorizationV1beta1ClusterRoleListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1ClusterRole operation.
 */
export type WatchRbacAuthorizationV1beta1ClusterRoleResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1NamespacedRoleBindingList operation.
 */
export type WatchRbacAuthorizationV1beta1NamespacedRoleBindingListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1NamespacedRoleBinding operation.
 */
export type WatchRbacAuthorizationV1beta1NamespacedRoleBindingResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1NamespacedRoleList operation.
 */
export type WatchRbacAuthorizationV1beta1NamespacedRoleListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1NamespacedRole operation.
 */
export type WatchRbacAuthorizationV1beta1NamespacedRoleResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1RoleBindingListForAllNamespaces
 * operation.
 */
export type WatchRbacAuthorizationV1beta1RoleBindingListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRbacAuthorizationV1beta1RoleListForAllNamespaces operation.
 */
export type WatchRbacAuthorizationV1beta1RoleListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getRouteOpenshiftIoAPIGroup operation.
 */
export type GetRouteOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getRouteOpenshiftIoV1APIResources operation.
 */
export type GetRouteOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type ListRouteOpenshiftIoV1NamespacedRouteResponse = Comgithubopenshiftapiroutev1RouteList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1RouteList;
    };
};

/**
 * Contains response data for the createRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type CreateRouteOpenshiftIoV1NamespacedRouteResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the deleteRouteOpenshiftIoV1CollectionNamespacedRoute operation.
 */
export type DeleteRouteOpenshiftIoV1CollectionNamespacedRouteResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type ReadRouteOpenshiftIoV1NamespacedRouteResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the replaceRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type ReplaceRouteOpenshiftIoV1NamespacedRouteResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the deleteRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type DeleteRouteOpenshiftIoV1NamespacedRouteResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type PatchRouteOpenshiftIoV1NamespacedRouteResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the readRouteOpenshiftIoV1NamespacedRouteStatus operation.
 */
export type ReadRouteOpenshiftIoV1NamespacedRouteStatusResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the replaceRouteOpenshiftIoV1NamespacedRouteStatus operation.
 */
export type ReplaceRouteOpenshiftIoV1NamespacedRouteStatusResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the patchRouteOpenshiftIoV1NamespacedRouteStatus operation.
 */
export type PatchRouteOpenshiftIoV1NamespacedRouteStatusResponse = Comgithubopenshiftapiroutev1Route & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1Route;
    };
};

/**
 * Contains response data for the listRouteOpenshiftIoV1RouteForAllNamespaces operation.
 */
export type ListRouteOpenshiftIoV1RouteForAllNamespacesResponse = Comgithubopenshiftapiroutev1RouteList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiroutev1RouteList;
    };
};

/**
 * Contains response data for the watchRouteOpenshiftIoV1NamespacedRouteList operation.
 */
export type WatchRouteOpenshiftIoV1NamespacedRouteListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRouteOpenshiftIoV1NamespacedRoute operation.
 */
export type WatchRouteOpenshiftIoV1NamespacedRouteResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchRouteOpenshiftIoV1RouteListForAllNamespaces operation.
 */
export type WatchRouteOpenshiftIoV1RouteListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getSchedulingAPIGroup operation.
 */
export type GetSchedulingAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getSchedulingV1beta1APIResources operation.
 */
export type GetSchedulingV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listSchedulingV1beta1PriorityClass operation.
 */
export type ListSchedulingV1beta1PriorityClassResponse = Iok8sapischedulingv1beta1PriorityClassList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapischedulingv1beta1PriorityClassList;
    };
};

/**
 * Contains response data for the createSchedulingV1beta1PriorityClass operation.
 */
export type CreateSchedulingV1beta1PriorityClassResponse = Iok8sapischedulingv1beta1PriorityClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapischedulingv1beta1PriorityClass;
    };
};

/**
 * Contains response data for the deleteSchedulingV1beta1CollectionPriorityClass operation.
 */
export type DeleteSchedulingV1beta1CollectionPriorityClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readSchedulingV1beta1PriorityClass operation.
 */
export type ReadSchedulingV1beta1PriorityClassResponse = Iok8sapischedulingv1beta1PriorityClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapischedulingv1beta1PriorityClass;
    };
};

/**
 * Contains response data for the replaceSchedulingV1beta1PriorityClass operation.
 */
export type ReplaceSchedulingV1beta1PriorityClassResponse = Iok8sapischedulingv1beta1PriorityClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapischedulingv1beta1PriorityClass;
    };
};

/**
 * Contains response data for the deleteSchedulingV1beta1PriorityClass operation.
 */
export type DeleteSchedulingV1beta1PriorityClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchSchedulingV1beta1PriorityClass operation.
 */
export type PatchSchedulingV1beta1PriorityClassResponse = Iok8sapischedulingv1beta1PriorityClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapischedulingv1beta1PriorityClass;
    };
};

/**
 * Contains response data for the watchSchedulingV1beta1PriorityClassList operation.
 */
export type WatchSchedulingV1beta1PriorityClassListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchSchedulingV1beta1PriorityClass operation.
 */
export type WatchSchedulingV1beta1PriorityClassResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getSecurityOpenshiftIoAPIGroup operation.
 */
export type GetSecurityOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getSecurityOpenshiftIoV1APIResources operation.
 */
export type GetSecurityOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the createSecurityOpenshiftIoV1NamespacedPodSecurityPolicyReview
 * operation.
 */
export type CreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicyReviewResponse = Comgithubopenshiftapisecurityv1PodSecurityPolicyReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1PodSecurityPolicyReview;
    };
};

/**
 * Contains response data for the
 * createSecurityOpenshiftIoV1NamespacedPodSecurityPolicySelfSubjectReview operation.
 */
export type CreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySelfSubjectReviewResponse = Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1PodSecurityPolicySelfSubjectReview;
    };
};

/**
 * Contains response data for the
 * createSecurityOpenshiftIoV1NamespacedPodSecurityPolicySubjectReview operation.
 */
export type CreateSecurityOpenshiftIoV1NamespacedPodSecurityPolicySubjectReviewResponse = Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1PodSecurityPolicySubjectReview;
    };
};

/**
 * Contains response data for the listSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type ListSecurityOpenshiftIoV1RangeAllocationResponse = Comgithubopenshiftapisecurityv1RangeAllocationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1RangeAllocationList;
    };
};

/**
 * Contains response data for the createSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type CreateSecurityOpenshiftIoV1RangeAllocationResponse = Comgithubopenshiftapisecurityv1RangeAllocation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1RangeAllocation;
    };
};

/**
 * Contains response data for the deleteSecurityOpenshiftIoV1CollectionRangeAllocation operation.
 */
export type DeleteSecurityOpenshiftIoV1CollectionRangeAllocationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type ReadSecurityOpenshiftIoV1RangeAllocationResponse = Comgithubopenshiftapisecurityv1RangeAllocation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1RangeAllocation;
    };
};

/**
 * Contains response data for the replaceSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type ReplaceSecurityOpenshiftIoV1RangeAllocationResponse = Comgithubopenshiftapisecurityv1RangeAllocation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1RangeAllocation;
    };
};

/**
 * Contains response data for the deleteSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type DeleteSecurityOpenshiftIoV1RangeAllocationResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type PatchSecurityOpenshiftIoV1RangeAllocationResponse = Comgithubopenshiftapisecurityv1RangeAllocation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1RangeAllocation;
    };
};

/**
 * Contains response data for the listSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type ListSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Comgithubopenshiftapisecurityv1SecurityContextConstraintsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1SecurityContextConstraintsList;
    };
};

/**
 * Contains response data for the createSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type CreateSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Comgithubopenshiftapisecurityv1SecurityContextConstraints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1SecurityContextConstraints;
    };
};

/**
 * Contains response data for the deleteSecurityOpenshiftIoV1CollectionSecurityContextConstraints
 * operation.
 */
export type DeleteSecurityOpenshiftIoV1CollectionSecurityContextConstraintsResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type ReadSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Comgithubopenshiftapisecurityv1SecurityContextConstraints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1SecurityContextConstraints;
    };
};

/**
 * Contains response data for the replaceSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type ReplaceSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Comgithubopenshiftapisecurityv1SecurityContextConstraints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1SecurityContextConstraints;
    };
};

/**
 * Contains response data for the deleteSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type DeleteSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type PatchSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Comgithubopenshiftapisecurityv1SecurityContextConstraints & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapisecurityv1SecurityContextConstraints;
    };
};

/**
 * Contains response data for the watchSecurityOpenshiftIoV1RangeAllocationList operation.
 */
export type WatchSecurityOpenshiftIoV1RangeAllocationListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchSecurityOpenshiftIoV1RangeAllocation operation.
 */
export type WatchSecurityOpenshiftIoV1RangeAllocationResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchSecurityOpenshiftIoV1SecurityContextConstraintsList
 * operation.
 */
export type WatchSecurityOpenshiftIoV1SecurityContextConstraintsListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchSecurityOpenshiftIoV1SecurityContextConstraints operation.
 */
export type WatchSecurityOpenshiftIoV1SecurityContextConstraintsResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getStorageAPIGroup operation.
 */
export type GetStorageAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getStorageV1APIResources operation.
 */
export type GetStorageV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listStorageV1StorageClass operation.
 */
export type ListStorageV1StorageClassResponse = Iok8sapistoragev1StorageClassList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1StorageClassList;
    };
};

/**
 * Contains response data for the createStorageV1StorageClass operation.
 */
export type CreateStorageV1StorageClassResponse = Iok8sapistoragev1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1StorageClass;
    };
};

/**
 * Contains response data for the deleteStorageV1CollectionStorageClass operation.
 */
export type DeleteStorageV1CollectionStorageClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readStorageV1StorageClass operation.
 */
export type ReadStorageV1StorageClassResponse = Iok8sapistoragev1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1StorageClass;
    };
};

/**
 * Contains response data for the replaceStorageV1StorageClass operation.
 */
export type ReplaceStorageV1StorageClassResponse = Iok8sapistoragev1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1StorageClass;
    };
};

/**
 * Contains response data for the deleteStorageV1StorageClass operation.
 */
export type DeleteStorageV1StorageClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchStorageV1StorageClass operation.
 */
export type PatchStorageV1StorageClassResponse = Iok8sapistoragev1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1StorageClass;
    };
};

/**
 * Contains response data for the watchStorageV1StorageClassList operation.
 */
export type WatchStorageV1StorageClassListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchStorageV1StorageClass operation.
 */
export type WatchStorageV1StorageClassResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getStorageV1beta1APIResources operation.
 */
export type GetStorageV1beta1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listStorageV1beta1StorageClass operation.
 */
export type ListStorageV1beta1StorageClassResponse = Iok8sapistoragev1beta1StorageClassList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1StorageClassList;
    };
};

/**
 * Contains response data for the createStorageV1beta1StorageClass operation.
 */
export type CreateStorageV1beta1StorageClassResponse = Iok8sapistoragev1beta1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1StorageClass;
    };
};

/**
 * Contains response data for the deleteStorageV1beta1CollectionStorageClass operation.
 */
export type DeleteStorageV1beta1CollectionStorageClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readStorageV1beta1StorageClass operation.
 */
export type ReadStorageV1beta1StorageClassResponse = Iok8sapistoragev1beta1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1StorageClass;
    };
};

/**
 * Contains response data for the replaceStorageV1beta1StorageClass operation.
 */
export type ReplaceStorageV1beta1StorageClassResponse = Iok8sapistoragev1beta1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1StorageClass;
    };
};

/**
 * Contains response data for the deleteStorageV1beta1StorageClass operation.
 */
export type DeleteStorageV1beta1StorageClassResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchStorageV1beta1StorageClass operation.
 */
export type PatchStorageV1beta1StorageClassResponse = Iok8sapistoragev1beta1StorageClass & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1StorageClass;
    };
};

/**
 * Contains response data for the listStorageV1beta1VolumeAttachment operation.
 */
export type ListStorageV1beta1VolumeAttachmentResponse = Iok8sapistoragev1beta1VolumeAttachmentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1VolumeAttachmentList;
    };
};

/**
 * Contains response data for the createStorageV1beta1VolumeAttachment operation.
 */
export type CreateStorageV1beta1VolumeAttachmentResponse = Iok8sapistoragev1beta1VolumeAttachment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1VolumeAttachment;
    };
};

/**
 * Contains response data for the deleteStorageV1beta1CollectionVolumeAttachment operation.
 */
export type DeleteStorageV1beta1CollectionVolumeAttachmentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readStorageV1beta1VolumeAttachment operation.
 */
export type ReadStorageV1beta1VolumeAttachmentResponse = Iok8sapistoragev1beta1VolumeAttachment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1VolumeAttachment;
    };
};

/**
 * Contains response data for the replaceStorageV1beta1VolumeAttachment operation.
 */
export type ReplaceStorageV1beta1VolumeAttachmentResponse = Iok8sapistoragev1beta1VolumeAttachment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1VolumeAttachment;
    };
};

/**
 * Contains response data for the deleteStorageV1beta1VolumeAttachment operation.
 */
export type DeleteStorageV1beta1VolumeAttachmentResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchStorageV1beta1VolumeAttachment operation.
 */
export type PatchStorageV1beta1VolumeAttachmentResponse = Iok8sapistoragev1beta1VolumeAttachment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapistoragev1beta1VolumeAttachment;
    };
};

/**
 * Contains response data for the watchStorageV1beta1StorageClassList operation.
 */
export type WatchStorageV1beta1StorageClassListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchStorageV1beta1StorageClass operation.
 */
export type WatchStorageV1beta1StorageClassResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchStorageV1beta1VolumeAttachmentList operation.
 */
export type WatchStorageV1beta1VolumeAttachmentListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchStorageV1beta1VolumeAttachment operation.
 */
export type WatchStorageV1beta1VolumeAttachmentResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getTemplateOpenshiftIoAPIGroup operation.
 */
export type GetTemplateOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getTemplateOpenshiftIoV1APIResources operation.
 */
export type GetTemplateOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type ListTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1BrokerTemplateInstanceList;
    };
};

/**
 * Contains response data for the createTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type CreateTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Comgithubopenshiftapitemplatev1BrokerTemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1BrokerTemplateInstance;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstance
 * operation.
 */
export type DeleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type ReadTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Comgithubopenshiftapitemplatev1BrokerTemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1BrokerTemplateInstance;
    };
};

/**
 * Contains response data for the replaceTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type ReplaceTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Comgithubopenshiftapitemplatev1BrokerTemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1BrokerTemplateInstance;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type DeleteTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type PatchTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Comgithubopenshiftapitemplatev1BrokerTemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1BrokerTemplateInstance;
    };
};

/**
 * Contains response data for the createNamespacedProcessedTemplateV1 operation.
 */
export type CreateNamespacedProcessedTemplateV1Response = Comgithubopenshiftapitemplatev1Template & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1Template;
    };
};

/**
 * Contains response data for the listTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type ListTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Comgithubopenshiftapitemplatev1TemplateInstanceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstanceList;
    };
};

/**
 * Contains response data for the createTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type CreateTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstance
 * operation.
 */
export type DeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type ReadTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the replaceTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type ReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type DeleteTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type PatchTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the readTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus
 * operation.
 */
export type ReadTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the replaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus
 * operation.
 */
export type ReplaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the patchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus
 * operation.
 */
export type PatchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusResponse = Comgithubopenshiftapitemplatev1TemplateInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstance;
    };
};

/**
 * Contains response data for the listTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type ListTemplateOpenshiftIoV1NamespacedTemplateResponse = Comgithubopenshiftapitemplatev1TemplateList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateList;
    };
};

/**
 * Contains response data for the createTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type CreateTemplateOpenshiftIoV1NamespacedTemplateResponse = Comgithubopenshiftapitemplatev1Template & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1Template;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1CollectionNamespacedTemplate
 * operation.
 */
export type DeleteTemplateOpenshiftIoV1CollectionNamespacedTemplateResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type ReadTemplateOpenshiftIoV1NamespacedTemplateResponse = Comgithubopenshiftapitemplatev1Template & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1Template;
    };
};

/**
 * Contains response data for the replaceTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type ReplaceTemplateOpenshiftIoV1NamespacedTemplateResponse = Comgithubopenshiftapitemplatev1Template & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1Template;
    };
};

/**
 * Contains response data for the deleteTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type DeleteTemplateOpenshiftIoV1NamespacedTemplateResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type PatchTemplateOpenshiftIoV1NamespacedTemplateResponse = Comgithubopenshiftapitemplatev1Template & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1Template;
    };
};

/**
 * Contains response data for the listTemplateOpenshiftIoV1TemplateInstanceForAllNamespaces
 * operation.
 */
export type ListTemplateOpenshiftIoV1TemplateInstanceForAllNamespacesResponse = Comgithubopenshiftapitemplatev1TemplateInstanceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateInstanceList;
    };
};

/**
 * Contains response data for the listTemplateOpenshiftIoV1TemplateForAllNamespaces operation.
 */
export type ListTemplateOpenshiftIoV1TemplateForAllNamespacesResponse = Comgithubopenshiftapitemplatev1TemplateList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapitemplatev1TemplateList;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1BrokerTemplateInstanceList operation.
 */
export type WatchTemplateOpenshiftIoV1BrokerTemplateInstanceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1BrokerTemplateInstance operation.
 */
export type WatchTemplateOpenshiftIoV1BrokerTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1NamespacedTemplateInstanceList
 * operation.
 */
export type WatchTemplateOpenshiftIoV1NamespacedTemplateInstanceListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1NamespacedTemplateInstance operation.
 */
export type WatchTemplateOpenshiftIoV1NamespacedTemplateInstanceResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1NamespacedTemplateList operation.
 */
export type WatchTemplateOpenshiftIoV1NamespacedTemplateListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1NamespacedTemplate operation.
 */
export type WatchTemplateOpenshiftIoV1NamespacedTemplateResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespaces
 * operation.
 */
export type WatchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchTemplateOpenshiftIoV1TemplateListForAllNamespaces operation.
 */
export type WatchTemplateOpenshiftIoV1TemplateListForAllNamespacesResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the getUserOpenshiftIoAPIGroup operation.
 */
export type GetUserOpenshiftIoAPIGroupResponse = Iok8sapimachinerypkgapismetav1APIGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIGroup;
    };
};

/**
 * Contains response data for the getUserOpenshiftIoV1APIResources operation.
 */
export type GetUserOpenshiftIoV1APIResourcesResponse = Iok8sapimachinerypkgapismetav1APIResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1APIResourceList;
    };
};

/**
 * Contains response data for the listUserOpenshiftIoV1Group operation.
 */
export type ListUserOpenshiftIoV1GroupResponse = Comgithubopenshiftapiuserv1GroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1GroupList;
    };
};

/**
 * Contains response data for the createUserOpenshiftIoV1Group operation.
 */
export type CreateUserOpenshiftIoV1GroupResponse = Comgithubopenshiftapiuserv1Group & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Group;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1CollectionGroup operation.
 */
export type DeleteUserOpenshiftIoV1CollectionGroupResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readUserOpenshiftIoV1Group operation.
 */
export type ReadUserOpenshiftIoV1GroupResponse = Comgithubopenshiftapiuserv1Group & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Group;
    };
};

/**
 * Contains response data for the replaceUserOpenshiftIoV1Group operation.
 */
export type ReplaceUserOpenshiftIoV1GroupResponse = Comgithubopenshiftapiuserv1Group & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Group;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1Group operation.
 */
export type DeleteUserOpenshiftIoV1GroupResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchUserOpenshiftIoV1Group operation.
 */
export type PatchUserOpenshiftIoV1GroupResponse = Comgithubopenshiftapiuserv1Group & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Group;
    };
};

/**
 * Contains response data for the listUserOpenshiftIoV1Identity operation.
 */
export type ListUserOpenshiftIoV1IdentityResponse = Comgithubopenshiftapiuserv1IdentityList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1IdentityList;
    };
};

/**
 * Contains response data for the createUserOpenshiftIoV1Identity operation.
 */
export type CreateUserOpenshiftIoV1IdentityResponse = Comgithubopenshiftapiuserv1Identity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Identity;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1CollectionIdentity operation.
 */
export type DeleteUserOpenshiftIoV1CollectionIdentityResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readUserOpenshiftIoV1Identity operation.
 */
export type ReadUserOpenshiftIoV1IdentityResponse = Comgithubopenshiftapiuserv1Identity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Identity;
    };
};

/**
 * Contains response data for the replaceUserOpenshiftIoV1Identity operation.
 */
export type ReplaceUserOpenshiftIoV1IdentityResponse = Comgithubopenshiftapiuserv1Identity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Identity;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1Identity operation.
 */
export type DeleteUserOpenshiftIoV1IdentityResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchUserOpenshiftIoV1Identity operation.
 */
export type PatchUserOpenshiftIoV1IdentityResponse = Comgithubopenshiftapiuserv1Identity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1Identity;
    };
};

/**
 * Contains response data for the createUserOpenshiftIoV1UserIdentityMapping operation.
 */
export type CreateUserOpenshiftIoV1UserIdentityMappingResponse = Comgithubopenshiftapiuserv1UserIdentityMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1UserIdentityMapping;
    };
};

/**
 * Contains response data for the readUserOpenshiftIoV1UserIdentityMapping operation.
 */
export type ReadUserOpenshiftIoV1UserIdentityMappingResponse = Comgithubopenshiftapiuserv1UserIdentityMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1UserIdentityMapping;
    };
};

/**
 * Contains response data for the replaceUserOpenshiftIoV1UserIdentityMapping operation.
 */
export type ReplaceUserOpenshiftIoV1UserIdentityMappingResponse = Comgithubopenshiftapiuserv1UserIdentityMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1UserIdentityMapping;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1UserIdentityMapping operation.
 */
export type DeleteUserOpenshiftIoV1UserIdentityMappingResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchUserOpenshiftIoV1UserIdentityMapping operation.
 */
export type PatchUserOpenshiftIoV1UserIdentityMappingResponse = Comgithubopenshiftapiuserv1UserIdentityMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1UserIdentityMapping;
    };
};

/**
 * Contains response data for the listUserOpenshiftIoV1User operation.
 */
export type ListUserOpenshiftIoV1UserResponse = Comgithubopenshiftapiuserv1UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1UserList;
    };
};

/**
 * Contains response data for the createUserOpenshiftIoV1User operation.
 */
export type CreateUserOpenshiftIoV1UserResponse = Comgithubopenshiftapiuserv1User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1User;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1CollectionUser operation.
 */
export type DeleteUserOpenshiftIoV1CollectionUserResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the readUserOpenshiftIoV1User operation.
 */
export type ReadUserOpenshiftIoV1UserResponse = Comgithubopenshiftapiuserv1User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1User;
    };
};

/**
 * Contains response data for the replaceUserOpenshiftIoV1User operation.
 */
export type ReplaceUserOpenshiftIoV1UserResponse = Comgithubopenshiftapiuserv1User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1User;
    };
};

/**
 * Contains response data for the deleteUserOpenshiftIoV1User operation.
 */
export type DeleteUserOpenshiftIoV1UserResponse = Iok8sapimachinerypkgapismetav1Status & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1Status;
    };
};

/**
 * Contains response data for the patchUserOpenshiftIoV1User operation.
 */
export type PatchUserOpenshiftIoV1UserResponse = Comgithubopenshiftapiuserv1User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Comgithubopenshiftapiuserv1User;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1GroupList operation.
 */
export type WatchUserOpenshiftIoV1GroupListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1Group operation.
 */
export type WatchUserOpenshiftIoV1GroupResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1IdentityList operation.
 */
export type WatchUserOpenshiftIoV1IdentityListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1Identity operation.
 */
export type WatchUserOpenshiftIoV1IdentityResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1UserList operation.
 */
export type WatchUserOpenshiftIoV1UserListResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};

/**
 * Contains response data for the watchUserOpenshiftIoV1User operation.
 */
export type WatchUserOpenshiftIoV1UserResponse = Iok8sapimachinerypkgapismetav1WatchEvent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Iok8sapimachinerypkgapismetav1WatchEvent;
    };
};
